###########################
# Annexation Events concerning Europe
###########################
# By lots of folks
# Converted from on_actions to decisions by Rylock and Dr_Njitram
# Any new post-annexation events need to have their triggers in the KR_on_actions file
###########################

# Table of Contents
#	This might sound arcane to you, but we are following a center-west-north-east-south route. You'll get the hang of it
#
# Europe
#	Central Europe
#		Germany
#			Alsace
#			Luxemburg
#			Rheinland
#			North Germany
#			Schleswig
#			Prussia (+ East & West Prussia)
#			Posen
#			Masuria
#			Memel
#			Upper Silesia
#			Bavaria
#		Poland
#			Bialystok
#		UBD
#			Estonia
#			Latvia
#		Lithuania
#			Vilnius
#		Austria
#			Austria proper
#			Bohemia
#			Galicia
#				Bukovina
#			Hungary
#				Slovakia
#				Transcarpathia
#				Transylvania
#				West Banat
#				Vojvodina
#				Burgenland
#			Croatia
#				Dalmatia
#				Istria
#			Triest
#			Slovenia
#			Trentino
#		Switzerland
#			Romandy
#			Ticino
#
#	Western Europe
#		France
#			Brittany
#			Pas-de-Calais
#		Britain
#			Scotland
#			Wales
#		Ireland
#		Netherlands
#		Belgium
#			Wallonia
#
#	Northern Europe
#		Denmark
#			Iceland
#			Greenland
#		Norway
#		Sweden
#			Aland
#		Finland
#			Karelia
#
#	Eastern Europe
#		Ukraine
#			Brest
#		White Ruthenia
#			Eastern White Ruth.
#		European Russia
#			Dvinsk
#			Siberia
#
#	Southeastern Europe
#		Albania
#		Montenegro
#		Bosnia
#		Kosovo
#		Serbia
#			Nis
#			Macedonia
#		Romania
#		Bulgaria
#		Constantinople
#		Greece
#			Thessaloniki
#			Keraferia
#			Northern Epirus
#
#	Southern Europe
#		Spain
#			Galicia
#			Euskadi
#			Catalonia
#		Portugal
#		Southern France
#		Corsica
#		Italy
#			Aosta
#			Piedmont
#			Lombardy
#			Venetia
#			Emilia
#			Tuscany
#			Central Italy
#			Rome
#			Southern Italy
#			Sardinia
#		Malta

add_namespace = annex

#####################################
##   C E N T R A L   E U R O P E   ##
#####################################

country_event = { #Fate of Alsace-Lorraine
	id = annex.1001
	title = annexation_28
	desc = annexation_28_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					785 = { is_claim_or_core_of_ROOT = yes } #Lorraine
					42 = { is_claim_or_core_of_ROOT = yes } #Palatinate
					780 = { is_claim_or_core_of_ROOT = yes } #Baden
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				785 = { #Lorraine
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:785.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				42 = { #Palatinate
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:france }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:42.owner = { save_event_target_as = german_palatinate }
		}
		if = {
			limit = {
				780 = { #Baden
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:france }
						NOT = { tag = event_target:german_palatinate }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:780.owner = { save_event_target_as = german_baden }
		}
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1001 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:german_palatinate
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:german_palatinate = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:german_baden
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:german_baden = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		28 = { transfer_state_and_notify = yes } #Alsace-Lorraine
	}

	option = { #Give to German tag 1 (owner of Palatinate)
		log = "[GetLogInfo]: event annex.1001 option annex.1001.a"
		name = annex.1001.a
		trigger = {
			has_event_target = german_palatinate
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:german_palatinate = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:france
				event_target:france = {
					is_french_tag = yes
					is_subject = no
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:german_palatinate }
				is_ally_with = event_target:france
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:france = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:german_palatinate }
				is_ally_with = event_target:german_baden
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:german_baden = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:german_palatinate = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_palatinate }
		28 = { transfer_state_and_notify = yes } #Alsace-Lorraine
	}

	option = { #Give to German tag 2 (owner of Baden)
		log = "[GetLogInfo]: event annex.1001 option annex.1001.b"
		name = annex.1001.b
		trigger = {
			has_event_target = german_baden
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:german_baden = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:france
				event_target:france = {
					is_french_tag = yes
					is_subject = no
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:german_baden }
				is_ally_with = event_target:france
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:france = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:german_baden }
				is_ally_with = event_target:german_palatinate
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:german_palatinate = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:german_baden = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_baden }
		28 = { transfer_state_and_notify = yes } #Alsace-Lorraine
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1001 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		28 = { transfer_state_and_notify = yes } #Alsace-Lorraine
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1001 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		28 = { add_claim_of_ROOT = yes } #Alsace-Lorraine
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1001 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Luxembourg
	id = annex.1002
	title = annexation_8
	desc = annexation_8_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					948 = { is_claim_or_core_of_ROOT = yes } #Liège
					28 = { is_claim_or_core_of_ROOT = yes } #Alsace-Lorraine
					781 = { is_claim_or_core_of_ROOT = yes } #Western Rhineland
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = {
					is_french_tag = yes
					NOT = { owns_state = 948 } #Liège
					948 = { is_claim_or_core_of_ROOT = no } #Liège
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				948 = { #Liège
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:948.owner = { save_event_target_as = belgium }
		}
		if = {
			limit = {
				28 = { #Alsace-Lorraine
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:belgium }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:28.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				781 = { #Western Rhineland
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:belgium }
						NOT = { tag = event_target:france }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:781.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give to Belgium
		log = "[GetLogInfo]: event annex.1002 option annex.give_to_belgium"
		name = annex.give_to_belgium
		trigger = {
			has_event_target = belgium
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					is_french_tag = no
					owns_state = 948 #Liège
				}
			}
			modifier = {
				factor = 0
				event_target:belgium = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:france
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:france = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:germany
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:germany = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:belgium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		8 = { transfer_state_and_notify = yes } #Luxembourg
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1002 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					is_french_tag = no
					owns_state = 948 #Liège
				}
			}
			modifier = {
				factor = 0
				event_target:france = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:belgium
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:belgium = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:germany
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:germany = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		8 = { transfer_state_and_notify = yes } #Luxembourg
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1002 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					is_french_tag = no
					owns_state = 948 #Liège
				}
			}
			modifier = {
				factor = 0
				event_target:germany = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				is_ally_with = event_target:france
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:france = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				is_ally_with = event_target:belgium
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:belgium = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		8 = { transfer_state_and_notify = yes } #Luxembourg
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1002 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		8 = { transfer_state_and_notify = yes } #Luxembourg
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1002 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_french_tag = yes
				has_event_target = belgium
				NOT = { owns_state = 948 } #Liège
			}
		}
		if = {
			limit = { is_belgian_tag = yes }
			8 = { remove_claim_and_add_core_of_ROOT = yes } #Luxembourg
		}
		else = {
			8 = { add_claim_of_ROOT = yes } #Luxembourg
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1002 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Rhineland
	id = annex.1003
	title = annexation_781
	desc = annexation_781_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_german_tags = yes
			if = {
				limit = {
					OR = {
						is_german_unifier_tag = yes
						55 = { is_claim_or_core_of_ROOT = yes } #Hesse
						57 = { is_claim_or_core_of_ROOT = yes } #Westphalia
						AND = {
							AUS_can_form_germany = yes
							OR = {
								has_subject = BAY
								any_owned_state = {
									is_south_germany = yes
									state_strategic_value > 89
								}
							}
							OR = {
								has_subject = NGF
								any_owned_state = {
									is_north_germany = yes
									state_strategic_value > 99
								}
							}
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = { is_french_tag = yes }
				if = {
					limit = {
						OR = {
							42 = { is_valid_annexation_state = yes } #Western Rhineland
							781 = { is_valid_annexation_state = yes } #Palatinate
						}
					}
					save_event_target_as = controls_rhine_west_bank
				}
				if = {
					limit = { 51 = { is_valid_annexation_state = yes } } #Eastern Rhineland
					save_event_target_as = controls_rhine_east_bank
				}
			}
			annexations_create_german_event_targets = yes
			if = {
				limit = { annexations_germany_is_independent_ally_or_puppet_of_ROOT = no }
				if = {
					limit = {
						55 = { #Hesse
							annexations_state_owner_is_valid_grant_target = yes
							owner = {
								NOT = { tag = event_target:germany }
								ROOT_can_grant_land = yes
							}
						}
					}
					var:55.owner = { save_event_target_as = hesse }
				}
				if = {
					limit = {
						57 = { #Westphalia
							annexations_state_owner_is_valid_grant_target = yes
							owner = {
								NOT = { tag = event_target:germany }
								NOT = { tag = event_target:hesse }
								51 = { annexations_required_state_is_owned_by_either_side = yes } #Eastern Rhineland
								ROOT_can_grant_land = yes
							}
						}
					}
					var:57.owner = { save_event_target_as = westphalia }
				}
			}
		}
	}

	option = { #release republican Germany
		log = "[GetLogInfo]: event annex.1003 option annex.europe.release_germany_republic"
		name = annex.europe.release_germany_republic
		trigger = {
			annexations_can_release_republican_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_major = no
				OR = {
					has_event_target = germany
					has_event_target = hesse
					has_event_target = westphalia
				}
			}
			modifier = {
				factor = 0
				is_monarchy = yes
				is_in_europe = yes
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release socialist Germany
		log = "[GetLogInfo]: event annex.1003 option annex.europe.release_germany_socialist"
		name = annex.europe.release_germany_socialist
		trigger = {
			annexations_can_release_socialist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_major = no
				OR = {
					has_event_target = germany
					has_event_target = hesse
					has_event_target = westphalia
				}
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release imperial Germany
		log = "[GetLogInfo]: event annex.1003 option annex.europe.release_germany_hohenzollern"
		name = annex.europe.release_germany_hohenzollern
		trigger = {
			annexations_can_release_monarchist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_major = no
				OR = {
					has_event_target = germany
					has_event_target = hesse
					has_event_target = westphalia
				}
			}
			modifier = {
				factor = 0
				is_monarchy = no
				is_in_europe = no
			}
		}
		annexations_release_hohenzollern_germany = yes
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1003 option annex.1003.a"
		name = annex.1003.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = RHI }
		every_state = {
			limit = { is_rhineland = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
		RHI_puppet_setup = yes
	}

	option = { #puppet with reparations
		log = "[GetLogInfo]: event annex.1003 option annex.1003.b"
		name = annex.1003.b
		trigger = {
			is_major = yes
			is_subject = no
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = RHI }
		every_state = {
			limit = { is_rhineland = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
		RHI_puppet_setup = yes
		var:tag_to_release = { add_ideas = RHI_rhenish_reparations }
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1003 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				OR = {
					is_major = yes
					is_ally_with = event_target:hesse
					is_ally_with = event_target:westphalia
				}
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		every_owned_state = {
			limit = {
				is_rhineland = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to German tag 1 (owner of Hesse)
		log = "[GetLogInfo]: event annex.1003 option annex.1003.c"
		name = annex.1003.c
		trigger = {
			has_event_target = hesse
		}
		ai_chance = {
			base = 75
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:hesse }
				OR = {
					is_ally_with = event_target:germany
					is_ally_with = event_target:westphalia
				}
			}
			modifier = {
				factor = 0.1
				event_target:hesse = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:hesse }
		every_owned_state = {
			limit = {
				is_rhineland = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to German tag 2 (owner of Westphalia)
		log = "[GetLogInfo]: event annex.1003 option annex.1003.d"
		name = annex.1003.d
		trigger = {
			has_event_target = westphalia
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:westphalia }
				OR = {
					is_ally_with = event_target:germany
					is_ally_with = event_target:hesse
				}
			}
			modifier = {
				factor = 0.1
				event_target:germany_saxony = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:westphalia }
		every_owned_state = {
			limit = {
				is_rhineland = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #give it to the overlord
		log = "[GetLogInfo]: event annex.1003 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_rhineland = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1003 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = {
				original_tag = AUS
				NOT = { has_cosmetic_tag = AUS_germany }
			}
			AUS_form_germany = yes
		}
		else = {
			every_state = {
				limit = { is_rhineland = yes }
				add_claim_of_ROOT = yes
			}
		}
	}

	option = { #France only: annex the Rhineland, give the rest to Germany
		log = "[GetLogInfo]: event annex.1003 option annex.1003.e"
		name = annex.1003.e
		trigger = {
			has_event_target = controls_rhine_west_bank
			has_event_target = germany
			is_subject = no
		}
		ai_chance = { base = 0 }
		42 = { add_claim_of_ROOT = yes } #Palatinate
		781 = { add_claim_of_ROOT = yes } #Western Rhineland

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:germany }
		51 = { transfer_if_owned = yes }
	}

	option = { #France only: annex the Rhineland, give the rest to owner of Hesse
		log = "[GetLogInfo]: event annex.1003 option annex.1003.f"
		name = annex.1003.f
		trigger = {
			has_event_target = controls_rhine_west_bank
			has_event_target = hesse
			is_subject = no
		}
		ai_chance = { base = 0 }
		42 = { add_claim_of_ROOT = yes } #Palatinate
		781 = { add_claim_of_ROOT = yes } #Western Rhineland

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:hesse }
		51 = { transfer_if_owned = yes }
	}

	option = { #France only: annex the Rhineland, give the rest to owner of Westphalia
		log = "[GetLogInfo]: event annex.1003 option annex.1003.g"
		name = annex.1003.g
		trigger = {
			has_event_target = controls_rhine_west_bank
			has_event_target = westphalia
			is_subject = no
		}
		ai_chance = { base = 0 }
		42 = { add_claim_of_ROOT = yes } #Palatinate
		781 = { add_claim_of_ROOT = yes } #Western Rhineland

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:westphalia }
		51 = { transfer_if_owned = yes }
	}

	option = { #France only: annex the Rhineland
		log = "[GetLogInfo]: event annex.1003 option annex.1003.h"
		name = annex.1003.h
		trigger = {
			has_event_target = controls_rhine_west_bank
			NOT = { has_event_target = controls_rhine_east_bank }
			is_subject = no
		}
		ai_chance = { base = 0 }
		42 = { add_claim_of_ROOT = yes } #Palatinate
		781 = { add_claim_of_ROOT = yes } #Western Rhineland
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1003 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of North Germany
	id = annex.1004
	title = annexation_59
	desc = annexation_59_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_german_tags = yes
			if = {
				limit = {
					OR = {
						is_german_unifier_tag = yes
						AND = {
							64 = { is_claim_or_core_of_ROOT = yes } #Brandenburg
							owns_state = 147 #Prussian Saxony
						}
						AND = {
							AUS_can_form_germany = yes
							OR = {
								has_subject = BAY
								any_owned_state = {
									is_south_germany = yes
									state_strategic_value > 89
								}
							}
						}
					}
				}
				save_event_target_as = can_annex
			}
			annexations_create_german_event_targets = yes
			if = {
				limit = {
					annexations_germany_is_independent_ally_or_puppet_of_ROOT = no
					PRE = { ROOT_can_grant_land = yes }
				}
				PRE = { save_event_target_as = prussia }
			}
			58 = { retain_state = yes } #Schleswig-Holstein
		}
	}

	option = { #release republican Germany
		log = "[GetLogInfo]: event annex.1004 option annex.europe.release_germany_republic"
		name = annex.europe.release_germany_republic
		trigger = {
			annexations_can_release_republican_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				OR = {
					has_event_target = germany
					has_event_target = prussia
				}
			}
			modifier = {
				factor = 0
				is_monarchy = yes
				is_in_europe = yes
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release socialist Germany
		log = "[GetLogInfo]: event annex.1004 option annex.europe.release_germany_socialist"
		name = annex.europe.release_germany_socialist
		trigger = {
			annexations_can_release_socialist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				OR = {
					has_event_target = germany
					has_event_target = prussia
				}
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release imperial Germany
		log = "[GetLogInfo]: event annex.1004 option annex.europe.release_germany_hohenzollern"
		name = annex.europe.release_germany_hohenzollern
		trigger = {
			annexations_can_release_monarchist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				OR = {
					has_event_target = germany
					has_event_target = prussia
				}
			}
			modifier = {
				factor = 0
				is_monarchy = no
				is_in_europe = no
			}
		}
		annexations_release_hohenzollern_germany = yes
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1004 option annex.1004.a"
		name = annex.1004.a
		trigger = {
			annexations_can_release_german_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = NGF }
		every_state = {
			limit = { is_north_germany = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1004 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				OR = {
					is_major = yes
					is_ally_with = event_target:prussia
				}
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		every_owned_state = {
			limit = {
				is_north_germany = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to Prussia
		log = "[GetLogInfo]: event annex.1004 option annex.europe.give_to_prussia"
		name = annex.europe.give_to_prussia
		trigger = {
			has_event_target = prussia
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:prussia }
				is_ally_with = event_target:germany
			}
			modifier = {
				factor = 0.1
				event_target:prussia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:prussia }
		every_owned_state = {
			limit = {
				OR = {
					is_north_germany = yes
					is_saxony = yes
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1004 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_north_germany = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1004 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = {
				original_tag = AUS
				NOT = { has_cosmetic_tag = AUS_germany }
			}
			AUS_form_germany = yes
		}
		else = {
			if = {
				limit = {
					original_tag = PRE
					NOT = { has_cosmetic_tag = PRE_north_germany }
				}
				set_cosmetic_tag = PRE_north_germany
			}
			every_state = {
				limit = { is_north_germany = yes }
				add_claim_of_ROOT = yes
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1004 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Northern Schleswig
	id = annex.1005
	title = annexation_782
	desc = annexation_782_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					99 = { is_claim_or_core_of_ROOT = yes } #Jutland
					58 = { is_claim_or_core_of_ROOT = yes } #Schleswig-Holstein
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				99 = { #Jutland
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:99.owner = { save_event_target_as = denmark }
		}
		if = {
			limit = {
				58 = { #Schleswig-Holstein
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:denmark }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:58.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give it to Denmark/Scandinavia
		log = "[GetLogInfo]: event annex.1005 option annex.europe.give_to_denmark"
		name = annex.europe.give_to_denmark
		trigger = {
			has_event_target = denmark
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:denmark = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:denmark }
				is_ally_with = event_target:germany
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:germany = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:denmark = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:denmark }
		782 = { transfer_state_and_notify = yes } #Northern Schleswig
	}

	option = { #Give it to the Germans
		log = "[GetLogInfo]: event annex.1005 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:germany = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				is_ally_with = event_target:denmark
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:denmark = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		782 = { transfer_state_and_notify = yes } #Northern Schleswig
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1005 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		782 = { transfer_state_and_notify = yes } #Northern Schleswig
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1005 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		782 = { add_claim_of_ROOT = yes } #Northern Schleswig
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1005 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Prussia
	id = annex.1006
	title = annexation_64
	desc = annexation_64_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_german_tags = yes
			if = {
				limit = {
					OR = {
						is_german_unifier_tag = yes
						original_tag = NGF
						AND = {
							AUS_can_form_germany = yes
							OR = {
								has_subject = BAY
								any_owned_state = {
									is_south_germany = yes
									state_strategic_value > 89
								}
							}
							OR = {
								has_subject = NGF
								any_owned_state = {
									is_north_germany = yes
									state_strategic_value > 99
								}
							}
						}
					}
				}
				save_event_target_as = can_annex
			}
			annexations_create_german_event_targets = yes
			if = {
				limit = {
					annexations_germany_is_independent_ally_or_puppet_of_ROOT = no
					NGF = { ROOT_can_grant_land = yes }
				}
				NGF = { save_event_target_as = north_germany }
			}
			58 = { retain_state = yes } #Schleswig-Holstein
		}
	}

	option = { #release republican Germany
		log = "[GetLogInfo]: event annex.1006 option annex.europe.release_germany_republic"
		name = annex.europe.release_germany_republic
		trigger = {
			annexations_can_release_republican_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = germany
			}
			modifier = {
				factor = 0
				has_event_target = north_germany
				annexations_AI_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 0
				is_monarchy = yes
				is_in_europe = yes
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release socialist Germany
		log = "[GetLogInfo]: event annex.1006 option annex.europe.release_germany_socialist"
		name = annex.europe.release_germany_socialist
		trigger = {
			annexations_can_release_socialist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = germany
			}
			modifier = {
				factor = 0
				has_event_target = north_germany
				annexations_AI_country_wants_to_dismantle_germany = no
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release imperial Germany
		log = "[GetLogInfo]: event annex.1006 option annex.europe.release_germany_hohenzollern"
		name = annex.europe.release_germany_hohenzollern
		trigger = {
			annexations_can_release_monarchist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = germany
			}
			modifier = {
				factor = 0
				has_event_target = north_germany
				annexations_AI_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 0
				is_monarchy = no
				is_in_europe = no
			}
		}
		annexations_release_hohenzollern_germany = yes
	}

	option = { #puppet PRE
		log = "[GetLogInfo]: event annex.1006 option annex.1006.a"
		name = annex.1006.a
		trigger = {
			annexations_can_release_german_splinters = yes
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = germany
			}
			modifier = {
				factor = 0
				has_event_target = north_germany
				annexations_AI_country_wants_to_dismantle_germany = no
			}
		}
		annexations_release_prussia = yes
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1006 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				OR = {
					is_major = yes
					is_ally_with = event_target:north_germany
				}
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		every_owned_state = {
			limit = {
				OR = {
					is_prussia = yes
					is_saxony = yes
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to NGF
		log = "[GetLogInfo]: event annex.1006 option annex.1006.c"
		name = annex.1006.c
		trigger = {
			has_event_target = north_germany
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:north_germany }
				is_ally_with = event_target:germany
			}
			modifier = {
				factor = 0.1
				event_target:north_germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:north_germany }
		every_owned_state = {
			limit = {
				OR = {
					is_prussia = yes
					is_saxony = yes
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1006 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_prussia = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1006 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = {
				original_tag = AUS
				NOT = { has_cosmetic_tag = AUS_germany }
			}
			AUS_form_germany = yes
		}
		else = {
			every_state = {
				limit = {
					OR = {
						is_prussia = yes
						is_saxony = yes
					}
				}
				add_claim_of_ROOT = yes
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1006 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of West Prussia
	id = annex.1007
	title = annexation_776
	desc = annexation_776_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					63 = { is_claim_or_core_of_ROOT = yes } #Farther Pomerania
					86 = { is_claim_or_core_of_ROOT = yes } #Posen
					777 = { is_claim_or_core_of_ROOT = yes } #Masuria
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				63 = { #Farther Pomerania
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:63.owner = { save_event_target_as = pomerania }
		}
		if = {
			limit = {
				86 = { #Posen
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:pomerania }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:86.owner = { save_event_target_as = poznan }
		}
		if = {
			limit = {
				777 = { #Masuria
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:pomerania }
						NOT = { tag = event_target:poznan }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:777.owner = { save_event_target_as = masuria }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1007 option annex.1007.a"
		name = annex.1007.a
		trigger = {
			has_event_target = poznan
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:poznan }
				is_ally_with = event_target:pomerania
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:pomerania = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:poznan }
				is_ally_with = event_target:masuria
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:masuria = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:poznan = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:poznan }
		776 = { transfer_state_and_notify = yes } #West Prussia
	}

	option = { #Give it to German tag 1 (owner of Farther Pomerania)
		log = "[GetLogInfo]: event annex.1007 option annex.1007.b"
		name = annex.1007.b
		trigger = {
			has_event_target = pomerania
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = poznan
				event_target:poznan = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				has_event_target = masuria
				event_target:masuria = { original_tag = EPR }
				NOT = { event_target:pomerania = { original_tag = EPR } }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pomerania }
				is_ally_with = event_target:poznan
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:poznan = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pomerania }
				is_ally_with = event_target:masuria
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:masuria = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:pomerania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:pomerania }
		776 = { transfer_state_and_notify = yes } #West Prussia
	}

	option = { #Give it to German tag 2 (owner of Masuria)
		log = "[GetLogInfo]: event annex.1007 option annex.europe.give_to_owner_of_masuria"
		name = annex.europe.give_to_owner_of_masuria
		trigger = {
			has_event_target = masuria
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = poznan
				event_target:poznan = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				has_event_target = pomerania
				event_target:masuria = { original_tag = EPR }
				NOT = { event_target:masuria = { original_tag = EPR } }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:masuria }
				is_ally_with = event_target:poznan
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:poznan = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:masuria }
				is_ally_with = event_target:pomerania
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:pomerania = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:masuria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:masuria }
		776 = { transfer_state_and_notify = yes } #West Prussia
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1007 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		776 = { transfer_state_and_notify = yes } #West Prussia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1007 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		776 = { add_claim_of_ROOT = yes } #West Prussia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1007 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of East Prussia
	id = annex.1008
	title = annexation_5
	desc = annexation_5_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					62 = { is_claim_or_core_of_ROOT = yes } #Hither Pomerania
					63 = { is_claim_or_core_of_ROOT = yes } #Farther Pomerania
					777 = { is_claim_or_core_of_ROOT = yes } #Masuria
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = {
					original_tag = POL
					NOT = { has_government = national_populist }
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				62 = { #Hither Pomerania
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:62.owner = { save_event_target_as = hither_pomerania }
		}
		if = {
			limit = {
				63 = { #Farther Pomerania
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:hither_pomerania }
					}
				}
			}
			var:63.owner = { save_event_target_as = farther_pomerania }
		}
		if = {
			limit = {
				777 = { #Masuria
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:farther_pomerania }
						NOT = { tag = event_target:hither_pomerania }
						OR = {
							is_german_tag = yes
							is_subject = no
						}
					}
				}
			}
			var:777.owner = { save_event_target_as = masuria }
		}
		188 = { retain_state = yes } #Memel
		776 = { retain_state = yes } #West Prussia
		777 = { retain_state = yes } #Masuria
	}

	option = { #Release East Prussia
		log = "[GetLogInfo]: event annex.1008 option annex.1008.a"
		name = annex.1008.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = EPR }
		every_state = {
			limit = { is_old_prussia = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
	}

	option = { #Give to German owner of Hither Pomerania
		log = "[GetLogInfo]: event annex.1008 option annex.1008.b"
		name = annex.1008.b
		trigger = {
			has_event_target = hither_pomerania
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:hither_pomerania }
				is_ally_with = event_target:farther_pomerania
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:farther_pomerania }
				is_ally_with = event_target:masuria
			}
			modifier = {
				factor = 0.1
				event_target:hither_pomerania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:hither_pomerania }
		5 = { transfer_state_and_notify = yes } #East Prussia
	}

	option = { #Give to German owner of Farther Pomerania
		log = "[GetLogInfo]: event annex.1008 option annex.1008.c"
		name = annex.1008.c
		trigger = {
			has_event_target = farther_pomerania
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:farther_pomerania }
				is_ally_with = event_target:hither_pomerania
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:farther_pomerania }
				is_ally_with = event_target:masuria
			}
			modifier = {
				factor = 0.1
				event_target:farther_pomerania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:farther_pomerania }
		5 = { transfer_state_and_notify = yes } #East Prussia
	}

	option = { #Give to owner of Masuria
		log = "[GetLogInfo]: event annex.1008 option annex.europe.give_to_owner_of_masuria"
		name = annex.europe.give_to_owner_of_masuria
		trigger = {
			has_event_target = masuria
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:masuria }
				is_ally_with = event_target:hither_pomerania
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:masuria }
				is_ally_with = event_target:farther_pomerania
			}
			modifier = {
				factor = 0.1
				event_target:masuria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:masuria }
		5 = { transfer_state_and_notify = yes } #East Prussia
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1008 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		5 = { transfer_state_and_notify = yes } #East Prussia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1008 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = no
			}
		}
		5 = { add_claim_of_ROOT = yes } #East Prussia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1008 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Posen
	id = annex.1009
	title = annexation_86
	desc = annexation_86_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					87 = { is_claim_or_core_of_ROOT = yes } #Kalisz
					66 = { is_claim_or_core_of_ROOT = yes } #Lower Silesia
					68 = { is_claim_or_core_of_ROOT = yes } #Neumark
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				87 = { #Hither Pomerania
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:87.owner = { save_event_target_as = kalisz }
		}
		if = {
			limit = {
				66 = { #Lower Silesia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:kalisz }
					}
				}
			}
			var:66.owner = { save_event_target_as = lower_silesia }
		}
		if = {
			limit = {
				68 = { #Neumark
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:kalisz }
						NOT = { tag = event_target:lower_silesia }
					}
				}
			}
			var:68.owner = { save_event_target_as = neumark }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1009 option annex.europe.give_to_owner_of_kalisz"
		name = annex.europe.give_to_owner_of_kalisz
		trigger = {
			has_event_target = kalisz
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:kalisz }
				is_ally_with = event_target:lower_silesia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:lower_silesia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:kalisz }
				is_ally_with = event_target:neumark
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:neumark = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:kalisz = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:kalisz }
		86 = { transfer_state_and_notify = yes } #Posen
	}

	option = { #Give to German tag 1 (owner of Lower Silesia)
		log = "[GetLogInfo]: event annex.1009 option annex.europe.give_to_owner_of_lower_silesia"
		name = annex.europe.give_to_owner_of_lower_silesia
		trigger = {
			has_event_target = lower_silesia
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = kalisz
				event_target:kalisz = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lower_silesia }
				is_ally_with = event_target:kalisz
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:kalisz = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lower_silesia }
				is_ally_with = event_target:neumark
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:neumark = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:lower_silesia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lower_silesia }
		86 = { transfer_state_and_notify = yes } #Posen
	}

	option = { #Give to German tag 2 (owner of Neumark)
		log = "[GetLogInfo]: event annex.1009 option annex.1009.a"
		name = annex.1009.a
		trigger = {
			has_event_target = neumark
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = kalisz
				event_target:kalisz = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:neumark }
				is_ally_with = event_target:kalisz
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:kalisz = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:neumark }
				is_ally_with = event_target:lower_silesia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:lower_silesia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:neumark = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:neumark }
		86 = { transfer_state_and_notify = yes } #Posen
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1009 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		86 = { transfer_state_and_notify = yes } #Posen
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1009 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		86 = { add_claim_of_ROOT = yes } #Posen
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1009 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Masuria
	id = annex.1010
	title = annexation_777
	desc = annexation_777_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					98 = { is_claim_or_core_of_ROOT = yes } #Plock
					AND = {
						5 = { is_claim_or_core_of_ROOT = yes } #East Prussia
						NOT = { tag = RUS }
					}
					776 = { is_claim_or_core_of_ROOT = yes } #West Prussia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				98 = { #Plock
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:98.owner = { save_event_target_as = plock }
		}
		if = {
			limit = {
				5 = { #East Prussia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:plock }
					}
				}
			}
			var:5.owner = { save_event_target_as = east_prussia }
		}
		if = {
			limit = {
				776 = { #West Prussia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:plock }
						NOT = { tag = event_target:east_prussia }
					}
				}
			}
			var:776.owner = { save_event_target_as = west_prussia }
		}
	}

	option = { #Give to Poland
		log = "[GetLogInfo]: event annex.1010 option annex.1010.a"
		name = annex.1010.a
		trigger = {
			has_event_target = plock
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:plock }
				is_ally_with = event_target:east_prussia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:east_prussia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:plock }
				is_ally_with = event_target:west_prussia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:west_prussia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:plock = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:plock }
		777 = { transfer_state_and_notify = yes } #Masuria
	}

	option = { #Give to German owner of East Prussia
		log = "[GetLogInfo]: event annex.1010 option annex.europe.give_to_east_prussia"
		name = annex.europe.give_to_east_prussia
		trigger = {
			has_event_target = east_prussia
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = plock
				event_target:plock = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:east_prussia }
				is_ally_with = event_target:plock
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:plock = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:east_prussia }
				is_ally_with = event_target:west_prussia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:west_prussia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:east_prussia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:east_prussia }
		777 = { transfer_state_and_notify = yes } #Masuria
	}

	option = { #Give to German owner of West Prussia
		log = "[GetLogInfo]: event annex.1010 option annex.1010.b"
		name = annex.1010.b
		trigger = {
			has_event_target = west_prussia
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = plock
				event_target:plock = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:west_prussia }
				is_ally_with = event_target:plock
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:plock = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:west_prussia }
				is_ally_with = event_target:east_prussia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:east_prussia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:west_prussia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:west_prussia }
		777 = { transfer_state_and_notify = yes } #Masuria
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1010 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		777 = { transfer_state_and_notify = yes } #Masuria
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1010 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		777 = { add_claim_of_ROOT = yes } #Masuria
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1010 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Memel
	id = annex.1011
	title = annexation_188
	desc = annexation_188_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					189 = { is_claim_or_core_of_ROOT = yes } #Samogitia
					5 = { is_claim_or_core_of_ROOT = yes } #East Prussia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				189 = { #Samogitia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:189.owner = { save_event_target_as = samogitia }
		}
		if = {
			limit = {
				5 = { #East Prussia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:samogitia }
					}
				}
			}
			var:5.owner = { save_event_target_as = east_prussia }
		}
	}

	option = { #Give to Lithuania
		log = "[GetLogInfo]: event annex.1011 option annex.1011.a"
		name = annex.1011.a
		trigger = {
			has_event_target = samogitia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
				if = {
					limit = { original_tag = POL }
					event_target:samogitia = { is_german_tag = yes }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:samogitia }
				is_ally_with = event_target:east_prussia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:east_prussia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:samogitia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:samogitia }
		188 = { transfer_state_and_notify = yes } #Memel
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1011 option annex.europe.give_to_east_prussia"
		name = annex.europe.give_to_east_prussia
		trigger = {
			has_event_target = east_prussia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = samogitia
				event_target:samogitia = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:east_prussia }
				is_ally_with = event_target:samogitia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:samogitia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:east_prussia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:east_prussia }
		188 = { transfer_state_and_notify = yes } #Memel
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1011 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		188 = { transfer_state_and_notify = yes } #Memel
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1011 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				original_tag = POL
				has_event_target = samogitia
				event_target:samogitia = { is_german_tag = no }
			}
		}
		188 = { add_claim_of_ROOT = yes } #Memel
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1011 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Upper Silesia
	id = annex.1012
	title = annexation_67
	desc = annexation_67_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					87 = { is_claim_or_core_of_ROOT = yes } #Kalisz
					66 = { is_claim_or_core_of_ROOT = yes } #Lower Silesia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				87 = { #Kalisz
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:87.owner = { save_event_target_as = kalisz }
		}
		if = {
			limit = {
				66 = { #Lower Silesia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:kalisz }
					}
				}
			}
			var:66.owner = { save_event_target_as = lower_silesia }
		}
	}

	option = { #Give to Poland
		log = "[GetLogInfo]: event annex.1012 option annex.europe.give_to_owner_of_kalisz"
		name = annex.europe.give_to_owner_of_kalisz
		trigger = {
			has_event_target = kalisz
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:kalisz }
				is_ally_with = event_target:lower_silesia
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:lower_silesia = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:kalisz = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:kalisz }
		67 = { transfer_state_and_notify = yes } #Upper Silesia
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1012 option annex.europe.give_to_owner_of_lower_silesia"
		name = annex.europe.give_to_owner_of_lower_silesia
		trigger = {
			has_event_target = lower_silesia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = kalisz
				event_target:kalisz = { is_german_tag = no }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lower_silesia }
				is_ally_with = event_target:kalisz
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:kalisz = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:lower_silesia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lower_silesia }
		67 = { transfer_state_and_notify = yes } #Upper Silesia
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1012 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		67 = { transfer_state_and_notify = yes } #Upper Silesia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1012 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		67 = { add_claim_of_ROOT = yes } #Upper Silesia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1012 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of South Germany
	id = annex.1013
	title = annexation_52
	desc = annexation_52_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_german_tags = yes
			if = {
				limit = {
					OR = {
						is_german_unifier_tag = yes
						AND = {
							original_tag = AUS
							AUS_can_annex_german_lands = yes
						}
					}
				}
				save_event_target_as = can_annex
			}
			annexations_create_german_event_targets = yes
			if = {
				limit = {
					AUS = {
						ROOT_can_grant_land = yes
						AUS_can_annex_german_lands = yes
					}
				}
				AUS = { save_event_target_as = austria }
			}
		}
	}

	option = { #release republican Germany
		log = "[GetLogInfo]: event annex.1013 option annex.europe.release_germany_republic"
		name = annex.europe.release_germany_republic
		trigger = {
			annexations_can_release_republican_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = germany
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = austria
				annexations_AI_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 0
				is_monarchy = yes
				is_in_europe = yes
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release socialist Germany
		log = "[GetLogInfo]: event annex.1013 option annex.europe.release_germany_socialist"
		name = annex.europe.release_germany_socialist
		trigger = {
			annexations_can_release_socialist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = germany
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = austria
				annexations_AI_country_wants_to_dismantle_germany = no
			}
		}
		annexations_release_republican_germany = yes
	}

	option = { #release imperial Germany
		log = "[GetLogInfo]: event annex.1013 option annex.europe.release_germany_hohenzollern"
		name = annex.europe.release_germany_hohenzollern
		trigger = {
			annexations_can_release_monarchist_germany = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = germany
			}
			modifier = {
				factor = 0
				is_major = no
				has_event_target = austria
				annexations_AI_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 0
				is_monarchy = no
				is_in_europe = no
			}
		}
		annexations_release_hohenzollern_germany = yes
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1013 option annex.1013.a"
		name = annex.1013.a
		trigger = {
			NOT = { country_exists = BAY }
			annexations_can_release_german_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = BAY }
		every_state = {
			limit = { region = 7 } #Upper Germany
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
		BAY_puppet_setup = yes
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1013 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				is_ally_with = event_target:austria
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		every_owned_state = {
			limit = {
				is_south_germany = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #give to AUS
		log = "[GetLogInfo]: event annex.1013 option annex.europe.give_to_austria"
		name = annex.europe.give_to_austria
		trigger = {
			has_event_target = austria
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:austria }
				is_ally_with = event_target:germany
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		every_owned_state = {
			limit = {
				is_south_germany = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1013 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_south_germany = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1013 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = {
				original_tag = AUS
				NOT = { has_cosmetic_tag = AUS_germany }
			}
			if = {
				limit = {
					AUS_is_led_by_habsburgs = no
					NOT = { has_cosmetic_tag = AUS_SGF }
				}
				set_cosmetic_tag = AUS_SGF
			}
			every_state = {
				limit = { is_south_germany = yes }
				add_claim_of_ROOT = yes
				enable_state_integration_50_compliance = yes
			}
		}
		else = {
			every_state = {
				limit = { is_south_germany = yes }
				add_claim_of_ROOT = yes
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1013 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Poland
	id = annex.1014
	title = annexation_10
	desc = annexation_10_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = { is_poland = no }
				remove_core_of = POL
				remove_claim_by = POL
			}
			POL = {
				POL_clear_economy = yes
				POL_remove_monarchy = yes
				POL_remove_guderian = yes
				drop_cosmetic_tag = yes
				remove_ideas = {
					POL_uprising
					POL_uprising2
					POL_uprising3
					POL_ZRP
					POL_OZN_ONR_infighting
					POL_uprising_crash1
					POL_uprising_crash2
					POL_uprising_crash3
					POL_uprising_crash4
					POL_uprising_crash5
					POL_uprising_crash6
					POL_recovering_eco1
					POL_recovering_eco2
					POL_recovering_eco3
					POL_crescendo_of_blood
					POL_suppressing_rival_government
					POL_revolutionary_factionalism
				}
				if = {
					limit = { has_character = AUS_karl_albrecht_von_habsburg }
					AUS_karl_albrecht_von_habsburg = {
						set_character_name = AUS_karl_albrecht_von_habsburg
						set_character_as_republican = yes
						remove_all_country_leader_roles = yes
						if = {
							limit = { AUS = { AUS_is_led_by_habsburgs = yes } }
							set_nationality = AUS
						}
						else = {
							retire = yes
						}
					}
				}
				if = {
					limit = { has_character = POL_konstanty_rokossowski }
					POL_konstanty_rokossowski = {
						add_unit_leader_trait = INT_polish_exile_trait
						set_nationality = FRA
					}
				}
				if = {
					limit = { has_character = POL_wolfgang_von_kries }
					POL_wolfgang_von_kries = { retire = yes }
				}
			}
			88 = { retain_state = yes } #Krakow
			89 = { retain_state = yes } #stanislawow
			91 = { retain_state = yes } #Lwow
			97 = { retain_state = yes } #Bialystok
			1088 = { retain_state = yes } #Chelm
			if = {
				limit = {
					RUS_can_integrate = yes
					owns_state = 792 #Volhynia
					OR = {
						is_monarchy = yes
						tag = FER
					}
					NOT = {
						has_government = social_liberal
						has_government = market_liberal
					}
				}
				save_event_target_as = can_annex
				save_event_target_as = AI_dont_annex
			}
		}
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1014 option annex.1014.a"
		name = annex.1014.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				original_tag = AUS
				AUS_is_led_by_habsburgs = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = GER
					original_tag = BAT
				}
				has_socialist_government = no
			}
		}
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		var:tag_to_release = { POL_release_as_republic = yes }
	}

	option = { #liberate as kingdom (for GER)
		log = "[GetLogInfo]: event annex.1014 option annex.1014.b"
		name = annex.1014.b
		trigger = {
			OR = {
				AND = {
					original_tag = GER
					is_monarchy = yes
				}
				AND = {
					original_tag = BAT
					has_socialist_government = no
				}
			}
			POL = {
				POL_alexander_von_hohenzollern = { is_dead = no }
				NOT = { has_country_flag = POL_alex_not_heir }
			}
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_authoritarian_government = yes
			}
		}
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		var:tag_to_release = { POL_release_as_german_kingdom = yes }
	}

	option = { #liberate as kingdom (for AUS)
		log = "[GetLogInfo]: event annex.1014 option annex.1014.c"
		name = annex.1014.c
		trigger = {
			is_subject = no
			original_tag = AUS
			AUS_is_led_by_habsburgs = yes
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		var:tag_to_release = { POL_release_as_austrian_kingdom = yes }
	}

	option = { #liberate as General-Gouvernement
		log = "[GetLogInfo]: event annex.1014 option annex.1014.d"
		name = annex.1014.d
		trigger = {
			OR = {
				original_tag = GER
				original_tag = BAT
			}
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_authoritarian_government = no
			}
		}
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		var:tag_to_release = { POL_release_as_general_government = yes }
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1014 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		POL = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1014 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		POL = { add_claim_of_ROOT_on_valid_cores = yes }
		hidden_effect = {
			if = {
				limit = {
					tag = RUS #player only option
					NOT = {
						has_completed_focus = RUS_towards_unitary_state
						has_country_flag = RUS_unitary_state
					}
				}
				every_owned_state = {
					limit = {
						is_core_of = POL
					}
					set_resistance = 100
					set_compliance = 0
					if = {
						limit = {
							ROOT = {
							}
						}
						set_state_flag = polish_state
						add_dynamic_modifier = { modifier = RUS_ethnic_autonomy }
					}
				}
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1014 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bialystok
	id = annex.1015
	title = annexation_97
	desc = annexation_97_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					92 = { is_claim_or_core_of_ROOT = yes } #Lublin
					AND = {
						204 = { is_claim_or_core_of_ROOT = yes } #Novogrudok
						owns_state = 94 #Volkovysk
					}
					AND = {
						11 = { is_claim_or_core_of_ROOT = yes } #Kaunas
						owns_state = 96 #Vilnius
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				92 = { #Lublin
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:92.owner = { save_event_target_as = poland }
			if = {
				limit = {
					is_russian_tag = yes
					var:92.owner = { is_ally_of_ROOT = yes }
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				204 = { #Novogrudok
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:poland }
						94 = { annexations_required_state_is_owned_by_either_side = yes } #Volkovysk
						ROOT_can_grant_land = yes
					}
				}
			}
			var:204.owner = { save_event_target_as = belarus }
		}
		if = {
			limit = {
				11 = { #Kaunas
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:poland }
						NOT = { tag = event_target:belarus }
						96 = { annexations_required_state_is_owned_by_either_side = yes } #Vilnius
						ROOT_can_grant_land = yes
					}
				}
			}
			var:11.owner = { save_event_target_as = lithuania }
		}
	}

	option = { #Give to Poland
		log = "[GetLogInfo]: event annex.1015 option annex.europe.give_to_poland"
		name = annex.europe.give_to_poland
		trigger = {
			has_event_target = poland
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:poland }
				OR = {
					is_ally_with = event_target:belarus
					is_ally_with = event_target:lithuania
				}
			}
			modifier = {
				factor = 0.1
				event_target:poland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:poland }
		97 = { transfer_state_and_notify = yes }
	}

	option = { #Give to Belarus
		log = "[GetLogInfo]: event annex.1015 option annex.europe.give_to_belarus"
		name = annex.europe.give_to_belarus
		trigger = {
			has_event_target = belarus
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belarus }
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:lithuania
				}
			}
			modifier = {
				factor = 0.1
				event_target:belarus = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belarus }
		97 = { transfer_state_and_notify = yes } #Bialystok
		94 = { transfer_if_owned = yes } #Volkovysk
	}

	option = { #Give to Lithuania
		log = "[GetLogInfo]: event annex.1015 option annex.europe.give_to_lithuania"
		name = annex.europe.give_to_lithuania
		trigger = {
			has_event_target = lithuania
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lithuania }
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:belarus
				}
			}
			modifier = {
				factor = 0.1
				event_target:lithuania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lithuania }
		97 = { transfer_state_and_notify = yes } #Bialystok
		96 = { transfer_if_owned = yes } #Vilnius
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1015 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		97 = { transfer_state_and_notify = yes } #Bialystok
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1015 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		97 = { add_claim_of_ROOT = yes } #Bialystok
		if = {
			limit = { 204 = { is_claim_or_core_of_ROOT = yes } } #Novogrudok
			94 = { add_claim_of_ROOT = yes } #Volkovysk
		}
		if = {
			limit = { 11 = { is_claim_or_core_of_ROOT = yes } } #Kaunas
			96 = { add_claim_of_ROOT = yes } #Vilnius
		}
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
				}
			}
			97 = {
				set_state_flag = lithuania_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1015 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Estonia
	id = annex.1016
	title = annexation_13
	desc = annexation_13_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_estonia = no }
					remove_core_of = EST
				}
				else = {
					add_core_of = EST
				}
				remove_claim_by = EST
			}
			EST = {
				if = {
					limit = { NOT = { has_character = EST_johan_laidoner } }
					EST_johan_laidoner = { set_nationality = PREV }
				}
				remove_ideas = {
					EST_russian_trade
					EST_german_trade
				}
			}
			SCA = {
				every_unit_leader = {
					limit = { has_character_flag = EST_leader }
					set_nationality = EST
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			if = {
				limit = {
					OR = {
						original_tag = BAT
						RUS_can_integrate = yes
					}
				}
				save_event_target_as = can_annex
				if = {
					limit = {
						is_russian_tag = yes
						OR = {
							RUS_is_expansionist = no
							is_ally_with = EST
							is_ally_with = LAT
							is_ally_with = LIT
						}
					}
					save_event_target_as = AI_dont_annex
				}
			}
			if = {
				limit = { BAT = { ROOT_can_grant_land = yes } }
				BAT = { save_event_target_as = baltic }
			}
		}
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1016 option annex.1016.a"
		name = annex.1016.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:baltic
			}
		}
		set_temp_variable = { tag_to_release = EST }
		release_targeted_tag = yes
	}

	option = { #give to UBD
		log = "[GetLogInfo]: event annex.1016 option annex.europe.give_to_baltic"
		name = annex.europe.give_to_baltic
		trigger = {
			has_event_target = baltic
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:baltic }
		EST = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1016 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		EST = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1016 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		if = {
			limit = { is_russian_tag = yes }
			EST = { add_claim_of_ROOT_on_valid_cores = yes }
			if = {
				limit = {
					any_owned_state = {
						OR = {
							has_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
							has_dynamic_modifier = { modifier = RUS_latvia_modifier_autonomy }
						}
					}
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = EST
					}
					set_state_flag = estonia_state
					add_resistance = -10
					add_compliance = 5
					add_dynamic_modifier = { modifier = RUS_estonia_modifier_autonomy }
				}
			}
		}
		else = {
			EST = { every_core_state = { remove_claim_and_add_core_of_ROOT = yes } }
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1016 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Latvia
	id = annex.1017
	title = annexation_842
	desc = annexation_842_desc
	picture = GFX_report_event_generic_conference2

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = BAT } }
				BAT = { clear_cores_of_tag_if_possible = yes }
			}
			every_state = {
				if = {
					limit = { is_latvia = no }
					remove_core_of = LAT
				}
				else = {
					add_core_of = LAT
				}
				remove_claim_by = LAT
			}
			if = {
				limit = { RUS = { has_socialist_government = yes } }
				set_temp_variable = { destination = RUS }
			}
			else = {
				set_temp_variable = { destination = event_target:system }
			}
			LAT = {
				drop_cosmetic_tag = yes
				every_character = {
					limit = {
						OR = {
							has_character_flag = RUS_socialist
							has_character_flag = RUS_neutral
						}
					}
					set_nationality = var:destination
				}
				set_party_name = {
					ideology = totalist
					long_name = LAT_totalist_party_long
					name = LAT_totalist_party
				}
				set_party_name = {
					ideology = syndicalist
					long_name = LAT_syndicalist_party_long
					name = LAT_syndicalist_party
				}
				set_party_name = {
					ideology = radical_socialist
					long_name = LAT_radical_socialist_party_long
					name = LAT_radical_socialist_party
				}
				set_party_name = {
					ideology = social_democrat
					long_name = LAT_social_democrat_party_long
					name = LAT_social_democrat_party
				}
				set_party_name = {
					ideology = social_liberal
					long_name = LAT_social_liberal_party_long
					name = LAT_social_liberal_party
				}
				set_party_name = {
					ideology = market_liberal
					long_name = LAT_market_liberal_party_long
					name = LAT_market_liberal_party
				}
				set_party_name = {
					ideology = social_conservative
					long_name = LAT_social_conservative_party_long
					name = LAT_social_conservative_party
				}
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = LAT_authoritarian_democrat_party_long
					name = LAT_authoritarian_democrat_party
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = LAT_paternal_autocrat_party_long
					name = LAT_paternal_autocrat_party
				}
				set_party_name = {
					ideology = national_populist
					long_name = LAT_national_populist_party_long
					name = LAT_national_populist_party
				}
			}
			if = {
				limit = {
					OR = {
						original_tag = BAT
						RUS_can_integrate = yes
					}
				}
				save_event_target_as = can_annex
				if = {
					limit = {
						is_russian_tag = yes
						OR = {
							RUS_is_expansionist = no
							is_ally_with = EST
							is_ally_with = LAT
							is_ally_with = LIT
						}
					}
					save_event_target_as = AI_dont_annex
				}
			}
			if = {
				limit = { BAT = { ROOT_can_grant_land = yes } }
				BAT = { save_event_target_as = baltic }
			}
			880 = { retain_state = yes } #Latgale
		}
	}

	is_triggered_only = yes

	option = { #puppet
		log = "[GetLogInfo]: event annex.1017 option annex.1017.a"
		name = annex.1017.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:baltic
			}
			modifier = {
				factor = 0.25
				original_tag = GER
				has_socialist_government = no
				NOT = { country_exists = BAT }
			}
		}
		set_temp_variable = { tag_to_release = LAT }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				LAT_move_leaders = yes
				if = {
					limit = { has_socialist_government = yes }
					load_focus_tree = LAT_socialist_focus
					unlock_national_focus = LAT_the_second_iskolat
				}
				else = {
					load_focus_tree = LAT_auth_tree
					unlock_national_focus = LAT_2nd_awakening
				}
				if = {
					limit = { has_country_leader = { character = LAT_janis_kurelis } }
					promote_character = {
						character = LAT_karlis_ulmanis
						ideology = authoritarian_democrat_subtype
					}
					promote_character = LAT_kristaps_upelnieks
				}
				if = {
					limit = { 842 = { is_owned_and_controlled_by = PREV } } #Riga
					remove_ideas = LAT_remember_riga
					set_capital = { state = 842 remember_old_capital = no }
				}
			}
		}
	}

	option = { #Liberate the Baltic Union!
		log = "[GetLogInfo]: event annex.1017 option annex.1017.b"
		name = annex.1017.b
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = BAT }
			NOT = { original_tag = EST }
			NOT = { original_tag = LIT }
			is_subject = no
			OR = {
				11 = { is_valid_annexation_state = yes } #Kaunas
				13 = { is_valid_annexation_state = yes } #Estonia
				96 = { is_valid_annexation_state = yes } #Vilnius
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		96 = { retain_state = yes } #Vilnius
		188 = { retain_state = yes } #Memel
		880 = { retain_state = yes } #Latgale
		every_state = {
			limit = { region = 37 } #Baltic States
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
		setup_puppet_baltic_union = yes
	}

	option = { #restore UBD
		log = "[GetLogInfo]: event annex.1017 option annex.1017.c"
		name = annex.1017.c
		trigger = {
			original_tag = GER
			NOT = { country_exists = BAT }
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = BAT }
		12 = { remove_claim_and_add_core_of_target = yes } #Livonia
		13 = { remove_claim_and_add_core_of_target = yes } #Estonia
		190 = { remove_claim_and_add_core_of_target = yes } #Courland
		191 = { remove_claim_and_add_core_of_target = yes } #Northern Livonia
		842 = { remove_claim_and_add_core_of_target = yes } #Riga
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				LAT_move_leaders = yes
				BAT_move_baltic_germans = yes
				BAT_adolf_friedrich = {
					set_nationality = PREV
					promote_character = social_liberal_subtype
					promote_character = market_liberal_subtype
					promote_character = social_conservative_subtype
					promote_character = authoritarian_democrat_subtype
					promote_character = paternal_autocrat_subtype
				}
			}
		}
	}

	option = { #give to BAT
		log = "[GetLogInfo]: event annex.1017 option annex.europe.give_to_baltic"
		name = annex.europe.give_to_baltic
		trigger = {
			has_event_target = baltic
			NOT = { tag = RUS }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:baltic }
		LAT = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1017 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		LAT = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1017 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		if = {
			limit = { is_russian_tag = yes }
			LAT = { add_claim_of_ROOT_on_valid_cores = yes }
			if = {
				limit = {
					any_owned_state = {
						OR = {
							has_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
							has_dynamic_modifier = { modifier = RUS_estonia_modifier_autonomy }
						}
					}
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = LAT
						NOT = { is_core_of = ROOT }
					}
					set_state_flag = latvia_state
					add_resistance = -10
					if = {
						limit = {
							ROOT = { RUS_karl_gopper = { is_hired_as_advisor = yes } }
						}
						add_compliance = 10
					}
					else = {
						add_compliance = 5
					}
					add_dynamic_modifier = { modifier = RUS_latvia_modifier_autonomy }
				}
				880 = {
					clr_state_flag = dvinsk_state
					set_state_flag = latvia_state
					remove_dynamic_modifier = { modifier = RUS_dvinsk_modifier }
					add_dynamic_modifier = { modifier = RUS_latvia_modifier_autonomy }
				}
			}
		}
		else = {
			LAT = { every_core_state = { remove_claim_and_add_core_of_ROOT = yes } }
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1017 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Lithuania
	id = annex.1018
	title = annexation_11
	desc = annexation_11_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_lithuania = no }
					remove_core_of = LIT
				}
				else = {
					add_core_of = LIT
				}
				remove_claim_by = LIT
			}
			LIT = {
				LIT_remove_monarchy = yes
				LIT_remove_radicalism = yes
				remove_ideas = {
					LIT_german_aviation_advisors
					LIT_german_economic_dominance_1
					LIT_german_economic_dominance_2
				}
				if = {
					limit = { ROOT = { NOT = { has_government = national_populist } } }
					remove_ideas = {
						LIT_aftermath_of_the_coup
						LIT_uprising_army
						LIT_wolfs_state_1
						LIT_wolfs_state_2
						LIT_wolfs_state_3
						LIT_corporate_nation_state_1
						LIT_corporate_nation_state_2
						LIT_corporate_nation_state_3
						LIT_national_purity_1
						LIT_national_purity_2
						LIT_national_purity_3
						LIT_national_purity_4
						LIT_nationalist_fanaticism
						LIT_nationalist_equality
						LIT_nationalist_welfare
					}
				}

				#move back the generals in BAT
				LIT_vincas_vitkauskas = { set_nationality = LIT }
				LIT_kazys_ladiga = { set_nationality = LIT }
				LIT_povilas_julius_labanauskas = { set_nationality = LIT }
			}
			if = {
				limit = {
					OR = {
						RUS_can_integrate = yes
						AND = {
							original_tag = BAT
							has_socialist_government = yes
						}
					}
				}
				save_event_target_as = can_annex
				if = {
					limit = {
						is_russian_tag = yes
						OR = {
							RUS_is_expansionist = no
							is_ally_with = EST
							is_ally_with = LAT
							is_ally_with = LIT
						}
					}
					save_event_target_as = AI_dont_annex
				}
			}
			if = {
				limit = {
					BAT = {
						has_socialist_government = yes
						ROOT_can_grant_land = yes
					}
				}
				BAT = { save_event_target_as = baltic }
			}
			96 = { retain_state = yes } #Vilnius
			188 = { retain_state = yes } #Memel
		}
	}

	option = { #Release Lithuania
		log = "[GetLogInfo]: event annex.1018 option annex.1018.a"
		name = annex.1018.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:baltic
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		release_targeted_tag = yes
		LIT_puppet_setup = yes
	}

	option = { #give to BAT
		log = "[GetLogInfo]: event annex.1018 option annex.europe.give_to_baltic"
		name = annex.europe.give_to_baltic
		trigger = {
			has_event_target = baltic
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:baltic }
		LIT = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1018 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		LIT = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1018 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		if = {
			limit = {
				is_russian_tag = yes
			}
			if = {
				limit = {
					any_owned_state = {
						OR = {
							has_dynamic_modifier = { modifier = RUS_latvia_modifier_autonomy }
							has_dynamic_modifier = { modifier = RUS_estonia_modifier_autonomy }
						}
					}
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = LIT
					}
					set_state_flag = lithuania_state
					add_resistance = -10
					add_compliance = 5
					add_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
				}
				if = {
					limit = {
						188 = { #Memel
							is_owned_by = ROOT
							is_claimed_by = ROOT
						}
					}
					188 = {
						set_state_flag = lithuania_state
						add_resistance = -10
						add_compliance = 5
						add_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
					}
				}
				if = {
					limit = {
						97 = { #Bialystok
							is_owned_by = ROOT
							is_claimed_by = ROOT
						}
					}
					97 = {
						set_state_flag = lithuania_state
						add_resistance = -10
						add_compliance = 5
						add_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
					}
				}
			}
			if = {
				limit = { RUS_savinkov = yes }
				add_state_claim = 188 #Memel
				add_state_claim = 5 #Königsberg
			}
		}
		LIT = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1018 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Vilnius
	id = annex.1019
	title = annexation_96
	desc = annexation_96_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					11 = { is_claim_or_core_of_ROOT = yes } #Kaunas
					207 = { is_claim_or_core_of_ROOT = yes } #Braslav
					AND = {
						92 = { is_claim_or_core_of_ROOT = yes } #Lublin
						owns_state = 97 #Bialystok
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				11 = { #Kaunas
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:11.owner = { save_event_target_as = lithuania }
			if = {
				limit = {
					is_russian_tag = yes
					var:11.owner = { is_ally_of_ROOT = yes }
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				92 = { #Lublin
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:lithuania }
						97 = { annexations_required_state_is_owned_by_either_side = yes } #Bialystok
						ROOT_can_grant_land = yes
					}
				}
			}
			var:92.owner = { save_event_target_as = poland }
		}
		if = {
			limit = {
				204 = { #Braslav
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:lithuania }
						NOT = { tag = event_target:poland }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:204.owner = { save_event_target_as = belarus }
		}
	}

	option = { #give to Lithuania
		log = "[GetLogInfo]: event annex.1019 option annex.europe.give_to_lithuania"
		name = annex.europe.give_to_lithuania
		trigger = {
			has_event_target = lithuania
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lithuania }
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:belarus
				}
			}
			modifier = {
				factor = 0.1
				event_target:lithuania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lithuania }
		96 = { transfer_state_and_notify = yes } #Vilnius
	}

	option = { #give to Poland
		log = "[GetLogInfo]: event annex.1019 option annex.europe.give_to_poland"
		name = annex.europe.give_to_poland
		trigger = {
			has_event_target = poland
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:poland }
				OR = {
					is_ally_with = event_target:lithuania
					is_ally_with = event_target:belarus
				}
			}
			modifier = {
				factor = 0.1
				event_target:poland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:poland }
		96 = { transfer_state_and_notify = yes } #Vilnius
		97 = { transfer_if_owned = yes } #Bialystok
	}

	option = { #give to White Ruthenia
		log = "[GetLogInfo]: event annex.1019 option annex.europe.give_to_belarus"
		name = annex.europe.give_to_belarus
		trigger = {
			has_event_target = belarus
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belarus }
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:lithuania
				}
			}
			modifier = {
				factor = 0.1
				event_target:belarus = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belarus }
		96 = { transfer_state_and_notify = yes } #Vilnius
	}

	option = { #give to White Ruthenia
		log = "[GetLogInfo]: event annex.1019 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		96 = { transfer_state_and_notify = yes } #Vilnius
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1019 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		96 = { add_claim_of_ROOT = yes } #Vilnius
		if = {
			limit = { 92 = { is_claim_or_core_of_ROOT = yes } } #Lublin
			97 = { add_claim_of_ROOT = yes } #Bialystok
		}
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
				}
			}
			96 = {
				set_state_flag = lithuania_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1019 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Austria
	id = annex.1020
	title = annexation_4
	desc = annexation_4_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			AUS = {
				drop_cosmetic_tag = yes
				AUS_remove_monarchy = yes
				AUS_disable_danubian_integration = yes
				annexations_reset_danubian_characters = yes
				set_party_name = {
					ideology = paternal_autocrat
					name = AUS_paternal_autocrat_party
					long_name = AUS_paternal_autocrat_party_long
				}
				remove_ideas = {
					AUS_financial_ties_broken
					AUS_paid_reparations
					AUS_imperial_development_scheme
					AUS_DNF_political_instability
					AUS_DNF_political_instability-1
					AUS_DNF_political_instability-2
					AUS_kaiser_faith
				}
			}
			if = {
				limit = { NOT = { country_exists = HUN } }
				HUN = { AUS_remove_monarchy = yes }
			}
			every_state = {
				if = {
					limit = { is_core_austria = yes }
					add_core_of = AUS
					set_variable = { ambition_area_@AUS = 1 }
				}
				else = {
					remove_core_of = AUS
					clear_variable = ambition_area_@AUS
					AUS = { PREV = { disable_state_integration = yes } }
				}
				remove_claim_by = AUS
			}
			39 = { retain_state = yes } #South Tyrol
			783 = { retain_state = yes } #Trentino
			784 = { retain_state = yes } #Burgenland
			1107 = { retain_state = yes } #Karavanks
			if = {
				limit = {
					OR = {
						52 = { is_claim_or_core_of_ROOT = yes } #Upper Bavaria
						AND = {
							AUS_is_led_by_habsburgs = yes
							owns_state = 784 #Burgenland
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					52 = { #Upper Bavaria
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:52.owner = { save_event_target_as = bavaria }
			}
			if = {
				limit = {
					HUN = {
						AUS_is_led_by_habsburgs = yes
						ROOT_can_grant_land = yes
						784 = { annexations_required_state_is_owned_by_either_side = yes } #Burgenland
					}
				}
				HUN = { save_event_target_as = hungary }
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1020 option annex.1020.a"
		name = annex.1020.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_monarchy = yes
				is_italian_tag = no
				NOT = { is_ally_with = ENT }
				NOT = { original_tag = ROM }
				NOT = { original_tag = SER }
			}
			modifier = {
				factor = 0
				has_event_target = hungary
				OR = {
					is_major = no
					is_ally_with = event_target:hungary
				}
				is_italian_tag = no
				NOT = { original_tag = ROM }
				NOT = { original_tag = SER }
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		release_targeted_tag = yes
	}

	option = { #restore Habsburgs
		log = "[GetLogInfo]: event annex.1020 option annex.1020.b"
		name = annex.1020.b
		trigger = {
			HUN = { AUS_is_led_by_habsburgs = no }
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					is_italian_tag = yes
					is_ally_with = ENT
					original_tag = ROM
					original_tag = SER
				}
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		release_targeted_tag = yes
		var:tag_to_release = { AUS_create_karl = yes }
	}

	option = { #Danubian Republic of Councils
		log = "[GetLogInfo]: event annex.1020 option annex.europe.release_danubia_republic"
		name = annex.europe.release_danubia_republic
		trigger = {
			annexations_can_released_united_danubia = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				AUS_has_integrated_HUN = no
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:hungary
				is_italian_tag = no
				NOT = { original_tag = ROM }
				NOT = { original_tag = SER }
			}
		}
		annexations_release_danubia = yes
	}

	option = { #USGA
		log = "[GetLogInfo]: event annex.1020 option annex.europe.release_danubia_habsburg"
		name = annex.europe.release_danubia_habsburg
		trigger = {
			HUN = { AUS_is_led_by_habsburgs = no }
			has_socialist_government = no
			annexations_can_released_united_danubia = yes
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { monarchy = 1 }
		annexations_release_danubia = yes
	}

	option = { #Give to Hungary
		log = "[GetLogInfo]: event annex.1020 option annex.europe.give_to_hungary"
		name = annex.europe.give_to_hungary
		trigger = {
			has_event_target = hungary
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					is_italian_tag = yes
					original_tag = ROM
					original_tag = SER
				}
			}
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:hungary }
			}
			modifier = {
				factor = 0.1
				event_target:hungary = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:hungary }
		AUS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to owner of Upper Bavaria
		log = "[GetLogInfo]: event annex.1020 option annex.1020.e"
		name = annex.1020.e
		trigger = {
			has_event_target = bavaria
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:bavaria }
		AUS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1020 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		AUS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1020 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { AUS_is_led_by_habsburgs = yes }
			every_state = {
				limit = { is_core_austria = yes }
				add_claim_of_ROOT = yes
			}
			set_cosmetic_tag = AUS_united_states
			AUS_enable_danubian_integration = yes
		}
		else = {
			every_state = {
				limit = { is_core_austria = yes }
				add_claim_of_ROOT = yes
				enable_state_integration_50_compliance = yes
			}
			hidden_effect = {
				1090 = { enable_state_integration_80_compliance = yes } #Pressburg
				country_event = gerflavour.76
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1020 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bohemia
	id = annex.1021
	title = annexation_9
	desc = annexation_9_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { region = 22 } #Bohemia
					add_core_of = CZE
				}
				else = {
					remove_core_of = CZE
				}
				remove_claim_by = CZE
			}
			924 = { retain_state = yes } #Tesin
			event_target:system = {
				every_character = {
					limit = { CZE = { original_tag = var:PREV.nationality } }
					set_nationality = CZE
				}
			}
			CZE = {
				AUS_remove_monarchy = yes
				AUS_disable_danubian_integration = yes
				annexations_reset_danubian_characters = yes
				promote_character = {
					character = CZE_jan_syrovy
					ideology = paternal_autocrat_subtype
				}
				CZE_change_portraits = yes
			}
		}
		if = {
			limit = {
				OR = {
					original_tag = AUS
					AUS_is_unified = yes
					is_german_unifier_tag = yes
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = {
					is_german_unifier_tag = yes
					NOT = { original_tag = AUS }
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				var:4.owner = {
					OR = {
						original_tag = AUS
						AUS_is_unified = yes
					}
					ROOT_can_grant_land = yes
				}
			}
			var:4.owner = { save_event_target_as = austria }
		}
	}

	option = { #Liberate Bohemia
		log = "[GetLogInfo]: event annex.1021 option annex.1021.a"
		name = annex.1021.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				has_event_target = austria
				OR = {
					is_major = no
					event_target:austria = {
						is_ally_with = ROOT
						is_subject = no
					}
					event_target:austria = { AUS_is_unified = yes }
				}
			}
			modifier = {
				factor = 3
				has_elected_government = yes
			}
		}
		set_temp_variable = { tag_to_release = CZE }
		release_targeted_tag = yes
	}

	option = { #Czechoslovakia
		log = "[GetLogInfo]: event annex.1021 option annex.1021.b"
		name = annex.1021.b
		trigger = {
			70 = { is_valid_annexation_state = yes } #Slovakia
			is_subject = no
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = austria
				OR = {
					is_major = no
					is_ally_with = event_target:austria
					event_target:austria = { AUS_is_unified = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = CZE }
		every_state = {
			limit = { is_slovakia = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		71 = { retain_state = yes } #Danubian Plain
		73 = { retain_state = yes } #Transcarpathia
		1090 = { retain_state = yes } #Pressburg

		release_targeted_tag = yes
		var:tag_to_release = { set_cosmetic_tag = CZE_czechoslavakia }
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1021 option annex.europe.give_to_austria"
		name = annex.europe.give_to_austria
		trigger = {
			has_event_target = austria
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:austria }
			}
			modifier = {
				factor = 0.1
				event_target:austria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		CZE = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1021 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		CZE = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1021 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0.15
				is_germany_or_splinter_tag = yes
				has_elected_government = yes
			}
		}
		CZE = { add_claim_of_ROOT_on_valid_cores = yes }
		if = {
			limit = {
				NOT = {
					tag = AUS
				}
			}
			hidden_effect = {
				1090 = { enable_state_integration_80_compliance = yes } #Pressburg
				country_event = gerflavour.101
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1021 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Krakow
	id = annex.1022
	title = annexation_88
	desc = annexation_88_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = GAL } }
				GAL = {
					clear_cores_of_tag_if_possible = yes
					GAL_remove_karl_albrecht = yes
					activate_targeted_decision = { target = POL decision = GAL_unite_with_poland }
				}
			}
			if = {
				limit = {
					OR = {
						original_tag = GAL
						90 = { is_claim_or_core_of_ROOT = yes } #Kielce
						AND = {
							AUS_is_unified = yes
							owns_any_state_of = {
								70 #Slovakia
								91 #Lwow
								924 #Tesin
							}
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					90 = { #Kielce
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:90.owner = { save_event_target_as = poland }
			}
			if = {
				limit = {
					var:91.owner = { #Lwow
						original_tag = GAL
						ROOT_can_grant_land = yes
					}
				}
				var:91.owner = { save_event_target_as = galicia }
			}
			if = {
				limit = {
					var:70.owner = { #Slovakia
						AUS_is_unified = yes
						ROOT_can_grant_land = yes
					}
				}
				var:70.owner = { save_event_target_as = danubia }
			}
			else_if = {
				limit = {
					var:91.owner = { #Lwow
						AUS_is_unified = yes
						ROOT_can_grant_land = yes
					}
				}
				var:91.owner = { save_event_target_as = danubia }
			}
			else_if = {
				limit = {
					var:924.owner = { #Tesin
						AUS_is_unified = yes
						ROOT_can_grant_land = yes
					}
				}
				var:924.owner = { save_event_target_as = danubia }
			}
			73 = { retain_state = yes } #Transcarpathia
		}
	}

	option = { #Liberate
		log = "[GetLogInfo]: event annex.1022 option annex.1022.a"
		name = annex.1022.a
		trigger = {
			NOT = { country_exists = GAL }
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = GAL }
		80 = { #Cernauti
			remove_claim_and_add_core_of_target = yes
			retain_state = yes
		}
		88 = { remove_claim_and_add_core_of_target = yes } #Krakow
		89 = { #Stanislawow
			remove_claim_and_add_core_of_target = yes
			retain_state = yes
		}
		91 = { #Lwow
			remove_claim_and_add_core_of_target = yes
			retain_state = yes
		}
		713 = { #Suceava
			remove_claim_and_add_core_of_target = yes
			retain_state = yes
		}
		release_targeted_tag = yes
	}

	option = { #Give to owner of Kielce
		log = "[GetLogInfo]: event annex.1022 option annex.europe.give_to_poland"
		name = annex.europe.give_to_poland
		trigger = {
			has_event_target = poland
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:poland }
				is_ally_with = event_target:galicia
			}
			modifier = {
				factor = 0.1
				event_target:poland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:poland }
		88 = { transfer_state_and_notify = yes } #Krakow
	}

	option = { #Give to Galicia
		log = "[GetLogInfo]: event annex.1022 option annex.europe.give_to_galicia"
		name = annex.europe.give_to_galicia
		trigger = {
			has_event_target = galicia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:galicia }
				is_ally_with = event_target:poland
			}
			modifier = {
				factor = 0.1
				event_target:galicia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:galicia }
		88 = { transfer_state_and_notify = yes } #Krakow
	}

	option = { #Give to Danubia
		log = "[GetLogInfo]: event annex.1022 option annex.1022.b"
		name = annex.1022.b
		trigger = {
			has_event_target = danubia
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:danubia }
		88 = { transfer_state_and_notify = yes } #Krakow
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1022 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		88 = { transfer_state_and_notify = yes } #Krakow
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1022 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		88 = { add_claim_of_ROOT = yes } #Krakow
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1022 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Cernauti
	id = annex.1023
	title = annexation_80
	desc = annexation_80_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					89 = { is_claim_or_core_of_ROOT = yes } #Stanislawow
					AND = {
						79 = { is_claim_or_core_of_ROOT = yes } #Moldavia
						owns_state = 713 #Suceava
					}
					AND = {
						76 = { is_claim_or_core_of_ROOT = yes } #Cluj
						owns_state = 713 #Suceava
						OR = {
							original_tag = TRS
							original_tag = ROM
							AUS_is_unified = yes
						}
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				89 = { #Stanislawow
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:89.owner = { save_event_target_as = galicia }
		}
		if = {
			limit = {
				79 = { #Moldavia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:galicia }
						713 = { annexations_required_state_is_owned_by_either_side = yes } #Suceava
						ROOT_can_grant_land = yes
					}
				}
			}
			var:79.owner = { save_event_target_as = romania }
		}
		if = {
			limit = {
				76 = { #Cluj
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						OR = {
							original_tag = TRS
							original_tag = ROM
							AUS_is_unified = yes
						}
						NOT = { tag = event_target:galicia }
						NOT = { tag = event_target:romania }
						713 = { annexations_required_state_is_owned_by_either_side = yes } #Suceava
						ROOT_can_grant_land = yes
					}
				}
			}
			var:76.owner = { save_event_target_as = transylvania }
		}
	}

	option = { #Give to Galicia
		log = "[GetLogInfo]: event annex.1023 option annex.europe.give_to_galicia"
		name = annex.europe.give_to_galicia
		trigger = {
			has_event_target = galicia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:galicia }
				OR = {
					is_ally_with = event_target:romania
					is_ally_with = event_target:transylvania
				}
			}
			modifier = {
				factor = 0.1
				event_target:galicia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:galicia }
		80 = { transfer_state_and_notify = yes } #Cernauti
	}

	option = { #Give to Romania
		log = "[GetLogInfo]: event annex.1023 option annex.europe.give_to_romania"
		name = annex.europe.give_to_romania
		trigger = {
			has_event_target = romania
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:romania }
				OR = {
					is_ally_with = event_target:galicia
					is_ally_with = event_target:transylvania
				}
			}
			modifier = {
				factor = 0.1
				event_target:romania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:romania }
		80 = { transfer_state_and_notify = yes } #Cernauti
		713 = { transfer_if_owned = yes } #Cernauti
	}

	option = { #Give to Transylvania
		log = "[GetLogInfo]: event annex.1023 option annex.europe.give_to_transylvania"
		name = annex.europe.give_to_transylvania
		trigger = {
			has_event_target = transylvania
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:transylvania }
				OR = {
					is_ally_with = event_target:galicia
					is_ally_with = event_target:romania
				}
			}
			modifier = {
				factor = 0.1
				event_target:transylvania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:transylvania }
		80 = { transfer_state_and_notify = yes } #Cernauti
		713 = { transfer_if_owned = yes } #Cernauti
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1023 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		80 = { transfer_if_owned = yes } #Cernauti
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1023 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
		if = {
			limit = { 89 = { is_claim_or_core_of_ROOT = no } } #Stanislawow
			713 = { add_claim_of_ROOT = yes } #Suceava
		}
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
				}
			}
			80 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1023 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Hungary
	id = annex.1024
	title = annexation_43
	desc = annexation_43_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_core_hungary = yes }
					add_core_of = HUN
				}
				else = {
					remove_core_of = HUN
				}
				remove_claim_by = HUN
			}
			HUN = {
				AUS_remove_monarchy = yes
				AUS_disable_danubian_integration = yes
				annexations_reset_danubian_characters = yes
				remove_ideas = {
					HUN_financial_ties_broken
					HUN_slovak_demonstrations
					HUN_transylvanian_demonstrations
				}
			}
			if = {
				limit = {
					OR = {
						AUS_is_unified = yes
						AND = {
							original_tag = AUS
							784 = { is_claim_or_core_of_ROOT = yes } #Burgenland
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					AUS = {
						ROOT_can_grant_land = yes
						784 = { annexations_required_state_is_owned_by_either_side = yes } #Burgenland
					}
				}
				AUS = { save_event_target_as = austria }
			}
		}
	}

	option = { #Liberate
		log = "[GetLogInfo]: event annex.1024 option annex.1024.a"
		name = annex.1024.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_monarchy = yes
				is_italian_tag = no
				NOT = { is_ally_with = ENT }
				NOT = { original_tag = ROM }
				NOT = { original_tag = SER }
			}
			modifier = {
				factor = 0
				has_event_target = austria
				OR = {
					is_major = no
					event_target:austria = {
						is_ally_with = ROOT
						is_subject = no
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				if = {
					limit = { 43 = { is_owned_and_controlled_by = PREV } }
					set_capital = { state = 43 remember_old_capital = no } #Central Hungary
				}
			}
		}
	}

	option = { #Restore Habsburgs
		log = "[GetLogInfo]: event annex.1024 option annex.1024.b"
		name = annex.1024.b
		trigger = {
			var:4.owner = { #Lower Austria
				OR = {
					is_germany_or_splinter_tag = no
					is_monarchy = no
				}
				AUS_is_led_by_habsburgs = no
			}
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					is_italian_tag = yes
					original_tag = ROM
					original_tag = SER
				}
			}
			modifier = {
				factor = 0
				has_event_target = austria
				OR = {
					is_major = no
					event_target:austria = {
						is_ally_with = ROOT
						is_subject = no
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		release_targeted_tag = yes
		var:tag_to_release = {
			hidden_effect = {
				set_capital = { state = 43 remember_old_capital = no } #Central Hungary
				set_cosmetic_tag = HUN_monarchy
			}
			AUS_create_karl = yes
		}
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1024 option annex.europe.give_to_austria"
		name = annex.europe.give_to_austria
		trigger = {
			has_event_target = austria
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				AUS_has_integrated_HUN = no
			}
			modifier = {
				factor = 0
				OR = {
					is_italian_tag = yes
					original_tag = ROM
					original_tag = SER
				}
			}
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:austria }
			}
			modifier = {
				factor = 0.1
				event_target:austria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		HUN = { set_transfer_target_cores = yes }
		784 = { set_transfer_target_state = yes } #Burgenland
		transfer_targeted_territory = yes
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1024 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		HUN = { add_claim_of_ROOT_on_valid_cores = yes }
		if = {
			limit = {
				original_tag = AUS
				AUS_is_unified = no
			}
			if = {
				limit = { AUS_is_led_by_habsburgs = yes }
				set_cosmetic_tag = AUS_united_states
			}
			else = {
				set_cosmetic_tag = AUS_danubia
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1024 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		HUN = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1024 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Slovakia
	id = annex.1025
	title = annexation_70
	desc = annexation_70_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			71 = { retain_state = yes } #Danubian Plain
			73 = { retain_state = yes } #Transcarpathia
			1090 = { retain_state = yes } #Pressburg
			if = {
				limit = {
					OR = {
						original_tag = CZE
						original_tag = HUN
						AUS_is_unified = yes
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = { CZE = { ROOT_can_grant_land = yes } }
				CZE = { save_event_target_as = bohemia }
			}
			if = {
				limit = { HUN = { ROOT_can_grant_land = yes } }
				HUN = { save_event_target_as = hungary }
			}
			if = {
				limit = {
					AUS = {
						owns_state = 155 #Transdanubia
						ROOT_can_grant_land = yes
					}
				}
				AUS = { save_event_target_as = austria }
			}
		}
	}

	option = { #Liberate Slovakia
		log = "[GetLogInfo]: event annex.1025 option annex.1025.a"
		name = annex.1025.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SLO }
		release_targeted_tag = yes
	}

	option = { #Give to Bohemia
		log = "[GetLogInfo]: event annex.1025 option annex.europe.give_to_bohemia"
		name = annex.europe.give_to_bohemia
		trigger = {
			has_event_target = bohemia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:bohemia }
				OR = {
					is_ally_with = event_target:austria
					is_ally_with = event_target:hungary
				}
			}
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:bohemia }
			}
			modifier = {
				factor = 0.1
				event_target:bohemia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:bohemia }
		SLO = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to Hungary
		log = "[GetLogInfo]: event annex.1025 option annex.europe.give_to_hungary"
		name = annex.europe.give_to_hungary
		trigger = {
			has_event_target = hungary
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:austria
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:hungary }
				OR = {
					is_ally_with = event_target:bohemia
					is_ally_with = event_target:austria
				}
			}
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:hungary }
			}
			modifier = {
				factor = 0.1
				event_target:hungary = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:hungary }
		SLO = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
		73 = { #Danubian Plain
			clear_retain_state = yes
			set_transfer_target_state = yes
		}
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1025 option annex.europe.give_to_austria"
		name = annex.europe.give_to_austria
		trigger = {
			has_event_target = austria
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				AUS_has_integrated_HUN = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:austria }
				OR = {
					is_ally_with = event_target:bohemia
					is_ally_with = event_target:hungary
				}
			}
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:austria }
			}
			modifier = {
				factor = 0.1
				event_target:austria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		SLO = { set_transfer_target_cores = yes }
		1090 = { #Pressburg
			clear_retain_state = yes
			set_transfer_target_state = yes
		}
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1025 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		SLO = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1025 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		SLO = { add_claim_of_ROOT_on_valid_cores = yes }
		if = {
			limit = { original_tag = CZE }
			set_cosmetic_tag = CZE_czechoslavakia
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1025 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Transcarpathia
	id = annex.1026
	title = annexation_73
	desc = annexation_73_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					OR = {
						70 = { is_claim_or_core_of_ROOT = yes } #Slovakia
						664 = { is_claim_or_core_of_ROOT = yes } #Miskolc
						AND = {
							89 = { is_claim_or_core_of_ROOT = yes } #Stanislawow
							91 = { is_claim_or_core_of_ROOT = yes } #Lwow
							OR = {
								202 = { is_claim_or_core_of_ROOT = yes } #Kyiv
								original_tag = GAL
							}
						}
					}
				}
				save_event_target_as = can_annex
				if = {
					limit = {
						is_russian_tag = yes
						RUS_is_expansionist = no
					}
					save_event_target_as = AI_dont_annex
				}
			}
			if = {
				limit = {
					70 = { #Slovakia
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:70.owner = { save_event_target_as = slovakia }
			}
			if = {
				limit = {
					664 = { #Miskolc
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:slovakia }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:664.owner = { save_event_target_as = miskolc }
			}
			if = {
				limit = {
					91 = { #Lwow
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:slovakia }
							NOT = { tag = event_target:miskolc }
							ROOT_can_grant_land = yes
							owns_state = 89 #Stanislawow
							OR = {
								original_tag = GAL
								202 = { is_claim_or_core_of_PREV = yes } #Kyiv
							}
						}
					}
				}
				var:91.owner = { save_event_target_as = lwow }
			}
		}
	}

	option = { #Give to owner of Slovakia
		log = "[GetLogInfo]: event annex.1026 option annex.europe.give_to_slovakia"
		name = annex.europe.give_to_slovakia
		trigger = {
			has_event_target = slovakia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:slovakia }
				OR = {
					is_ally_with = event_target:miskolc
					is_ally_with = event_target:lwow
				}
			}
			modifier = {
				factor = 0.1
				event_target:slovakia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovakia }
		73 = { transfer_state_and_notify = yes } #Transcarpathia
	}

	option = { #Give to owner of Miskolc
		log = "[GetLogInfo]: event annex.1026 option annex.1026.a"
		name = annex.1026.a
		trigger = {
			has_event_target = miskolc
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:miskolc }
				OR = {
					is_ally_with = event_target:slovakia
					is_ally_with = event_target:lwow
				}
			}
			modifier = {
				factor = 0.1
				event_target:miskolc = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:miskolc }
		73 = { transfer_state_and_notify = yes } #Transcarpathia
	}

	option = { #Give to owner of Lwow
		log = "[GetLogInfo]: event annex.1026 option annex.europe.give_to_owner_of_lwow"
		name = annex.europe.give_to_owner_of_lwow
		trigger = {
			has_event_target = lwow
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lwow }
				OR = {
					is_ally_with = event_target:slovakia
					is_ally_with = event_target:miskolc
				}
			}
			modifier = {
				factor = 0.1
				event_target:lwow = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lwow }
		73 = { transfer_state_and_notify = yes } #Transcarpathia
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1026 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		73 = { transfer_state_and_notify = yes } #Transcarpathia
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1026 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		73 = { add_claim_of_ROOT = yes } #Transcarpathia
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
				}
			}
			73 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1026 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Transylvania
	id = annex.1027
	title = annexation_84
	desc = annexation_84_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			TRS = {
				every_core_state = {
					force_enable_resistance = { occupier = AUS occupied = TRS clear = yes }
					force_enable_resistance = { occupier = HUN occupied = TRS clear = yes }
					force_enable_resistance = { occupier = CRO occupied = TRS clear = yes }
					force_enable_resistance = { occupier = TRS occupied = TRS clear = yes }
				}
			}
			80 = { retain_state = yes } #Cernauti
			713 = { retain_state = yes } #Suceava
			875 = { retain_state = yes } #West Banat
		}
		if = {
			limit = {
				OR = {
					46 = { is_claim_or_core_of_ROOT = yes } #Muntenia
					43 = { is_claim_or_core_of_ROOT = yes } #Central Hungary
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				46 = { #Muntenia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			if = {
				limit = {
					annexations_can_make_alliance_offer = yes
					ROM = {
						owns_state = 46 #Muntenia
						annexations_is_valid_target_for_alliance_offer = yes
						NOT = { has_country_flag = offered_transylvania_@ROOT }
					}
					NOT = {
						any_allied_country = {
							is_major = yes
							is_subject = no
							TRS = { any_core_state = { is_claim_or_core_of_PREVPREV = yes } }
						}
					}
				}
				ROM = { save_event_target_as = can_offer_transylvania_to_romania }
			}
			else = {
				var:46.owner = { save_event_target_as = muntenia }
			}
		}
		if = {
			limit = {
				43 = { #Central Hungary
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:muntenia }
						ROOT_can_grant_land = yes
						154 = { annexations_required_state_is_owned_by_either_side = yes } #Alfold
					}
				}
			}
			var:43.owner = { save_event_target_as = central_hungary }
		}
	}

	option = { #Liberate Transylvania
		log = "[GetLogInfo]: event annex.1027 option annex.1027.a"
		name = annex.1027.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = TRS }
		release_targeted_tag = yes
	}

	option = { #Give to owner of Muntenia
		log = "[GetLogInfo]: event annex.1027 option annex.europe.give_to_owner_of_muntenia"
		name = annex.europe.give_to_owner_of_muntenia
		trigger = {
			has_event_target = muntenia
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:muntenia = { original_tag = ROM }
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:muntenia }
				is_ally_with = event_target:central_hungary
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:central_hungary = {
						NOT = { is_ally_with = AUS }
						NOT = { is_ally_with = HUN }
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:muntenia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:muntenia }
		TRS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to owner of Central Hungary
		log = "[GetLogInfo]: event annex.1027 option annex.europe.give_to_owner_of_central_hungary"
		name = annex.europe.give_to_owner_of_central_hungary
		trigger = {
			has_event_target = central_hungary
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:central_hungary = {
					OR = {
						is_ally_with = AUS
						is_ally_with = HUN
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_hungary }
				is_ally_with = event_target:muntenia
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					NOT = { event_target:muntenia = { original_tag = ROM } }
				}
			}
			modifier = {
				factor = 0
				has_event_target = can_offer_transylvania_to_romania
				NOT = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0.1
				event_target:central_hungary = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_hungary }
		TRS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Split between HUN and ROM
		log = "[GetLogInfo]: event annex.1027 option annex.1027.b"
		name = annex.1027.b
		trigger = {
			has_event_target = muntenia
			has_event_target = central_hungary
			OR = {
				82 = { is_valid_annexation_state = yes } #Banat
				82 = { is_valid_annexation_state = yes } #Partium
			}
			OR = {
				76 = { is_valid_annexation_state = yes } #Cluj
				84 = { is_valid_annexation_state = yes } #Brasov
				789 = { is_valid_annexation_state = yes } #Szeklerland
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					AND = {
						is_ally_with = event_target:muntenia
						NOT = { is_ally_with = event_target:central_hungary }
					}
					AND = {
						is_ally_with = event_target:central_hungary
						NOT = { is_ally_with = event_target:muntenia }
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					AND = {
						event_target:muntenia = { is_subject = no }
						event_target:central_hungary = { is_subject = yes }
					}
					AND = {
						event_target:muntenia = { is_subject = yes }
						event_target:central_hungary = { is_subject = no }
					}
				}
			}
			modifier = {
				factor = 0
				event_target:muntenia = { original_tag = ROM }
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				event_target:central_hungary = {
					OR = {
						is_ally_with = AUS
						is_ally_with = HUN
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				has_event_target = can_offer_transylvania_to_romania
				NOT = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_hungary }
		82 = { transfer_if_owned = yes } #Banat
		83 = { transfer_if_owned = yes } #Partium
		154 = { transfer_if_owned = yes } #Alfold
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:muntenia }
		76 = { transfer_if_owned = yes } #Cluj
		84 = { transfer_if_owned = yes } #Brasov
		789 = { transfer_if_owned = yes } #Szeklerland
	}

	option = { #Offer to owner of Muntenia
		log = "[GetLogInfo]: event annex.1027 option annex.1027.c"
		name = annex.1027.c
		trigger = {
			has_event_target = can_offer_transylvania_to_romania
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0 #don't get pulled into random wars
				event_target:can_offer_transylvania_to_romania = { annexations_AI_dont_offer_if_target_involved_in_separate_major_war = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:can_offer_transylvania_to_romania }
		TRS = { save_to_offered_states = yes }
		var:tag_to_release = {
			set_country_flag = offered_transylvania_@ROOT
			offer_states_to_target = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1027 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		TRS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1027 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		TRS = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1027 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of West Banat
	id = annex.1028
	title = annexation_875
	desc = annexation_875_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					45 = { is_claim_or_core_of_ROOT = yes } #Vojvodina
					82 = { is_claim_or_core_of_ROOT = yes } #Banat
					107 = { is_claim_or_core_of_ROOT = yes } #Belgrade
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = {
					original_tag = ROM
					ROM_is_led_by_cantacuzino = no
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				45 = { #Vojvodina
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:45.owner = { save_event_target_as = vojvodina }
		}
		if = {
			limit = {
				82 = { #Banat
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:vojvodina }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:82.owner = { save_event_target_as = banat }
		}
		if = {
			limit = {
				107 = { #Belgrade
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:vojvodina }
						NOT = { tag = event_target:banat }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:107.owner = { save_event_target_as = belgrade }
		}
	}

	option = { #Give to owner of Vojvodina
		log = "[GetLogInfo]: event annex.1028 option annex.1028.a"
		name = annex.1028.a
		trigger = {
			has_event_target = vojvodina
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					NOT = { original_tag = ROM }
					ROM_is_led_by_cantacuzino = yes
				}
			}
			modifier = {
				factor = 0
				event_target:vojvodina = {
					OR = {
						original_tag = SER
						original_tag = ROM
					}
				}
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				event_target:vojvodina = {
					OR = {
						is_ally_with = HUN
						is_ally_with = AUS
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:vojvodina }
				is_ally_with = event_target:banat
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					event_target:banat = {
						NOT = {
							original_tag = SER
							original_tag = ROM
						}
					}
				}
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:banat = {
						NOT = {
							is_ally_with = HUN
							is_ally_with = AUS
						}
					}
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:vojvodina }
				is_ally_with = event_target:belgrade
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					event_target:belgrade = {
						NOT = {
							original_tag = SER
							original_tag = ROM
						}
					}
				}
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:belgrade = {
						NOT = {
							is_ally_with = HUN
							is_ally_with = AUS
						}
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:vojvodina = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:vojvodina }
		875 = { transfer_state_and_notify = yes } #West Banat
	}

	option = { #Give to owner of Banat
		log = "[GetLogInfo]: event annex.1028 option annex.1028.b"
		name = annex.1028.b
		trigger = {
			has_event_target = banat
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					NOT = { original_tag = ROM }
					ROM_is_led_by_cantacuzino = yes
				}
			}
			modifier = {
				factor = 0
				event_target:banat = {
					OR = {
						original_tag = SER
						original_tag = ROM
					}
				}
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				event_target:banat = {
					OR = {
						is_ally_with = HUN
						is_ally_with = AUS
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:banat }
				is_ally_with = event_target:vojvodina
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					event_target:vojvodina = {
						NOT = {
							original_tag = SER
							original_tag = ROM
						}
					}
				}
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:vojvodina = {
						NOT = {
							is_ally_with = HUN
							is_ally_with = AUS
						}
					}
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:banat }
				is_ally_with = event_target:belgrade
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					event_target:belgrade = {
						NOT = {
							original_tag = SER
							original_tag = ROM
						}
					}
				}
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:belgrade = {
						NOT = {
							is_ally_with = HUN
							is_ally_with = AUS
						}
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:banat = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:banat }
		875 = { transfer_state_and_notify = yes } #West Banat
	}

	option = { #Give to owner of Belgrade
		log = "[GetLogInfo]: event annex.1028 option annex.europe.give_to_owner_of_belgrade"
		name = annex.europe.give_to_owner_of_belgrade
		trigger = {
			has_event_target = belgrade
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					NOT = { original_tag = ROM }
					ROM_is_led_by_cantacuzino = yes
				}
			}
			modifier = {
				factor = 0
				event_target:belgrade = {
					OR = {
						original_tag = SER
						original_tag = ROM
					}
				}
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				event_target:belgrade = {
					OR = {
						is_ally_with = HUN
						is_ally_with = AUS
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgrade }
				is_ally_with = event_target:vojvodina
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					event_target:vojvodina = {
						NOT = {
							original_tag = SER
							original_tag = ROM
						}
					}
				}
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:vojvodina = {
						NOT = {
							is_ally_with = HUN
							is_ally_with = AUS
						}
					}
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgrade }
				is_ally_with = event_target:banat
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					event_target:belgrade = {
						NOT = {
							original_tag = SER
							original_tag = ROM
						}
					}
				}
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:banat = {
						NOT = {
							is_ally_with = HUN
							is_ally_with = AUS
						}
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:belgrade = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgrade }
		875 = { transfer_state_and_notify = yes } #West Banat
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1028 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		875 = { transfer_state_and_notify = yes } #West Banat
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1028 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				original_tag = ROM
				ROM_is_led_by_cantacuzino = no
			}
		}
		875 = { add_claim_of_ROOT = yes } #West Banat
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1028 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Vojvodina
	id = annex.1029
	title = annexation_45
	desc = annexation_45_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					43 = { is_claim_or_core_of_ROOT = yes } #Central Hungary
					794 = { is_claim_or_core_of_ROOT = yes } #Syrmia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				43 = { #Central Hungary
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:43.owner = { save_event_target_as = central_hungary }
		}
		if = {
			limit = {
				794 = { #Syrmia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:central_hungary }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:794.owner = { save_event_target_as = syrmia }
		}
	}

	option = { #Give to owner of Central Hungary
		log = "[GetLogInfo]: event annex.1029 option annex.europe.give_to_owner_of_central_hungary"
		name = annex.europe.give_to_owner_of_central_hungary
		trigger = {
			has_event_target = central_hungary
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:central_hungary = {
					OR = {
						is_ally_with = HUN
						is_ally_with = AUS
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_hungary }
				is_ally_with = event_target:syrmia
				OR = {
					NOT = { event_target:syrmia = { original_tag = SER } }
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:central_hungary = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_hungary }
		45 = { transfer_state_and_notify = yes } #Vojvodina
	}

	option = { #Give to owner of Syrmia
		log = "[GetLogInfo]: event annex.1029 option annex.1029.a"
		name = annex.1029.a
		trigger = {
			has_event_target = syrmia
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:syrmia = {
					OR = {
						original_tag = SER
						original_tag = ROM
					}
				}
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:syrmia }
				is_ally_with = event_target:central_hungary
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:central_hungary = {
						NOT = { is_ally_with = AUS }
						NOT = { is_ally_with = HUN }
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:syrmia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:syrmia }
		45 = { transfer_state_and_notify = yes } #Vojvodina
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1029 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		45 = { transfer_state_and_notify = yes } #Vojvodina
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1029 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		45 = { add_claim_of_ROOT = yes } #Vojvodina
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1029 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Burgenland
	id = annex.1030
	title = annexation_784
	desc = annexation_784_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					4 = { is_claim_or_core_of_ROOT = yes } #Lower Austria
					155 = { is_claim_or_core_of_ROOT = yes } #Transdanubia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				4 = { #Lower Austria
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:4.owner = { save_event_target_as = lower_austria }
		}
		if = {
			limit = {
				155 = { #Transdanubia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:lower_austria }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:155.owner = { save_event_target_as = transdanubia }
		}
	}

	option = { #Give to owner of Lower Austria
		log = "[GetLogInfo]: event annex.1030 option annex.europe.give_to_owner_of_lower_austria"
		name = annex.europe.give_to_owner_of_lower_austria
		trigger = {
			has_event_target = lower_austria
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lower_austria }
				is_ally_with = event_target:transdanubia
				OR = {
					NOT = { event_target:transdanubia = { original_tag = HUN } }
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:lower_austria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lower_austria }
		784 = { transfer_state_and_notify = yes } #Burgenland
	}

	option = { #Give to owner of transdanubia
		log = "[GetLogInfo]: event annex.1030 option annex.europe.give_to_owner_of_transdanubia"
		name = annex.europe.give_to_owner_of_transdanubia
		trigger = {
			has_event_target = transdanubia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:transdanubia = { original_tag = HUN }
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:transdanubia }
				is_ally_with = event_target:lower_austria
			}
			modifier = {
				factor = 0.1
				event_target:transdanubia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:transdanubia }
		784 = { transfer_state_and_notify = yes } #Burgenland
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1030 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		784 = { transfer_state_and_notify = yes } #Burgenland
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1030 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = {
				OR = {
					is_germany_or_splinter_tag = yes
					original_tag = AUS
				}
			}
			784 = { #Burgenland
				add_claim_of_ROOT = yes
				enable_state_integration_50_compliance = yes
			}
		}
		else = {
			784 = { add_claim_of_ROOT = yes } #Burgenland
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1030 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Croatia
	id = annex.1031
	title = annexation_109
	desc = annexation_109_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_yugoslavian_cores_claims = yes
			if = {
				limit = {
					OR = {
						AND = {
							AUS_is_unified = yes
							owns_state = 102 #Carniola
						}
						AND = {
							155 = { is_claim_or_core_of_ROOT = yes } #Transdanubia
							owns_state = 45 #Vojvodina
						}
						AND = {
							107 = { is_claim_or_core_of_ROOT = yes } #Belgrade
							owns_state = 104 #Bosnia
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					AUS = { #Carniola
						AUS_is_unified = yes
						102 = { annexations_required_state_is_owned_by_either_side = yes } #Carniola
						ROOT_can_grant_land = yes
					}
				}
				AUS = { save_event_target_as = carniola }
			}
			if = {
				limit = {
					155 = { #Transdanubia
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:carniola }
							45 = { annexations_required_state_is_owned_by_either_side = yes } #Vojvodina
							ROOT_can_grant_land = yes
						}
					}
				}
				var:155.owner = { save_event_target_as = transdanubia }
			}
			if = {
				limit = {
					107 = { #Belgrade
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:carniola }
							NOT = { tag = event_target:transdanubia }
							104 = { annexations_required_state_is_owned_by_either_side = yes } #Bosnia
							ROOT_can_grant_land = yes
						}
					}
				}
				if = {
					limit = {
						annexations_can_make_alliance_offer = yes
						SER = {
							owns_state = 107 #Belgrade
							annexations_is_valid_target_for_alliance_offer = yes
							NOT = { has_country_flag = offered_croatia_@ROOT }
						}
					}
					SER = { save_event_target_as = can_offer_croatia_to_serbia }
				}
				else = {
					var:107.owner = { save_event_target_as = belgrade }
				}
			}
			45 = { retain_state = yes } #Vojvodina
			103 = { retain_state = yes } #Rijeka
			163 = { retain_state = yes } #Dalmatia
			736 = { retain_state = yes } #Istria
			794 = { retain_state = yes } #Syrmia
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1031 option annex.1031.a"
		name = annex.1031.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = CRO }
		release_targeted_tag = yes
	}

	option = { #make Yugoslavia
		log = "[GetLogInfo]: event annex.1031 option annex.1031.b"
		name = annex.1031.b
		trigger = {
			102 = { is_valid_annexation_state = yes } #Carniola
			104 = { is_valid_annexation_state = yes } #Bosnia
			105 = { is_valid_annexation_state = yes } #Montenegro
			107 = { is_valid_annexation_state = yes } #Belgrade
			is_south_slav_tag = no
			is_subject = no
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = croatia
				OR = {
					is_major = no
					is_ally_with = event_target:croatia
					event_target:croatia = { has_socialist_government = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = CRO }
		every_state = {
			limit = { is_yugoslavia = yes }
			add_claim_of_target = yes
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 102 #Carniola
					state = 104 #Bosnia
					state = 105 #Montenegro
					state = 107 #Belgrade
					state = 108 #Morava
					state = 109 #Central Croatia
					state = 794 #Syrmia
				}
				is_valid_annexation_state = yes
			}
			transfer_state_without_overriding_occupation = yes
		}
		puppet_released_tag = yes
		var:tag_to_release = {
			if = {
				limit = { PREV = { has_socialist_government = yes } }
				set_cosmetic_tag = YUG_fed
			}
			else_if = {
				limit = { PREV = { has_left_democratic_government = yes } }
				set_cosmetic_tag = YUG_fed
			}
			else = {
				set_cosmetic_tag = YUG_rep
			}
			hidden_effect = { SER_enable_yugoslavia_integration = yes }
		}
	}

	option = { #Give to owner of Carniola
		log = "[GetLogInfo]: event annex.1031 option annex.europe.give_to_owner_of_carniola"
		name = annex.europe.give_to_owner_of_carniola
		trigger = {
			has_event_target = carniola
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:carniola = {
					OR = {
						is_ally_with = HUN
						is_ally_with = AUS
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				has_event_target = can_offer_croatia_to_serbia
				NOT = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carniola }
				is_ally_with = event_target:belgrade
				OR = {
					NOT = { event_target:belgrade = { original_tag = SER } }
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:carniola = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carniola }
		109 = { transfer_state_and_notify = yes } #Central Croatia
	}

	option = { #Give to owner of Transdanubia
		log = "[GetLogInfo]: event annex.1031 option annex.europe.give_to_owner_of_transdanubia"
		name = annex.europe.give_to_owner_of_transdanubia
		trigger = {
			has_event_target = transdanubia
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:transdanubia }
		109 = { transfer_state_and_notify = yes } #Central Croatia
		45 = { #Vojvodina
			clear_retain_state = yes
			transfer_if_owned = yes
		}
	}

	option = { #Give to owner of Belgrade
		log = "[GetLogInfo]: event annex.1031 option annex.europe.give_to_owner_of_belgrade"
		name = annex.europe.give_to_owner_of_belgrade
		trigger = {
			has_event_target = belgrade
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = can_offer_croatia_to_serbia
				NOT = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				event_target:belgrade = { original_tag = SER }
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgrade }
				is_ally_with = event_target:carniola
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:carniola = {
						NOT = { is_ally_with = AUS }
						NOT = { is_ally_with = HUN }
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:belgrade = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgrade }
		109 = { transfer_state_and_notify = yes } #Central Croatia
		104 = { transfer_if_owned = yes } #Bosnia
	}

	option = { #Offer to SER
		log = "[GetLogInfo]: event annex.1031 option annex.1031.c"
		name = annex.1031.c
		trigger = {
			has_event_target = can_offer_croatia_to_serbia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0 #don't get pulled into random wars
				event_target:can_offer_croatia_to_serbia = { annexations_AI_dont_offer_if_target_involved_in_separate_major_war = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:can_offer_croatia_to_serbia }
		hidden_effect = {
			102 = { save_to_offered_states = yes } #Carniola
			104 = { save_to_offered_states = yes } #Bosnia
			105 = { save_to_offered_states = yes } #Montenegro
			107 = { save_to_offered_states = yes } #Belgrade
			108 = { save_to_offered_states = yes } #Morava
			109 = { save_to_offered_states = yes } #Central Croatia
			794 = { save_to_offered_states = yes } #Syrmia
		}
		var:tag_to_release = {
			set_country_flag = offered_croatia_@ROOT
			offer_states_to_target = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1031 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		CRO = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1031 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		109 = { add_claim_of_ROOT = yes } #Central Croatia
		if = {
			limit = { 155 = { is_claim_or_core_of_ROOT = yes } } #Transdanubia
			45 = { add_claim_of_ROOT = yes } #Vojvodina
		}
		if = {
			limit = { 107 = { is_claim_or_core_of_ROOT = yes } } #Belgrade
			104 = { add_claim_of_ROOT = yes } #Bosnia
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1031 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Dalmatia
	id = annex.1032
	title = annexation_163
	desc = annexation_163_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					104 = { is_claim_or_core_of_ROOT = yes } #Bosnia
					109 = { is_claim_or_core_of_ROOT = yes } #Central Croatia
					160 = { is_claim_or_core_of_ROOT = yes } #Venetia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				104 = { #Bosnia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:104.owner = { save_event_target_as = bosnia }
		}
		if = {
			limit = {
				109 = { #Central Croatia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:bosnia }
					}
				}
			}
			var:109.owner = { save_event_target_as = central_croatia }
		}
		if = {
			limit = {
				160 = { #Venetia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:bosnia }
						NOT = { tag = event_target:central_croatia }
					}
				}
			}
			var:160.owner = { save_event_target_as = venetia }
		}
	}

	option = { #Give to owner of Bosnia
		log = "[GetLogInfo]: event annex.1032 option annex.1032.a"
		name = annex.1032.a
		trigger = {
			has_event_target = bosnia
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:bosnia }
				OR = {
					is_ally_with = event_target:central_croatia
					is_ally_with = event_target:venetia
				}
			}
			modifier = {
				factor = 0.1
				event_target:bosnia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:bosnia }
		163 = { transfer_state_and_notify = yes } #Dalmatia
	}

	option = { #Give to owner of Central Croatia
		log = "[GetLogInfo]: event annex.1032 option annex.europe.give_to_owner_of_central_croatia"
		name = annex.europe.give_to_owner_of_central_croatia
		trigger = {
			has_event_target = central_croatia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_croatia }
				OR = {
					is_ally_with = event_target:bosnia
					is_ally_with = event_target:venetia
				}
			}
			modifier = {
				factor = 0.1
				event_target:central_croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_croatia }
		163 = { transfer_state_and_notify = yes } #Dalmatia
	}

	option = { #Give to owner of Venetia
		log = "[GetLogInfo]: event annex.1032 option annex.europe.give_to_owner_of_venetia"
		name = annex.europe.give_to_owner_of_venetia
		trigger = {
			has_event_target = venetia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				OR = {
					is_ally_with = event_target:bosnia
					is_ally_with = event_target:central_croatia
				}
			}
			modifier = {
				factor = 0.1
				event_target:venetia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:venetia }
		163 = { transfer_state_and_notify = yes } #Dalmatia
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1032 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		163 = { transfer_state_and_notify = yes } #Dalmatia
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1032 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		163 = { add_claim_of_ROOT = yes } #Dalmatia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1032 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Slovenia
	id = annex.1033
	title = annexation_102
	desc = annexation_102_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = { is_slovenia = no }
				remove_core_of = SLV
				remove_claim_by = SLV
			}
			SLV = {
				drop_cosmetic_tag = yes
				SER_disable_yugoslavia_integration = yes
			}
			if = {
				limit = {
					OR = {
						AND = {
							OR = {
								is_south_slav_tag = yes
								has_country_flag = BUL_hijacked_yugoslavism
							}
							102 = { any_neighbor_state = { is_claim_or_core_of_ROOT = yes } } #Carniola
						}
						AND = {
							835 = { is_claim_or_core_of_ROOT = yes } #Carinthia
							owns_state = 1107 #Karavanks
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					109 = { #Central Croatia
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:109.owner = { save_event_target_as = central_croatia }
			}
			if = {
				limit = {
					835 = { #Carinthia
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:central_croatia }
							ROOT_can_grant_land = yes
							1107 = { annexations_required_state_is_owned_by_either_side = yes } #Karavanks
						}
					}
				}
				var:835.owner = { save_event_target_as = carinthia }
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1033 option annex.1033.a"
		name = annex.1033.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SLV }
		683 = { retain_state = yes } #Gorizia
		1107 = { retain_state = yes } #Karavanks
		1109 = { retain_state = yes } #Mura
		release_targeted_tag = yes
		var:tag_to_release = { SLV_move_back_generals = yes }
	}

	option = { #Give to owner of Central Croatia
		log = "[GetLogInfo]: event annex.1033 option annex.europe.give_to_owner_of_central_croatia"
		name = annex.europe.give_to_owner_of_central_croatia
		trigger = {
			has_event_target = central_croatia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_croatia }
				is_ally_with = event_target:carinthia
			}
			modifier = {
				factor = 0.1
				event_target:central_croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_croatia }
		102 = { transfer_state_and_notify = yes } #Carniola
	}

	option = { #Give to owner of Carinthia
		log = "[GetLogInfo]: event annex.1033 option annex.europe.give_to_owner_of_carinthia"
		name = annex.europe.give_to_owner_of_carinthia
		trigger = {
			has_event_target = carinthia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carinthia }
				is_ally_with = event_target:central_croatia
			}
			modifier = {
				factor = 0.1
				event_target:carinthia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carinthia }
		102 = { transfer_state_and_notify = yes } #Carniola
		1107 = { transfer_if_owned = yes } #Karavanks
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1033 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		102 = { transfer_state_and_notify = yes } #Carniola
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1033 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		102 = { add_claim_of_ROOT = yes } #Carniola
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1033 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Istria
	id = annex.1034
	title = annexation_736
	desc = annexation_736_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						102 = { is_claim_or_core_of_ROOT = yes } #Carniola
						owns_state = 683 #Gorizia
					}
					AND = {
						109 = { is_claim_or_core_of_ROOT = yes } #Central Croatia
						owns_state = 103 #Rijeka
					}
					160 = { is_claim_or_core_of_ROOT = yes } #Venetia
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = { is_germany_or_splinter_tag = yes }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				102 = { #Carniola
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						683 = { annexations_required_state_is_owned_by_either_side = yes } #Gorizia
					}
				}
			}
			var:102.owner = { save_event_target_as = carniola }
		}
		if = {
			limit = {
				109 = { #Central Croatia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:carniola }
						ROOT_can_grant_land = yes
						103 = { annexations_required_state_is_owned_by_either_side = yes } #Rijeka
					}
				}
			}
			var:109.owner = { save_event_target_as = central_croatia }
		}
		if = {
			limit = {
				160 = { #Venetia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:carniola }
						NOT = { tag = event_target:central_croatia }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:160.owner = { save_event_target_as = venetia }
		}
	}

	option = { #Give to owner of Carniola
		log = "[GetLogInfo]: event annex.1034 option annex.europe.give_to_owner_of_carniola"
		name = annex.europe.give_to_owner_of_carniola
		trigger = {
			has_event_target = carniola
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carniola }
				OR = {
					is_ally_with = event_target:central_croatia
					is_ally_with = event_target:venetia
				}
			}
			modifier = {
				factor = 0.1
				event_target:carniola = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carniola }
		736 = { transfer_state_and_notify = yes } #Istria
		683 = { transfer_if_owned = yes } #Gorizia
	}

	option = { #Give to owner of Central Croatia
		log = "[GetLogInfo]: event annex.1034 option annex.europe.give_to_owner_of_central_croatia"
		name = annex.europe.give_to_owner_of_central_croatia
		trigger = {
			has_event_target = central_croatia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_croatia }
				OR = {
					is_ally_with = event_target:carniola
					is_ally_with = event_target:venetia
				}
			}
			modifier = {
				factor = 0.1
				event_target:central_croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_croatia }
		736 = { transfer_state_and_notify = yes } #Istria
		103 = { transfer_if_owned = yes } #Rijeka
	}

	option = { #Give to owner of Venetia
		log = "[GetLogInfo]: event annex.1034 option annex.europe.give_to_owner_of_venetia"
		name = annex.europe.give_to_owner_of_venetia
		trigger = {
			has_event_target = venetia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				OR = {
					is_ally_with = event_target:carniola
					is_ally_with = event_target:central_croatia
				}
			}
			modifier = {
				factor = 0.1
				event_target:venetia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:venetia }
		736 = { transfer_state_and_notify = yes } #Istria
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1034 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		736 = { transfer_state_and_notify = yes } #Istria
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1034 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		736 = { add_claim_of_ROOT = yes } #Istria
		if = {
			limit = { 109 = { is_claim_or_core_of_ROOT = yes } } #Central Croatia
			103 = { add_claim_of_ROOT = yes } #Rijeka
		}
		if = {
			limit = { 102 = { is_claim_or_core_of_ROOT = yes } } #Carniola
			683 = { add_claim_of_ROOT = yes } #Gorizia
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1034 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Trieste
	id = annex.1035
	title = annexation_488
	desc = annexation_488_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					160 = { is_claim_or_core_of_ROOT = yes } #Venetia
					AND = {
						102 = { is_claim_or_core_of_ROOT = yes } #Carniola
						owns_state = 683 #Gorizia
					}
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = { is_germany_or_splinter_tag = yes }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				160 = { #Venetia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:160.owner = { save_event_target_as = venetia }
		}
		if = {
			limit = {
				102 = { #Carniola
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:venetia }
						ROOT_can_grant_land = yes
						683 = { annexations_required_state_is_owned_by_either_side = yes } #Gorizia
					}
				}
			}
			var:102.owner = { save_event_target_as = carniola }
		}
	}

	option = { #Give to owner of Venetia
		log = "[GetLogInfo]: event annex.1035 option annex.europe.give_to_owner_of_venetia"
		name = annex.europe.give_to_owner_of_venetia
		trigger = {
			has_event_target = venetia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				is_ally_with = event_target:carniola
			}
			modifier = {
				factor = 0.1
				event_target:venetia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:venetia }
		488 = { transfer_state_and_notify = yes } #Trieste
	}

	option = { #Give to owner of Carniola
		log = "[GetLogInfo]: event annex.1035 option annex.europe.give_to_owner_of_carniola"
		name = annex.europe.give_to_owner_of_carniola
		trigger = {
			has_event_target = carniola
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carniola }
				is_ally_with = event_target:venetia
			}
			modifier = {
				factor = 0.1
				event_target:carniola = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carniola }
		488 = { transfer_state_and_notify = yes } #Trieste
		683 = { transfer_if_owned = yes } #Trieste
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1035 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		488 = { transfer_state_and_notify = yes } #Trieste
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1035 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		488 = { add_claim_of_ROOT = yes } #Trieste
		if = {
			limit = { 102 = { is_claim_or_core_of_ROOT = yes } } #Carniola
			683 = { add_claim_of_ROOT = yes } #Gorizia
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1035 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Trentino
	id = annex.1036
	title = annexation_783
	desc = annexation_783_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					159 = { is_claim_or_core_of_ROOT = yes } #Lombardy
					160 = { is_claim_or_core_of_ROOT = yes } #Venetia
					AND = {
						153 = { is_claim_or_core_of_ROOT = yes } #North Tyrol
						owns_state = 39 #South Tyrol
					}
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = { is_germany_or_splinter_tag = yes }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				159 = { #Lombardy
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:159.owner = { save_event_target_as = lombardy }
		}
		if = {
			limit = {
				160 = { #Venetia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:lombardy }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:160.owner = { save_event_target_as = venetia }
		}
		if = {
			limit = {
				153 = { #North Tyrol
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:lombardy }
						NOT = { tag = event_target:venetia }
						39 = { annexations_required_state_is_owned_by_either_side = yes } #South Tyrol
						ROOT_can_grant_land = yes
					}
				}
			}
			var:153.owner = { save_event_target_as = tyrol }
		}
	}

	option = { #Give to owner of Lombardy
		log = "[GetLogInfo]: event annex.1036 option annex.europe.give_to_owner_of_lombardy"
		name = annex.europe.give_to_owner_of_lombardy
		trigger = {
			has_event_target = lombardy
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lombardy }
				is_ally_with = event_target:venetia
			}
			modifier = {
				factor = 0.1
				event_target:lombardy = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lombardy }
		783 = { transfer_state_and_notify = yes } #Trentino
	}

	option = { #Give to owner of Venetia
		log = "[GetLogInfo]: event annex.1036 option annex.europe.give_to_owner_of_venetia"
		name = annex.europe.give_to_owner_of_venetia
		trigger = {
			has_event_target = venetia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				is_ally_with = event_target:lombardy
			}
			modifier = {
				factor = 0.1
				event_target:venetia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:venetia }
		783 = { transfer_state_and_notify = yes } #Trentino
	}

	option = { #Give to owner of North Tyrol
		log = "[GetLogInfo]: event annex.1036 option annex.europe.give_to_owner_of_tyrol"
		name = annex.europe.give_to_owner_of_tyrol
		trigger = {
			has_event_target = tyrol
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				OR = {
					NOT = { is_ally_with = event_target:tyrol }
					event_target:tyrol = { is_germany_or_splinter_tag = yes }
				}
			}
			modifier = {
				factor = 0.1
				event_target:tyrol = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:tyrol }
		39 = { transfer_if_owned = yes } #South Tyrol
		783 = { transfer_state_and_notify = yes } #Trentino
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1036 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		783 = { transfer_state_and_notify = yes } #Trentino
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1036 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = { #Germany doesn't want Trentino
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = { 153 = { is_claim_or_core_of_ROOT = yes } } #North Tyrol
			39 = { add_claim_of_ROOT = yes } #South Tyrol
		}
		783 = { add_claim_of_ROOT = yes } #Trentino
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1036 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Switzerland
	id = annex.1037
	title = annexation_3
	desc = annexation_3_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_switzerland = yes }
					add_core_of = SWI
				}
				else = {
					remove_core_of = SWI
				}
				remove_claim_by = SWI
			}
			if = {
				limit = { has_government = national_populist }
				set_global_flag = SWI_germanization
				SWI = {
					SWI_eugen_bircher = {
						set_nationality = PREV
						if = {
							limit = { has_ideology = national_populist_subtype }
							promote_character = national_populist_subtype
						}
						else = {
							add_country_leader_role = {
								country_leader = {
									desc = SWI_eugen_bircher_leader_desc
									ideology = national_populist_subtype
								}
								promote_leader = yes
							}
						}
					}
				}
			}
			else = {
				clr_global_flag = SWI_germanization
				SWI = { SWI_eugen_bircher = { retire = yes } }
			}
			SWI = { remove_ideas = SWI_black_spot_of_europe_idea }
		}
		760 = { retain_state = yes } #Romandy
		761 = { retain_state = yes } #Ticino
		if = {
			limit = { 780 = { is_claim_or_core_of_ROOT = yes } } #Baden
			save_event_target_as = can_annex
			if = {
				limit = { NOT = { has_government = national_populist } }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				780 = { #Baden
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:780.owner = { save_event_target_as = germany }
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1037 option annex.1037.a"
		name = annex.1037.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
				has_government = national_populist
			}
			modifier = {
				factor = 0.4
				has_authoritarian_government = yes
				is_ally_with = event_target:germany
				event_target:germany = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = SWI }
		release_targeted_tag = yes
		if = {
			limit = { tag = GER }
			SWI = { complete_national_focus = SWI_german_aid }
		}
		else_if = {
			limit = { tag = AUS }
			SWI = { complete_national_focus = SWI_austrian_assisstance }
		}
		else_if = {
			limit = { has_socialist_government = yes }
			SWI = {
				complete_national_focus = SWI_bend_to_france
				unlock_national_focus = SWI_referendum_syndicalism
			}
		}
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1037 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 60
				has_authoritarian_government = yes
				is_ally_with = event_target:germany
				event_target:germany = { is_subject = no }
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		3 = { transfer_if_owned = yes } #Swiss Plateau
		151 = { transfer_if_owned = yes } #Eastern Switzerland
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1037 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		3 = { transfer_if_owned = yes } #Swiss Plateau
		151 = { transfer_if_owned = yes } #Eastern Switzerland
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1037 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = { has_government = national_populist }
			}
		}
		3 = { add_claim_of_ROOT = yes } #Swiss Plateau
		151 = { add_claim_of_ROOT = yes } #Eastern Switzerland
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1037 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Romandy
	id = annex.1039
	title = annexation_760
	desc = annexation_760_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = SWI
					27 = { is_claim_or_core_of_ROOT = yes } #Burgundy
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = { SWI = { ROOT_can_grant_land = yes } }
			SWI = { save_event_target_as = switzerland }
		}
		if = {
			limit = {
				27 = { #Burgundy
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:switzerland }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:27.owner = { save_event_target_as = france }
		}
	}

	option = { #Give to Switzerland
		log = "[GetLogInfo]: event annex.1039 option annex.europe.give_to_switzerland"
		name = annex.europe.give_to_switzerland
		trigger = {
			has_event_target = switzerland
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_french_tag = yes
				has_any_authoritarian_government = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:switzerland }
				is_ally_with = event_target:france
			}
			modifier = {
				factor = 0.1
				event_target:switzerland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:switzerland }
		760 = { transfer_state_and_notify = yes } #Romandy
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1039 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				original_tag = SWI
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:switzerland
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		760 = { transfer_state_and_notify = yes } #Romandy
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1039 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		760 = { transfer_state_and_notify = yes } #Romandy
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1039 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = switzerland
				has_any_authoritarian_government = no
			}
		}
		if = {
			limit = { original_tag = SWI }
			760 = { remove_claim_and_add_core_of_ROOT = yes } #Romandy
		}
		else = {
			760 = { add_claim_of_ROOT = yes } #Romandy
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1039 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Ticino
	id = annex.1040
	title = annexation_761
	desc = annexation_761_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = SWI
					158 = { is_claim_or_core_of_ROOT = yes } #Piedmont
					159 = { is_claim_or_core_of_ROOT = yes } #Lombardy
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = { SWI = { ROOT_can_grant_land = yes } }
			SWI = { save_event_target_as = switzerland }
		}
		if = {
			limit = {
				159 = { #Lombardy
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = SWI }
					}
				}
			}
			var:159.owner = { save_event_target_as = lombardy }
		}
	}

	option = { #Give to Switzerland
		log = "[GetLogInfo]: event annex.1040 option annex.europe.give_to_switzerland"
		name = annex.europe.give_to_switzerland
		trigger = {
			has_event_target = switzerland
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:switzerland }
				is_ally_with = event_target:lombardy
			}
			modifier = {
				factor = 0
				is_italian_tag = yes
				has_subject = event_target:lombardy
			}
			modifier = {
				factor = 0.1
				event_target:switzerland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:switzerland }
		761 = { transfer_state_and_notify = yes } #Ticino
	}

	option = { #Give to owner of Lombardy
		log = "[GetLogInfo]: event annex.1040 option annex.europe.give_to_owner_of_lombardy"
		name = annex.europe.give_to_owner_of_lombardy
		trigger = {
			has_event_target = lombardy
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lombardy }
				is_ally_with = event_target:switzerland
			}
			modifier = {
				factor = 0.1
				event_target:lombardy = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lombardy }
		761 = { transfer_state_and_notify = yes } #Ticino
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1040 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		761 = { transfer_state_and_notify = yes } #Ticino
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1040 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { original_tag = SWI }
			761 = { remove_claim_and_add_core_of_ROOT = yes } #Ticino
		}
		else = {
			761 = { add_claim_of_ROOT = yes } #Ticino
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1040 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

#####################################
##   W E S T E R N   E U R O P E   ##
#####################################

country_event = { #Fate of France
	id = annex.1041
	title = annexation_16
	desc = annexation_16_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = FRA } }
				FRA = { clear_cores_of_tag_if_possible = yes }
			}
			if = {
				limit = { NOT = { country_exists = NFA } }
				NFA = { clear_cores_of_tag_if_possible = yes }
			}
			if = {
				limit = { NOT = { country_exists = FRP } }
				FRP = {
					clear_cores_of_tag_if_possible = yes
					if = {
						limit = { has_character = GER_fedor_von_bock }
						GER_fedor_von_bock = {
							remove_all_country_leader_roles = yes
							set_nationality = GER
						}
					}
				}
			}
			if = {
				limit = { NOT = { country_exists = LIL } }
				LIL = {
					clear_cores_of_tag_if_possible = yes
					if = {
						limit = { has_character = GER_roland_koster }
						GER_roland_koster = {
							remove_all_country_leader_roles = yes
							set_nationality = GER
						}
					}
				}
			}
			if = {
				limit = { is_french_tag = yes }
				save_event_target_as = can_annex
			}
			random_other_country = {
				limit = {
					is_french_tag = yes
					is_ally_with = ROOT
					OR = {
						is_subject = no
						is_subject_of = ROOT
					}
				}
				save_event_target_as = france
			}
			if = {
				limit = { NOT = { has_event_target = france } }
				if = {
					limit = { FRA = { ROOT_can_grant_land = yes } }
					FRA = { save_event_target_as = france }
				}
				else_if = {
					limit = { FRP = { ROOT_can_grant_land = yes } }
					FRP = { save_event_target_as = france }
				}
				if = {
					limit = { NFA = { ROOT_can_grant_land = yes } }
					NFA = { save_event_target_as = france_exile }
				}
			}
			1 = { retain_state = yes } #Corsica
			14 = { retain_state = yes } #Upper Brittany
			17 = { retain_state = yes } #Pas-de-Calais
			28 = { retain_state = yes } #Alsace-Lorraine
			29 = { retain_state = yes } #Dunkirk
			735 = { retain_state = yes } #Savoy
			762 = { retain_state = yes } #Nice
			779 = { retain_state = yes } #Labourd
			817 = { retain_state = yes } #Roussillon
			943 = { retain_state = yes } #Upper Savoy
			980 = { retain_state = yes } #Lille
			983 = { retain_state = yes } #Brittany
		}
	}

	option = { #Restore the Commune of France!
		log = "[GetLogInfo]: event annex.1041 option annex.1041.a"
		name = annex.1041.a
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = FRA }
			is_french_tag = no
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_release_puppet_default_logic = yes
			}
		}
		set_temp_variable = { tag_to_release = FRA }
		every_state = {
			limit = { is_france = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
	}

	option = { #Restore the French Republic!
		log = "[GetLogInfo]: event annex.1041 option annex.1041.b"
		name = annex.1041.b
		trigger = {
			is_ally_with = ENT
			NOT = { country_exists = NFA }
			has_socialist_government = no
			is_french_tag = no
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_release_puppet_default_logic = yes
			}
		}
		set_temp_variable = { tag_to_release = NFA }
		every_state = {
			limit = {
				is_france = yes
				NOT = { is_core_of = var:tag_to_release }
			}
			add_claim_by = var:tag_to_release
		}
		release_targeted_tag_with_claims = yes
		hidden_effect = { NFA_puppet_setup = yes }
	}

	option = { #Set up a French Puppet Government
		log = "[GetLogInfo]: event annex.1041 option annex.1041.c"
		name = annex.1041.c
		trigger = {
			NOT = { country_exists = FRP }
			OR = {
				NOT = { is_ally_with = ENT }
				NFA = {
					exists = yes
					NOT = { is_ally_with = ROOT }
				}
			}
			OR = {
				NOT = { is_ally_with = event_target:france }
				event_target:france = {
					is_subject = yes
					NOT = { is_subject_of = ROOT }
				}
			}
			has_socialist_government = no
			is_french_tag = no
			is_subject = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_AI_release_puppet_default_logic = yes
			}
		}
		set_temp_variable = { tag_to_release = FRP }
		every_state = {
			limit = { is_france = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
		if = {
			limit = { original_tag = GER }
			var:tag_to_release = { GER_setup_puppet_france = yes }
		}
		if = {
			limit = {
				NOT = { original_tag = GER }
			}
			hidden_effect = {
				var:tag_to_release = {
					country_event = frp.1
				}
			}
		}
		if = {
			limit = { country_exists = NFA }
			reverse_add_opinion_modifier = {
				target = NFA
				modifier = NFA_occupied_france
			}
		}
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1041 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				event_target:france = { annexations_AI_grant_land_default_logic = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		every_owned_state = {
			limit = {
				is_france = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to NFA
		log = "[GetLogInfo]: event annex.1041 option annex.europe.give_to_nfa"
		name = annex.europe.give_to_nfa
		trigger = {
			has_event_target = france_exile
			NOT = { original_tag = GER }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				event_target:france_exile = { annexations_AI_grant_land_default_logic = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france_exile }
		every_owned_state = {
			limit = {
				is_france = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #GER only: Meet with the French
		log = "[GetLogInfo]: event annex.1041 option annex.1041.d"
		name = annex.1041.d
		trigger = {
			original_tag = GER
			has_event_target = france_exile
			any_of_scopes = {
				array = global.france_states_array
				is_owned_by = event_target:france_exile
			}
		}
		ai_chance = { base = 30 }
		event_target:france_exile = { country_event = nfa.120 }
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1041 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_france = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1041 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			limit = { is_france = yes }
			add_claim_of_ROOT = yes
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1041 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Brittany
	id = annex.1042
	title = annexation_14
	desc = annexation_14_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { 30 = { is_claim_or_core_of_ROOT = yes } } #Maine
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				30 = { #Maine
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:30.owner = { save_event_target_as = france }
		}
	}

	option = { #Liberate Brittany
		log = "[GetLogInfo]: event annex.1042 option annex.1042.a"
		name = annex.1042.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = BRI }
		14 = { remove_claim_and_add_core_of_target = yes } #Upper Brittany
		983 = { remove_claim_and_add_core_of_target = yes } #Brittany
		release_targeted_tag = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annex.1042 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		14 = { transfer_if_owned = yes } #Upper Brittany
		983 = { transfer_if_owned = yes } #Brittany
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1042 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		14 = { transfer_if_owned = yes } #Upper Brittany
		983 = { transfer_if_owned = yes } #Brittany
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1042 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		14 = { add_claim_of_ROOT = yes } #Upper Brittany
		983 = { add_claim_of_ROOT = yes } #Brittany
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1042 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Pas de Calais
	id = annex.1043
	title = annexation_17
	desc = annexation_17_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					24 = { is_claim_or_core_of_ROOT = yes } #Picardy
					AND = {
						34 = { is_claim_or_core_of_ROOT = yes } #Hainaut
						owns_state = 980 #Lille
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				24 = { #Picardy
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:24.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				34 = { #Hainaut
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:france }
						980 = { annexations_required_state_is_owned_by_either_side = yes } #Lille
						ROOT_can_grant_land = yes
					}
				}
			}
			var:34.owner = { save_event_target_as = belgium }
		}
	}

	option = { #give to France
		log = "[GetLogInfo]: event annex.1043 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:belgium
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		17 = { transfer_state_and_notify = yes } #Pas-de-Calais
	}

	option = { #give to Belgium
		log = "[GetLogInfo]: event annex.1043 option annex.give_to_belgium"
		name = annex.give_to_belgium
		trigger = {
			has_event_target = belgium
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:france
			}
			modifier = {
				factor = 0.1
				event_target:belgium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		17 = { transfer_state_and_notify = yes } #Pas-de-Calais
		980 = { transfer_if_owned = yes } #Lille
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1043 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		17 = { transfer_state_and_notify = yes } #Dunkirk
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1043 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		17 = { add_claim_of_ROOT = yes } #Pas-de-Calais
		if = {
			limit = {
				34 = { is_claim_or_core_of_ROOT = yes } #Hainaut
				980 = { is_valid_annexation_state = yes } #Lille
			}
			980 = { add_claim_of_ROOT = yes } #Lille
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1043 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Britain
	id = annex.1044
	title = annexation_126
	desc = annexation_126_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			ENG = { drop_cosmetic_tag = yes }
			event_target:original_britain_puppet = {
				clear_cores_of_tag_if_possible = yes
				if = {
					limit = { has_character = GER_nikolaus_von_falkenhorst }
					GER_nikolaus_von_falkenhorst = {
						remove_all_country_leader_roles = yes
						set_nationality = GER
					}
				}
			}
			if = {
				limit = { is_british_tag = yes }
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					has_event_target = KR_king_base
					event_target:KR_king_base = { ROOT_can_grant_land = yes }
				}
				event_target:KR_king_base = { save_event_target_as = british_exiles }
			}
			else_if = {
				limit = {
					NOT = { country_exists = event_target:KR_king_base }
					ENT = { ROOT_can_grant_land = yes }
				}
				ENT = { save_event_target_as = british_exiles }
			}
		}
	}

	option = { #release Britain
		log = "[GetLogInfo]: event annex.1044 option annex.1044.a"
		name = annex.1044.a
		trigger = {
			121 = { is_valid_annexation_state = yes } #Lothian
			annexations_can_release_united_kingdom = no
			is_subject = no
		}
		ai_chance = { base = 60 }
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = ENG }
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = {
					if = {
						limit = { has_government = totalist }
						ENG_create_puppet_totalist_government = yes
					}
					else = {
						ENG_create_puppet_syndicalist_government = yes
					}
				}
			}
		}
		else = {
			custom_effect_tooltip = GBP_british_collab
			hidden_effect = {
				set_temp_variable = { tag_to_release = event_target:original_britain_puppet }
				GBP_create_cores = yes
				release_targeted_tag = yes
				var:tag_to_release = {
					GBP_set_up_government = yes
					GBP_transfer_english_commanders = yes
					SCO_transfer_commanders = yes
					WLS_transfer_commanders = yes
				}
				if = {
					limit = { NOT = { original_tag = GER } }
					country_event = gbp.7
				}
			}
		}
	}

	option = { #release England and Scotland
		log = "[GetLogInfo]: event annex.1044 option annex.1044.b"
		name = annex.1044.b
		trigger = {
			121 = { is_valid_annexation_state = yes } #Lothian
			annexations_can_release_united_kingdom = no
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SCO }
		SCO_create_cores = yes
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				SCO_set_up_government = yes
				SCO_transfer_commanders = yes
				country_event = gbp.5
			}
		}
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = ENG }
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = {
					set_cosmetic_tag = ENG_england
					if = {
						limit = { has_government = totalist }
						ENG_create_puppet_totalist_government = yes
					}
					else = {
						ENG_create_puppet_syndicalist_government = yes
					}
				}
			}
		}
		else = {
			set_temp_variable = { GBP_no_scotland = 1 }
			set_temp_variable = { tag_to_release = event_target:original_britain_puppet }
			GBP_create_cores = yes
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = {
					GBP_set_up_government = yes
					GBP_transfer_english_commanders = yes
					WLS_transfer_commanders = yes
				}
				country_event = gbp.2
			}
		}
	}

	option = { #release England, Scotland and Wales
		log = "[GetLogInfo]: event annex.1044 option annex.1044.c"
		name = annex.1044.c
		trigger = {
			121 = { is_valid_annexation_state = yes } #Lothian
			122 = { is_valid_annexation_state = yes } #South Wales
			annexations_can_release_united_kingdom = no
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = WLS }
		WLS_create_cores = yes
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				WLS_set_up_government = yes
				WLS_transfer_commanders = yes
				country_event = gbp.6
			}
		}
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = SCO }
		SCO_create_cores = yes
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				SCO_set_up_government = yes
				SCO_transfer_commanders = yes
				country_event = gbp.5
			}
		}
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = ENG }
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = {
					set_cosmetic_tag = ENG_england
					if = {
						limit = { has_government = totalist }
						ENG_create_puppet_totalist_government = yes
					}
					else = {
						ENG_create_puppet_syndicalist_government = yes
					}
				}
			}
		}
		else = {
			set_temp_variable = { GBP_no_scotland = 1 }
			set_temp_variable = { GBP_no_wales = 1 }
			set_temp_variable = { tag_to_release = event_target:original_britain_puppet }
			GBP_create_cores = yes
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = {
					GBP_set_up_government = yes
					GBP_transfer_english_commanders = yes
				}
				country_event = gbp.3
			}
		}
	}

	option = { #release England
		log = "[GetLogInfo]: event annex.1044 option annex.1044.d"
		name = annex.1044.d
		trigger = {
			121 = { is_valid_annexation_state = no } #Lothian
			annexations_can_release_united_kingdom = no
			is_subject = no
		}
		ai_chance = { base = 0 }
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = ENG }
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = {
					set_cosmetic_tag = ENG_england
					if = {
						limit = { has_government = totalist }
						ENG_create_puppet_totalist_government = yes
					}
					else = {
						ENG_create_puppet_syndicalist_government = yes
					}
				}
			}
		}
		else = {
			set_temp_variable = { GBP_no_scotland = 1 }
			set_temp_variable = { GBP_no_wales = 1 }
			set_temp_variable = { tag_to_release = event_target:original_britain_puppet }
			GBP_create_cores = yes
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = {
					GBP_set_up_government = yes
					GBP_transfer_english_commanders = yes
				}
			}
		}
	}

	option = { #restore a free United Kingdom
		log = "[GetLogInfo]: event annex.1044 option annex.1044.e"
		name = annex.1044.e
		trigger = {
			annexations_can_release_united_kingdom = yes
			is_subject = no
		}
		country_event = uk.1
	}

	option = { #Give to the exiles
		log = "[GetLogInfo]: event annex.1044 option annex.europe.give_to_british_exiles"
		name = annex.europe.give_to_british_exiles
		trigger = {
			has_event_target = british_exiles
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:british_exiles }
			}
		}
		set_temp_variable = { tag_to_release = event_target:british_exiles }
		every_owned_state = {
			limit = {
				is_great_britain = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1044 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				OR = {
					region = 1 #Southern England
					region = 2 #Northern England
				}
				NOT = { state = 122 } #South Wales
				NOT = { state = 957 } #North Wales
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1044 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			limit = { is_great_britain = yes }
			add_claim_of_ROOT = yes
		}
		if = {
			limit = { owns_state = 121 } #Lothian
			GBP_change_to_britain = yes
			if = {
				limit = { has_cosmetic_tag = ENG_england }
				effect_tooltip = { set_cosmetic_tag = ENG }
				drop_cosmetic_tag = yes
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1044 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Scotland
	id = annex.1045
	title = annexation_121
	desc = annexation_121_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			SCO = { clear_cores_of_tag_if_possible = yes }
			if = {
				limit = { NOT = { has_global_flag = scotland_released_once } }
				set_global_flag = scotland_released_once
				SCO = {
					add_ideas = {
						SCO_unionist_question
						SCO_economic_breakdown
					}
				}
			}
			if = {
				limit = {
					OR = {
						130 = { is_claim_or_core_of_ROOT = yes } #Yorkshire
						131 = { is_claim_or_core_of_ROOT = yes } #Northumberland
						1108 = { is_claim_or_core_of_ROOT = yes } #Cumberland
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					131 = { #Northumberland
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:131.owner = { save_event_target_as = britain }
			}
			else_if = {
				limit = {
					1108 = { #Cumberland
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:1108.owner = { save_event_target_as = britain }
			}
			else_if = {
				limit = {
					130 = { #Yorkshire
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:130.owner = { save_event_target_as = britain }
			}
			if = {
				limit = {
					has_event_target = KR_king_base
					event_target:KR_king_base = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:britain }
					}
				}
				event_target:KR_king_base = { save_event_target_as = british_exiles }
			}
		}
	}

	option = { #puppet SCO
		log = "[GetLogInfo]: event annex.1045 option annex.1045.a"
		name = annex.1045.a
		trigger = {
			is_subject = no
			NOT = { is_ally_with = event_target:british_exiles }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = britain
				OR = {
					is_major = no
					is_ally_with = event_target:britain
					event_target:britain = { has_socialist_government = yes }
				}
			}
			modifier = {
				factor = 0
				has_event_target = british_exiles
				is_major = no
			}
		}
		set_temp_variable = { tag_to_release = SCO }
		SCO_create_cores = yes
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				SCO_set_up_government = yes
				SCO_transfer_commanders = yes
				country_event = gbp.5
			}
		}
	}

	option = { #Give to the British
		log = "[GetLogInfo]: event annex.1045 option annex.give_to_britain"
		name = annex.give_to_britain
		trigger = {
			has_event_target = britain
			NOT = { is_ally_with = event_target:british_exiles }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = yes
				has_socialist_government = no
				OR = {
					NOT = { is_ally_with = event_target:britain }
					event_target:britain = {
						is_subject = yes
						NOT = { is_subject_of = ROOT }
					}
				}
			}
			modifier = {
				add = 20
				NOT = { has_event_target = british_exiles }
			}
			modifier = {
				factor = 0.1
				event_target:britain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:britain }
		every_owned_state = {
			limit = { region = 3 } #Scotland
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to the exiles
		log = "[GetLogInfo]: event annex.1045 option annex.europe.give_to_british_exiles"
		name = annex.europe.give_to_british_exiles
		trigger = {
			has_event_target = british_exiles
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.1
				event_target:british_exiles = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:british_exiles }
		every_owned_state = {
			limit = { region = 3 } #Scotland
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1045 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				region = 3 #Scotland
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1045 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { is_british_tag = yes }
			every_state = {
				limit = { region = 3 } #Scotland
				remove_claim_and_add_core_of_ROOT = yes
			}
		}
		else = {
			every_state = {
				limit = { region = 3 } #Scotland
				add_claim_of_ROOT = yes
			}
		}
		if = {
			limit = { has_cosmetic_tag = ENG_england }
			effect_tooltip = { set_cosmetic_tag = ENG }
			drop_cosmetic_tag = yes
		}
		GBP_change_to_britain = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1045 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Wales
	id = annex.1046
	title = annexation_122
	desc = annexation_122_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			WLS = { clear_cores_of_tag_if_possible = yes }
			if = {
				limit = { NOT = { has_global_flag = wales_released_once } }
				set_global_flag = wales_released_once
				WLS = {
					add_ideas = {
						WLS_unionist_tensions
						WLS_economic_breakdown
					}
				}
			}
			if = {
				limit = { 128 = { is_claim_or_core_of_ROOT = yes } } #West Midlands
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					128 = { #West Midlands
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:128.owner = { save_event_target_as = britain }
			}
			if = {
				limit = {
					has_event_target = KR_king_base
					event_target:KR_king_base = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:britain }
					}
				}
				event_target:KR_king_base = { save_event_target_as = british_exiles }
			}
		}
	}

	option = { #puppet WLS
		log = "[GetLogInfo]: event annex.1046 option annex.1046.a"
		name = annex.1046.a
		trigger = {
			is_subject = no
			NOT = { is_ally_with = event_target:british_exiles }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = britain
				OR = {
					is_major = no
					is_ally_with = event_target:britain
					event_target:britain = { has_socialist_government = yes }
				}
			}
			modifier = {
				factor = 0
				has_event_target = british_exiles
				is_major = no
			}
		}
		set_temp_variable = { tag_to_release = WLS }
		WLS_create_cores = yes
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				WLS_set_up_government = yes
				WLS_transfer_commanders = yes
			}
		}
	}

	option = { #Give to the British
		log = "[GetLogInfo]: event annex.1046 option annex.give_to_britain"
		name = annex.give_to_britain
		trigger = {
			has_event_target = britain
			NOT = { is_ally_with = event_target:british_exiles }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = yes
				has_socialist_government = no
				OR = {
					NOT = { is_ally_with = event_target:britain }
					event_target:britain = {
						is_subject = yes
						NOT = { is_subject_of = ROOT }
					}
				}
			}
			modifier = {
				add = 30
				NOT = { has_event_target = british_exiles }
			}
			modifier = {
				factor = 0.1
				event_target:britain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:britain }
		122 = { transfer_if_owned = yes } #South Wales
		957 = { transfer_if_owned = yes } #North Wales
	}

	option = { #Give to the exiles
		log = "[GetLogInfo]: event annex.1046 option annex.europe.give_to_british_exiles"
		name = annex.europe.give_to_british_exiles
		trigger = {
			has_event_target = british_exiles
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.1
				event_target:british_exiles = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:british_exiles }
		122 = { transfer_if_owned = yes } #South Wales
		957 = { transfer_if_owned = yes } #North Wales
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1046 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		122 = { transfer_if_owned = yes } #South Wales
		957 = { transfer_if_owned = yes } #North Wales
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1046 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { is_british_tag = yes }
			122 = { remove_claim_and_add_core_of_ROOT = yes } #South Wales
			957 = { remove_claim_and_add_core_of_ROOT = yes } #North Wales
		}
		else = {
			122 = { add_claim_of_ROOT = yes } #South Wales
			957 = { add_claim_of_ROOT = yes } #North Wales
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1046 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Ireland
	id = annex.1047
	title = annexation_113
	desc = annexation_113_desc
	picture = GFX_report_event_IRE_map

	immediate = {
		hidden_effect = {
			119 = { #Northern Ireland
				add_core_of = IRE
				retain_state = yes
			}
		}
	}

	is_triggered_only = yes

	option = { #liberate
		log = "[GetLogInfo]: event annex.1047 option annex.1047.a"
		name = annex.1047.a
		trigger = {
			is_subject = no
			is_british_tag = no
		}
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		if = {
			limit = {
				OR = {
					tag = NFA
					tag = PAP
					tag = POR
					tag = SIC
					original_tag = SPA
				}
				has_government = national_populist
			}
			country_event = annex.184
		}
		else = {
			hidden_effect = {
				if = {
					limit = { has_socialist_government = yes }
					var:tag_to_release = { IRE_create_govt_totalist_puppet = yes }
				}
				else_if = {
					limit = { has_elected_government = yes }
					var:tag_to_release = { IRE_create_govt_soccon_puppet = yes }
				}
				else = {
					var:tag_to_release = { IRE_create_govt_pataut_puppet = yes }
				}
			}
		}
	}

	option = { #British option: independent united Ireland
		log = "[GetLogInfo]: event annex.1047 option annex.1047.b"
		name = annex.1047.b
		trigger = {
			is_subject = no
			is_british_tag = yes
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_government = totalist
					AND = {
						tag = GBR
						OR = {
							has_government = authoritarian_democrat
							has_game_rule = { rule = GBR_path option = GBR_PATH_ELECTED_AUTDEM }
							has_game_rule = { rule = GBR_path option = GBR_PATH_GUIDED_AUTDEM }
						}
					}
				}
			}
			modifier = {
				factor = 0.2
				tag = GBR
				OR = {
					has_government = market_liberal
					has_government = social_conservative
					has_game_rule = { rule = GBR_path option = GBR_PATH_SOCCON }
					has_game_rule = { rule = GBR_path option = GBR_PATH_MARLIB }
				}
			}
		}
		119 = { #Northern Ireland
			if = {
				limit = { is_claimed_by = ROOT } #Northern Ireland
				remove_claim_by = ROOT
			}
			if = {
				limit = { is_core_of = ROOT }
				remove_core_of = ROOT
			}
			clear_retain_state = yes
		}
		if = {
			limit = { has_idea = IRE_IRA_UVF_resistance_idea }
			remove_ideas = IRE_IRA_UVF_resistance_idea
		}
		else_if = {
			limit = { has_idea = IRE_IRA_resistance_idea }
			remove_ideas = IRE_IRA_resistance_idea
		}
		set_temp_variable = { tag_to_release = IRE }
		var:tag_to_release = {
			every_core_state = {
				limit = { is_valid_annexation_state = yes }
				transfer_state_without_overriding_occupation = yes
			}
		}
		if = {
			limit = { is_in_faction = yes }
			faction_leader = { add_to_faction = IRE }
		}
		hidden_effect = {
			if = {
				limit = { has_socialist_government = yes }
				var:tag_to_release = {
					set_country_flag = IRE_independent_socialist_republic
					IRE_create_govt_syndicalist_puppet = yes
					set_country_flag = { flag = IRE_joining_internationale days = 5 value = 1 }
				}
			}
			else = {
				var:tag_to_release = { IRE_create_govt_marlib_puppet = yes }
			}
		}
	}

	option = { #British option: puppet socialist Ireland
		log = "[GetLogInfo]: event annex.1047 option annex.1047.c"
		name = annex.1047.c
		trigger = {
			is_subject = no
			is_british_tag = yes
			has_socialist_government = yes
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_government = totalist
			}
		}
		if = {
			limit = { has_idea = IRE_IRA_UVF_resistance_idea }
			remove_ideas = IRE_IRA_UVF_resistance_idea
		}
		119 = { #Northern Ireland
			clear_retain_state = yes
		}
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = { IRE_create_govt_totalist_puppet = yes }
		}
	}

	option = { #British option: puppet dominion Ireland
		log = "[GetLogInfo]: event annex.1047 option annex.1047.d"
		name = annex.1047.d
		trigger = {
			is_subject = no
			is_british_tag = yes
			has_socialist_government = no
			owns_state = 119 #Northern Ireland
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				119 = { is_claim_or_core_of_ROOT = yes } #Northern Ireland
			}
			modifier = {
				factor = 0.1
				OR = {
					has_government = social_conservative
					has_government = authoritarian_democrat
					has_game_rule = { rule = GBR_path option = GBR_PATH_SOCCON }
					has_game_rule = { rule = GBR_path option = GBR_PATH_ELECTED_AUTDEM }
					has_game_rule = { rule = GBR_path option = GBR_PATH_GUIDED_AUTDEM }
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_government = social_democrat
					has_game_rule = { rule = GBR_path option = GBR_PATH_CROSSMAN_SOCDEM }
					has_game_rule = { rule = GBR_path option = GBR_PATH_GAITSKELL_SOCDEM }
				}
			}
		}
		119 = { #Northern Ireland
			if = {
				limit = { is_claimed_by = ROOT } #Northern Ireland
				remove_claim_by = ROOT
			}
			if = {
				limit = { is_core_of = ROOT }
				remove_core_of = ROOT
			}
			clear_retain_state = yes
		}
		if = {
			limit = { has_idea = IRE_IRA_resistance_idea }
			remove_ideas = IRE_IRA_resistance_idea
		}
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		var:tag_to_release = {
			set_cosmetic_tag = IRE_dominion
			set_country_flag = IRE_british_dominion
			hidden_effect = { IRE_create_govt_marlib_puppet = yes }
		}
	}

	option = { #British option: puppet divided Ireland
		log = "[GetLogInfo]: event annex.1047 option annex.1047.e"
		name = annex.1047.e
		trigger = {
			is_subject = no
			is_british_tag = yes
			has_socialist_government = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				119 = { is_claim_or_core_of_ROOT = no } #Northern Ireland
				OR = {
					has_government = social_democrat
					has_game_rule = { rule = GBR_path option = GBR_PATH_GAITSKELL_SOCDEM }
					has_game_rule = { rule = GBR_path option = GBR_PATH_CROSSMAN_SOCDEM }
				}
			}
			modifier = {
				factor = 0.2
				OR = {
					has_government = market_liberal
					has_game_rule = { rule = GBR_path option = GBR_PATH_MARLIB }
				}
			}
		}
		119 = { add_claim_of_ROOT = yes } #Northern Ireland
		if = {
			limit = { has_idea = IRE_IRA_resistance_idea }
			remove_ideas = IRE_IRA_resistance_idea
		}
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		var:tag_to_release = {
			set_country_flag = IRE_british_puppet
			hidden_effect = { IRE_create_govt_marlib_puppet = yes }
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1047 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		IRE = { set_transfer_target_cores = yes }
		NIR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1047 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Netherlands
	id = annex.1048
	title = annexation_7
	desc = annexation_7_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			HOL = { HOL_remove_monarchy = yes }
			every_state = {
				if = {
					limit = { is_netherlands = yes }
					add_core_of = HOL
				}
				else = {
					remove_core_of = HOL
				}
				remove_claim_by = HOL
			}
			978 = { retain_state = yes } #Limburg
			979 = { retain_state = yes } #Westerscheldt
		}
		if = {
			limit = {
				annexations_can_make_alliance_offer = yes
				DEI = {
					annexations_is_valid_target_for_alliance_offer = yes
					NOT = { has_country_flag = offered_netherlands_@ROOT }
				}
			}
			DEI = { save_event_target_as = can_offer_netherlands_to_exiles }
		}
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1048 option annex.1048.a"
		name = annex.1048.a
		trigger = {
			is_subject = no
			NOT = { is_in_faction_with = DEI }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_event_target = can_offer_netherlands_to_exiles
				if = {
					limit = { has_game_rule = { rule = HOL_forpol option = HOL_FORPOL_GER } }
					is_ally_with = GER
				}
				else_if = {
					limit = { has_game_rule = { rule = HOL_forpol option = HOL_FORPOL_ENT } }
					is_ally_with = ENT
				}
				else_if = {
					limit = { has_game_rule = { rule = HOL_forpol option = HOL_FORPOL_BEL } }
					original_tag = BEL
				}
			}
		}
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		var:tag_to_release = { HOL_puppet_setup = yes }
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1048 option annex.1048.b"
		name = annex.1048.b
		trigger = {
			is_subject = no
			has_socialist_government = no
			NOT = { is_in_faction_with = DEI }
			OR = {
				NOT = { country_exists = DEI }
				DEI = {
					has_capitulated = yes
					is_ai = yes
				}
			}
		}
		ai_chance = { base = 70 }
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		var:tag_to_release = {
			HOL_create_wilhelmina = yes
			HOL_puppet_setup = yes
		}
		hidden_effect = {
			if = {
				limit = { country_exists = DEI }
				DEI = { remove_puppet_and_leave_faction = yes }
				var:1020.controller = { #Batavia
					start_peace_conference = {
						tag = DEI
						score_factor = 1
						winner_scope = ALL
						loser_scope = LIMITED
					}
				}
			}
		}
	}

	option = { #offer to DEI
		log = "[GetLogInfo]: event annex.1048 option annex.1048.c"
		name = annex.1048.c
		trigger = {
			has_event_target = can_offer_netherlands_to_exiles
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					AND = {
						NOT = { is_ally_with = GER }
						has_game_rule = { rule = HOL_forpol option = HOL_FORPOL_GER }
					}
					AND = {
						NOT = { is_ally_with = ENT }
						has_game_rule = { rule = HOL_forpol option = HOL_FORPOL_ENT }
					}
					AND = {
						NOT = { original_tag = BEL }
						has_game_rule = { rule = HOL_forpol option = HOL_FORPOL_BEL }
					}
				}
			}
			modifier = {
				factor = 0 #don't get pulled into random wars
				event_target:can_offer_netherlands_to_exiles = { annexations_AI_dont_offer_if_target_involved_in_separate_major_war = yes }
			}
		}
		set_temp_variable = { tag_to_release = DEI }
		HOL = { save_to_offered_states = yes }
		var:tag_to_release = {
			set_country_flag = offered_netherlands_@ROOT
			offer_states_to_target = yes
		}
	}

	option = { #Restore the government in exile
		log = "[GetLogInfo]: event annex.1048 option annex.1048.d"
		name = annex.1048.d
		trigger = {
			is_subject = no
			is_in_faction_with = DEI
		}
		set_temp_variable = { tag_to_release = DEI }
		HOL = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1048 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		HOL = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1048 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Flanders
	id = annex.1050
	title = annexation_925
	desc = annexation_925_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_belgian_tags = yes
			if = {
				limit = {
					OR = {
						is_belgian_tag = yes
						35 = { is_claim_or_core_of_ROOT = yes } #North Brabant
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					var:34.owner = { #Hainaut
						is_belgian_tag = yes
						ROOT_can_grant_land = yes
					}
				}
				var:34.owner = { save_event_target_as = wallonia }
			}
			if = {
				limit = {
					35 = { #North Brabant
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:35.owner = { save_event_target_as = netherlands }
			}
			741 = { retain_state = yes } #Verviers
			978 = { retain_state = yes } #Limburg
			979 = { retain_state = yes } #Westerscheldt
		}
	}

	option = { #puppet republican Belgium
		log = "[GetLogInfo]: event annex.1050 option annex.1050.a"
		name = annex.1050.a
		trigger = {
			OR = {
				34 = { is_valid_annexation_state = yes } #Hainaut
				948 = { is_valid_annexation_state = yes } #Liège
			}
			is_subject = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = wallonia
				OR = {
					is_major = no
					is_ally_with = event_target:wallonia
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:wallonia = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				has_event_target = netherlands
				OR = {
					is_major = no
					is_ally_with = event_target:netherlands
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:netherlands = { is_french_tag = no }
				}
			}
		}
		set_temp_variable = { tag_to_release = BEL }
		release_targeted_tag = yes
		var:tag_to_release = { BEL_puppet_setup = yes }
	}

	option = { #puppet monarchist Belgium
		log = "[GetLogInfo]: event annex.1050 option annex.1050.b"
		name = annex.1050.b
		trigger = {
			OR = {
				34 = { is_valid_annexation_state = yes } #Hainaut
				948 = { is_valid_annexation_state = yes } #Liège
			}
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_monarchy = no
			}
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = wallonia
				OR = {
					is_major = no
					is_ally_with = event_target:wallonia
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:wallonia = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				has_event_target = netherlands
				OR = {
					is_major = no
					is_ally_with = event_target:netherlands
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:netherlands = { is_french_tag = no }
				}
			}
		}
		set_temp_variable = { tag_to_release = BEL }
		release_targeted_tag = yes
		var:tag_to_release = {
			BEL_puppet_setup = yes
			if = {
				limit = { ROOT = { tag = GER } }
				BEL_create_adelbert = yes
				hidden_effect = {
					set_party_name = {
						ideology = authoritarian_democrat
						name = BEL_authoritarian_democrat_party
						long_name = BEL_authoritarian_democrat_party_long
					}
					add_ideas = BEL_anti_german_sentiment5
					load_focus_tree = BEL_focus
				}
			}
			else = {
				BEL_create_albert = yes
			}
		}
	}

	option = { #puppet republican Flanders
		log = "[GetLogInfo]: event annex.1050 option annex.1050.c"
		name = annex.1050.c
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					34 = { is_valid_annexation_state = yes } #Hainaut
					948 = { is_valid_annexation_state = yes } #Liège
				}
				annexations_can_annex = no
			}
			modifier = {
				factor = 0
				original_tag = GER
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				has_event_target = wallonia
				OR = {
					is_major = no
					is_ally_with = event_target:wallonia
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:wallonia = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				has_event_target = netherlands
				OR = {
					is_major = no
					is_ally_with = event_target:netherlands
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:netherlands = { is_french_tag = no }
				}
			}
		}
		set_temp_variable = { tag_to_release = FLA }
		6 = { remove_claim_and_add_core_of_target = yes } #Flanders
		29 = { remove_claim_and_add_core_of_target = yes } #Dunkirk
		925 = { remove_claim_and_add_core_of_target = yes } #Brabant
		release_targeted_tag = yes
		var:tag_to_release = { FLA_puppet_setup = yes }
	}

	option = { #puppet Duchy of Flanders
		log = "[GetLogInfo]: event annex.1050 option annex.1050.d"
		name = annex.1050.d
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#release Belgium instead
				34 = { is_valid_annexation_state = yes } #Hainaut
				annexations_can_annex = no
			}
			modifier = {
				factor = 0
				OR = {
					NOT = { original_tag = GER }
					is_monarchy = no
				}
			}
			modifier = {
				factor = 0
				has_event_target = wallonia
				OR = {
					is_major = no
					is_ally_with = event_target:wallonia
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:wallonia = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				has_event_target = netherlands
				OR = {
					is_major = no
					is_ally_with = event_target:netherlands
				}
				OR = {
					is_germany_or_splinter_tag = no
					event_target:netherlands = { is_french_tag = no }
				}
			}
		}
		set_temp_variable = { tag_to_release = FLA }
		6 = { remove_claim_and_add_core_of_target = yes } #Flanders
		29 = { remove_claim_and_add_core_of_target = yes } #Dunkirk
		925 = { remove_claim_and_add_core_of_target = yes } #Brabant
		release_targeted_tag = yes
		var:tag_to_release = {
			FLA_puppet_setup = yes
			FLA_create_karel = yes
		}
	}

	option = { #Give to Wallonia
		log = "[GetLogInfo]: event annex.1050 option annex.1050.e"
		name = annex.1050.e
		trigger = {
			has_event_target = wallonia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:wallonia = { is_french_tag = yes }
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:wallonia }
				is_ally_with = event_target:netherlands
				OR = {
					is_germany_or_splinter_tag = no
					event_target:netherlands = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:wallonia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:wallonia }
		6 = { transfer_if_owned = yes } #Flanders
		925 = { transfer_if_owned = yes } #Brabant
	}

	option = { #Give to the Netherlands
		log = "[GetLogInfo]: event annex.1050 option annex.europe.give_to_netherlands"
		name = annex.europe.give_to_netherlands
		trigger = {
			has_event_target = netherlands
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:netherlands = { is_french_tag = yes }
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:netherlands }
				is_ally_with = event_target:wallonia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:wallonia = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:netherlands = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:netherlands }
		6 = { transfer_if_owned = yes } #Flanders
		925 = { transfer_if_owned = yes } #Brabant
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1050 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		6 = { transfer_if_owned = yes } #Flanders
		925 = { transfer_if_owned = yes } #Brabant
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1050 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = { base = 30 }
		if = {
			limit = { is_belgian_tag = yes }
			set_cosmetic_tag = BEL
			6 = { remove_claim_and_add_core_of_ROOT = yes } #Flanders
			925 = { remove_claim_and_add_core_of_ROOT = yes } #Brabant
			FLA_move_unit_leaders = yes
		}
		else = {
			6 = { add_claim_of_ROOT = yes } #Flanders
			925 = { add_claim_of_ROOT = yes } #Brabant
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1050 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Wallonia
	id = annex.1051
	title = annexation_34
	desc = annexation_34_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_belgian_tags = yes
			if = {
				limit = {
					OR = {
						is_belgian_tag = yes
						24 = { is_claim_or_core_of_ROOT = yes } #Picardy
					}
				}
				save_event_target_as = can_annex
				if = {
					limit = {
						is_belgian_tag = no
						has_any_authoritarian_government = no
					}
					save_event_target_as = AI_dont_annex
				}
			}
			if = {
				limit = {
					var:925.owner = { #Brabant
						is_belgian_tag = yes
						NOT = { is_subject_of = HOL }
						ROOT_can_grant_land = yes
					}
				}
				var:925.owner = { save_event_target_as = flanders }
			}
			if = {
				limit = {
					24 = { #Picardy
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:24.owner = { save_event_target_as = france }
			}
			741 = { retain_state = yes } #Verviers
			978 = { retain_state = yes } #Limburg
			979 = { retain_state = yes } #Westerscheldt
		}
	}

	option = { #puppet republican Belgium
		log = "[GetLogInfo]: event annex.1051 option annex.1051.a"
		name = annex.1051.a
		trigger = {
			OR = {
				6 = { is_valid_annexation_state = yes } #Flanders
				925 = { is_valid_annexation_state = yes } #Brabant
			}
			is_subject = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					is_belgian_tag = yes
					has_any_authoritarian_government = yes
				}
			}
			modifier = {
				factor = 0
				has_event_target = flanders
				OR = {
					is_major = no
					is_ally_with = event_target:flanders
					event_target:flanders = { has_socialist_government = yes }
				}
			}
			modifier = {
				factor = 0
				has_event_target = france
				OR = {
					is_major = no
					is_ally_with = event_target:france
				}
			}
		}
		set_temp_variable = { tag_to_release = BEL }
		release_targeted_tag = yes
		var:tag_to_release = { BEL_puppet_setup = yes }
	}

	option = { #puppet monarchist Belgium
		log = "[GetLogInfo]: event annex.1051 option annex.1051.b"
		name = annex.1051.b
		trigger = {
			OR = {
				6 = { is_valid_annexation_state = yes } #Flanders
				925 = { is_valid_annexation_state = yes } #Brabant
			}
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_monarchy = no
			}
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					is_belgian_tag = yes
					has_any_authoritarian_government = yes
				}
			}
			modifier = {
				factor = 0
				has_event_target = flanders
				OR = {
					is_major = no
					is_ally_with = event_target:flanders
					event_target:flanders = { has_socialist_government = yes }
				}
			}
			modifier = {
				factor = 0
				has_event_target = france
				OR = {
					is_major = no
					is_ally_with = event_target:france
				}
			}
		}
		set_temp_variable = { tag_to_release = BEL }
		release_targeted_tag = yes
		var:tag_to_release = {
			BEL_puppet_setup = yes
			if = {
				limit = { ROOT = { tag = GER } }
				BEL_create_adelbert = yes
				hidden_effect = {
					set_party_name = {
						ideology = authoritarian_democrat
						name = BEL_authoritarian_democrat_party
						long_name = BEL_authoritarian_democrat_party_long
					}
					add_ideas = BEL_anti_german_sentiment5
					load_focus_tree = BEL_focus
				}
			}
			else = {
				BEL_create_albert = yes
			}
		}
	}

	option = { #puppet Wallonia
		log = "[GetLogInfo]: event annex.1051 option annex.1051.c"
		name = annex.1051.c
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = WAL }
		34 = { remove_claim_and_add_core_of_target = yes } #Hainaut
		741 = { remove_claim_and_add_core_of_target = yes } #Verviers
		948 = { remove_claim_and_add_core_of_target = yes } #Liège
		release_targeted_tag = yes
		var:tag_to_release = { WAL_puppet_setup = yes }
	}

	option = { #Give to Flanders
		log = "[GetLogInfo]: event annex.1051 option annex.1051.d"
		name = annex.1051.d
		trigger = {
			has_event_target = flanders
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:flanders = { is_french_tag = yes }
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:flanders }
				is_ally_with = event_target:france
				OR = {
					is_germany_or_splinter_tag = no
					event_target:france = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:flanders = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:flanders }
		34 = { transfer_if_owned = yes } #Hainaut
		948 = { transfer_if_owned = yes } #Liège
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1051 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:france = { is_french_tag = yes }
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:flanders
				OR = {
					is_germany_or_splinter_tag = no
					event_target:flanders = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		34 = { transfer_if_owned = yes } #Hainaut
		948 = { transfer_if_owned = yes } #Liège
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1051 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		34 = { transfer_if_owned = yes } #Hainaut
		948 = { transfer_if_owned = yes } #Liège
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1051 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = { base = 30 }
		if = {
			limit = { is_belgian_tag = yes }
			set_cosmetic_tag = BEL
			34 = { remove_claim_and_add_core_of_ROOT = yes } #Hainaut
			948 = { remove_claim_and_add_core_of_ROOT = yes } #Liège
			WAL_move_unit_leaders = yes
		}
		else = {
			34 = { add_claim_of_ROOT = yes } #Hainaut
			948 = { add_claim_of_ROOT = yes } #Liège
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1051 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

#####################################
##  N O R T H E R N   E U R O P E  ##
#####################################

country_event = { #Fate of Denmark
	id = annex.1052
	title = annexation_37
	desc = annexation_37_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_denmark = no }
					remove_core_of = DEN
				}
				else = {
					add_core_of = DEN
				}
				remove_claim_by = DEN
			}
			DEN = {
				drop_cosmetic_tag = yes
				DEN_remove_monarchy = yes
			}
			SCA = {
				every_character = {
					limit = { has_character_flag = DEN_leader }
					set_nationality = DEN
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			101 = { retain_state = yes } #Greenland
			782 = { retain_state = yes } #Northern Schleswig
			926 = { retain_state = yes } #Humboldt Glacier
			if = {
				limit = { original_tag = SCA }
				save_event_target_as = can_annex
			}
		}
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1052 option annex.1052.a"
		name = annex.1052.a
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = DEN }
		release_targeted_tag = yes
		var:tag_to_release = {
			clr_country_flag = den_statsraad
			DEN_create_christian = yes
			DEN_puppet_setup = yes
		}
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1052 option annex.1052.b"
		name = annex.1052.b
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = DEN }
		release_targeted_tag = yes
		var:tag_to_release = {
			if = {
				limit = { has_socialist_government = yes }
				set_country_flag = den_statsraad
			}
			else = {
				clr_country_flag = den_statsraad
			}
			DEN_puppet_setup = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1052 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		DEN = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1052 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		DEN = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1052 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Iceland
	id = annex.1053
	title = annexation_100
	desc = annexation_100_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			SCA = {
				every_character = {
					limit = { has_character_flag = ICE_leader }
					set_nationality = ICE
				}
			}
			ICE = {
				set_country_flag = ICE_was_annexed
				remove_ideas = {
					ICE_Personal_Union
					ICE_Independent_Althing
					ICE_danish_bailout
					ICE_canadian_bailout
				}
			}
			if = {
				limit = { original_tag = SCA }
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					37 = { #Zealand
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							ROOT_can_grant_land = yes
							is_subject = no
						}
					}
				}
				var:37.owner = { save_event_target_as = denmark }
			}
			if = {
				limit = {
					110 = { #Ostlandet
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:denmark }
							ROOT_can_grant_land = yes
							is_subject = no
						}
					}
				}
				var:110.owner = { save_event_target_as = norway }
			}
		}
	}

	option = { #liberate ICE
		log = "[GetLogInfo]: event annex.1053 option annex.1053.a"
		name = annex.1053.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = no
				37 = { is_claim_or_core_of_ROOT = no } #Zealand
				110 = { is_claim_or_core_of_ROOT = no } #Ostlandet
				OR = {
					has_event_target = denmark
					has_event_target = norway
				}
			}
		}
		set_temp_variable = { tag_to_release = ICE }
		release_targeted_tag = yes
		if = {
			limit = {
				tag = ENG
				has_socialist_government = yes
				CAN = {
					is_faction_leader = yes
					surrender_progress < 0.1
				}
			}
			var:tag_to_release = { ICE_setup_antisocialist_resistance_decisions = yes }
		}
	}

	option = { #Give to Denmark
		log = "[GetLogInfo]: event annex.1053 option annex.europe.give_to_denmark"
		name = annex.europe.give_to_denmark
		trigger = {
			has_event_target = denmark
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:denmark }
				37 = { is_claim_or_core_of_ROOT = no } #Zealand
				110 = { is_claim_or_core_of_ROOT = no } #Ostlandet
				OR = {
					is_major = yes
					is_ally_with = event_target:norway
				}
			}
			modifier = {
				factor = 0.1
				event_target:denmark = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:denmark }
		ICE = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to Norway
		log = "[GetLogInfo]: event annex.1053 option annex.europe.give_to_norway"
		name = annex.europe.give_to_norway
		trigger = {
			has_event_target = norway
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:norway }
				37 = { is_claim_or_core_of_ROOT = no } #Zealand
				110 = { is_claim_or_core_of_ROOT = no } #Ostlandet
				OR = {
					is_major = yes
					is_ally_with = event_target:denmark
				}
			}
			modifier = {
				factor = 0.1
				event_target:norway = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:norway }
		ICE = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1053 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		ICE = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1053 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ICE = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1053 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Greenland
	id = annex.1054
	title = annexation_101
	desc = annexation_101_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					37 = { is_claim_or_core_of_ROOT = yes } #Zealand
					110 = { is_claim_or_core_of_ROOT = yes } #Ostlandet
					tag = CAN
					is_american_tag = yes
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = {
					OR = {
						tag = CAN
						is_american_tag = yes
					}
					OR = {
						is_ally_with = event_target:denmark
						is_ally_with = event_target:norway
					}
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				37 = { #Zealand
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:37.owner = { save_event_target_as = denmark }
		}
		if = {
			limit = {
				110 = { #Ostlandet
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:denmark }
					}
				}
			}
			var:110.owner = { save_event_target_as = norway }
		}
		if = {
			limit = { CAN = { ROOT_can_grant_land = yes } }
			CAN = { save_event_target_as = canada }
		}
		if = {
			limit = {
				var:932.owner = { #Massachussets
					is_american_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:932.owner = { save_event_target_as = united_states }
		}
		if = {
			limit = {
				var:361.owner = { #Maryland
					is_american_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:361.owner = { save_event_target_as = united_states }
		}
	}

	option = { #Give to Denmark
		log = "[GetLogInfo]: event annex.1054 option annex.europe.give_to_denmark"
		name = annex.europe.give_to_denmark
		trigger = {
			has_event_target = denmark
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					NOT = {
						tag = CAN
						is_american_tag = yes
					}
					NOT = {
						is_ally_with = event_target:denmark
						is_ally_with = event_target:norway
					}
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:denmark }
				is_ally_with = event_target:norway
			}
			modifier = {
				factor = 0.1
				event_target:denmark = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:denmark }
		101 = { transfer_state_and_notify = yes } #Greenland
		926 = { transfer_state_and_notify = yes } #Humboldt Glacier
	}

	option = { #Give to Norway
		log = "[GetLogInfo]: event annex.1054 option annex.europe.give_to_norway"
		name = annex.europe.give_to_norway
		trigger = {
			has_event_target = norway
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					NOT = {
						tag = CAN
						is_american_tag = yes
					}
					NOT = {
						is_ally_with = event_target:denmark
						is_ally_with = event_target:norway
					}
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:norway }
				is_ally_with = event_target:denmark
			}
			modifier = {
				factor = 0.1
				event_target:norway = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:norway }
		101 = { transfer_state_and_notify = yes } #Greenland
		926 = { transfer_state_and_notify = yes } #Humboldt Glacier
	}

	option = { #Give to Canada
		log = "[GetLogInfo]: event annex.1054 option annex.americas.give_to_canada"
		name = annex.americas.give_to_canada
		trigger = {
			has_event_target = canada
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:canada }
		101 = { transfer_state_and_notify = yes } #Greenland
		926 = { transfer_state_and_notify = yes } #Humboldt Glacier
	}

	option = { #Give to the US
		log = "[GetLogInfo]: event annex.1054 option annex.americas.give_to_united_states"
		name = annex.americas.give_to_united_states
		trigger = {
			has_event_target = united_states
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:united_states }
		101 = { transfer_state_and_notify = yes } #Greenland
		926 = { transfer_state_and_notify = yes } #Humboldt Glacier
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1054 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		101 = { transfer_state_and_notify = yes } #Greenland
		926 = { transfer_state_and_notify = yes } #Humboldt Glacier
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1054 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = CAN
					is_american_tag = yes
				}
				OR = {
					is_ally_with = event_target:denmark
					is_ally_with = event_target:norway
				}
			}
		}
		101 = { add_claim_of_ROOT = yes } #Greenland
		926 = { add_claim_of_ROOT = yes } #Humboldt Glacier
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1054 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Norway
	id = annex.1055
	title = annexation_110
	desc = annexation_110_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_norway = no }
					remove_core_of = NOR
				}
				else = {
					add_core_of = NOR
				}
				remove_claim_by = NOR
			}
			if = {
				limit = { tag = FIN }
				add_state_claim = 937 #Finnmark
			}
			SCA = {
				every_character = {
					limit = { has_character_flag = NOR_leader }
					set_nationality = NOR
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			NOR = {
				drop_cosmetic_tag = yes
				NOR_remove_monarchy = yes
				if = {
					limit = { has_completed_focus = NOR_NAT_hirden }
					if = {
						limit = { ROOT = { has_dictatorship_government = yes } }
						NOR_create_rikshirden_leaders = yes
					}
					else = {
						NOR_remove_rikshirden_leaders = yes
					}
				}
				remove_ideas = {
					NOR_progressive_agreement_idea
					NOR_mixed_industry_idea
					NOR_conservative_agreement_idea
					NOR_free_market_idea
					NOR_organisation_xu_idea
					NOR_neutrality_idea_1
					NOR_neutrality_idea_2
					NOR_neutrality_idea_3
					NOR_canadian_mission_idea_1
					NOR_canadian_mission_idea_2
					NOR_canadian_mission_idea_3
				}
				if = {
					limit = { ROOT = { has_dictatorship_government = no } }
					remove_ideas = {
						NOR_rikshird_army
						NOR_statspolitiet_idea
						NOR_ns_arbeidstjeneste_idea
					}
				}
				if = {
					limit = { ROOT = { has_socialist_government = no } }
					remove_ideas = {
						NOR_syndicalist_norway_idea_1
						NOR_syndicalist_norway_idea_2
						NOR_syndicalist_norway_idea_3
						NOR_syndicalist_norway_idea_4
						NOR_syndicalist_norway_idea_5
						NOR_syndicalist_norway_idea_6
						NOR_syndicalist_norway_idea_7
						NOR_syndicalist_norway_idea_8
						NOR_syndicalist_norway_idea_9
						NOR_syndicalist_norway_idea_10
						NOR_syndicalist_norway_idea_11
						NOR_syndicalist_norway_idea_12
						NOR_syndicalist_norway_idea_13
						NOR_syndicalist_norway_idea_14
						NOR_syndicalist_industry_idea
						NOR_secret_police_idea_1
						NOR_secret_police_idea_2
						NOR_defensive_army_idea
						NOR_totalist_economy
						NOR_radicalist_economy
						NOR_syndicalist_economy
						NOR_totalistsociety
						NOR_radicalistsociety
						NOR_syndicalistsociety
						NOR_totalistpeople
						NOR_radicalistpeople
						NOR_syndicalistpeople
						NOR_AoR
					}
				}
			}
			SWE = {
				if = {
					limit = { ROOT = { has_socialist_government = no } }
					remove_ideas = SWE_union_activity
				}
			}
			if = {
				limit = { original_tag = SCA }
				save_event_target_as = can_annex
			}
		}
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1055 option annex.1055.a"
		name = annex.1055.a
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				original_tag = SWE
				is_monarchy = yes
			}
		}
		set_temp_variable = { tag_to_release = NOR }
		release_targeted_tag = yes
		var:tag_to_release = { NOR_create_haakon = yes }
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1055 option annex.1055.b"
		name = annex.1055.b
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_monarchy = yes
			}
		}
		set_temp_variable = { tag_to_release = NOR }
		release_targeted_tag = yes
	}

	option = { #Form Sweden-Norway
		log = "[GetLogInfo]: event annex.1055 option annex.1055.c"
		name = annex.1055.c
		trigger = {
			original_tag = SWE
			is_monarchy = yes
			is_subject = no
		}
		set_cosmetic_tag = SWENOR
		add_timed_idea = {
			idea = SWE_norwegian_resistance_idea
			days = 720
		}
		NOR = {
			enable_country_integration_80_compliance = yes
			every_core_state = { add_claim_of_ROOT = yes }
			every_core_state = {
				limit = {
					is_controlled_by = ROOT
					has_resistance = yes
				}
				set_compliance = 0
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1055 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		NOR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1055 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		NOR = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1055 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Sweden
	id = annex.1056
	title = annexation_141
	desc = annexation_141_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_sweden = no }
					remove_core_of = SWE
				}
				else = {
					add_core_of = SWE
				}
				remove_claim_by = SWE
			}
			if = {
				limit = { tag = FIN }
				add_state_claim = 909 #Tornedalen
			}
			if = {
				limit = {
					tag = NOR
					OR = {
						has_government = totalist
						has_government = paternal_autocrat
						has_government = national_populist
					}
				}
				add_state_claim = 778
				add_state_claim = 908
			}
			SWE = {
				drop_cosmetic_tag = yes
				SWE_remove_monarchy = yes
				remove_ideas = {
					# Socialist ideas
					SWE_union_activity
					SWE_totalistmilitary
					SWE_radicalistmilitary
					SWE_syndicalistmilitary
					SWE_totalisteconomy
					SWE_radicalisteconomy
					SWE_syndicalisteconomy
					SWE_totalistsociety
					SWE_radicalistsociety
					SWE_syndicalistsociety
					SWE_totalistpeople
					SWE_radicalistpeople
					SWE_syndicalistpeople
					SWE_collectivisation
					SWE_idea_true_folkhemmet
					SWE_idea_reactionary_resistance
				}
				if = {
					limit = { ROOT = { has_socialist_government = yes } }
					remove_ideas = {
						SWE_military_work_battalions_idea
						SWE_stapol_idea
						SWE_idea_divine_disapproval
						SWE_idea_divine_approval
						SWE_corporatized_statare_idea
						SWE_idea_aggressive_foreign_policy
						SWE_idea_front_riksledare
						SWE_idea_riksledare_dead
					}
				}
			}
			SCA = {
				every_character = {
					limit = { has_character_flag = SWE_leader }
					set_nationality = SWE
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			145 = { retain_state = yes } #Aland
		}
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1056 option annex.1056.a"
		name = annex.1056.a
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = SWE }
		release_targeted_tag = yes
		var:tag_to_release = {
			SWE_add_reactionary_generals = yes
			SWE_create_gustaf = yes
		}
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1056 option annex.1056.b"
		name = annex.1056.b
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_monarchy = yes
			}
		}
		set_temp_variable = { tag_to_release = SWE }
		release_targeted_tag = yes
		var:tag_to_release = {
			if = {
				limit = { has_socialist_government = yes }
				hidden_effect = { SWE_remove_reactionary_generals = yes }
			}
			else = {
				hidden_effect = { SWE_add_reactionary_generals = yes }
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1056 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		SWE = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1056 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		SWE = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1056 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Aland Islands
	id = annex.1057
	title = annexation_145
	desc = annexation_145_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					141 = { is_claim_or_core_of_ROOT = yes } #Svealand
					863 = { is_claim_or_core_of_ROOT = yes } #Finland Proper
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				141 = { #Svealand
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:141.owner = { save_event_target_as = svealand }
		}
		if = {
			limit = {
				863 = { #Finland Proper
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:svealand }
					}
				}
			}
			var:863.owner = { save_event_target_as = southwest_finland }
		}
	}

	option = { #Give to owner of Svealand
		log = "[GetLogInfo]: event annex.1057 option annex.1057.a"
		name = annex.1057.a
		trigger = {
			has_event_target = svealand
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:svealand }
				is_ally_with = event_target:southwest_finland
				OR = {
					is_germany_or_splinter_tag = no
					event_target:southwest_finland = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:svealand = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:svealand }
		145 = { transfer_state_and_notify = yes } #Åland
	}

	option = { #Give to owner of Finland Proper
		log = "[GetLogInfo]: event annex.1057 option annex.1057.b"
		name = annex.1057.b
		trigger = {
			has_event_target = southwest_finland
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:southwest_finland }
				is_ally_with = event_target:svealand
				OR = {
					is_germany_or_splinter_tag = no
					event_target:svealand = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:southwest_finland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:southwest_finland }
		145 = { transfer_state_and_notify = yes } #Åland
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1057 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		145 = { transfer_state_and_notify = yes } #Åland
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1057 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		145 = { add_claim_of_ROOT = yes } #Åland
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1057 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Finland
	id = annex.1058
	title = annexation_840
	desc = annexation_840_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_finland = no }
					remove_core_of = FIN
				}
				else = {
					add_core_of = FIN
				}
				remove_claim_by = FIN
			}
			FIN = {
				drop_cosmetic_tag = yes
				remove_ideas = generic_neutral_foreign_policy
				promote_character = FIN_juho_kusti_paasikivi
				promote_character = FIN_vilho_annala
				set_party_name = {
					ideology = national_populist
					name = FIN_party_patriotic_peoples_movement
					long_name = FIN_party_patriotic_peoples_movement_long
				}
			}
			SCA = {
				every_character = {
					limit = { has_character_flag = FIN_leader }
					set_nationality = FIN
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			145 = { retain_state = yes } #Aland
			146 = { retain_state = yes } #Karelia
		}
		if = {
			limit = { original_tag = SWE }
			save_event_target_as = can_annex
			if = {
				limit = { NOT = { has_government = national_populist } }
				save_event_target_as = AI_dont_annex
			}
		}
		else_if = {
			limit = {
				RUS_can_integrate = yes
				OR = {
					is_monarchy = yes
					tag = FER
				}
				NOT = {
					has_government = social_liberal
					has_government = market_liberal
				}
			}
			save_event_target_as = can_annex
			save_event_target_as = AI_dont_annex
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1058 option annex.1058.a"
		name = annex.1058.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				original_tag = GER
				has_socialist_government = no
			}
		}
		set_temp_variable = { tag_to_release = FIN }
		release_targeted_tag = yes
		var:tag_to_release = { FIN_puppet_setup = yes }
	}

	option = { #liberate as kingdom
		log = "[GetLogInfo]: event annex.1058 option annex.1058.b"
		name = annex.1058.b
		trigger = {
			is_subject = no
			original_tag = GER
			has_socialist_government = no
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = FIN }
		release_targeted_tag = yes
		var:tag_to_release = {
			set_cosmetic_tag = FIN_monarchy
			if = {
				limit = { date < 1940.5.28 }
				FIN_friedrich_karl_von_hessen_kassel = {
					hidden_effect = { set_nationality = PREV }
					set_character_name = FIN_friedrich_karl_von_hessen_kassel_regnal
					promote_character = authoritarian_democrat_subtype
				}
			}
			else = {
				hidden_effect = {
					FIN_friedrich_karl_von_hessen_kassel = { kill_character = yes }
				}
				FIN_wolfgang_von_hessen_kassel = {
					hidden_effect = { set_nationality = PREV }
					set_character_name = FIN_wolfgang_von_hessen_kassel_regnal
					promote_character = authoritarian_democrat_subtype
				}
			}
			set_politics = {
				ruling_party = authoritarian_democrat
				elections_allowed = no
			}
			set_political_party = {
				ideology = authoritarian_democrat
				popularity = 60
			}
			FIN_puppet_setup = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1058 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		FIN = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1058 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		if = {
			limit = { is_russian_tag = yes }
			add_stability = -0.05
		}
		FIN = { add_claim_of_ROOT_on_valid_cores = yes }
		hidden_effect = {
			if = {
				limit = {
					tag = RUS #player only option
					NOT = {
						has_completed_focus = RUS_towards_unitary_state
						has_country_flag = RUS_unitary_state
					}
				}
				every_owned_state = {
					limit = {
						is_finland = yes
						NOT = { has_state_flag = karelian_state }
					}
					set_resistance = 100
					set_compliance = 0
					if = {
						limit = {
							ROOT = {
							}
						}
						set_state_flag = finnish_state
						add_dynamic_modifier = { modifier = RUS_ethnic_autonomy }
					}
				}
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1058 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Karelia
	id = annex.1059
	title = annexation_146
	desc = annexation_146_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					214 = { is_claim_or_core_of_ROOT = yes } #Archangelsk
					864 = { is_claim_or_core_of_ROOT = yes } #Savo
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				214 = { #Archangelsk
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:214.owner = { save_event_target_as = archangelsk }
		}
		if = {
			limit = {
				864 = { #Savo
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:archangelsk }
					}
				}
			}
			var:864.owner = { save_event_target_as = savo }
		}
	}

	option = { #Give to owner of Archangelsk
		log = "[GetLogInfo]: event annex.1059 option annex.1059.a"
		name = annex.1059.a
		trigger = {
			has_event_target = archangelsk
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:archangelsk = { is_russian_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:archangelsk }
				is_ally_with = event_target:savo
				OR = {
					is_germany_or_splinter_tag = no
					event_target:savo = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:archangelsk = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:archangelsk }
		146 = { transfer_if_owned = yes } #Karelia
		213 = { transfer_if_owned = yes } #Murmansk
		215 = { transfer_if_owned = yes } #White Karelia
		216 = { transfer_if_owned = yes } #Petrozavodsk
		722 = { transfer_if_owned = yes } #Petsamo
	}

	option = { #Give to owner of Savo
		log = "[GetLogInfo]: event annex.1059 option annex.1059.b"
		name = annex.1059.b
		trigger = {
			has_event_target = savo
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:savo = { is_russian_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:savo }
				is_ally_with = event_target:archangelsk
				OR = {
					is_germany_or_splinter_tag = no
					event_target:archangelsk = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:savo = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:savo }
		146 = { transfer_if_owned = yes } #Karelia
		213 = { transfer_if_owned = yes } #Murmansk
		215 = { transfer_if_owned = yes } #White Karelia
		216 = { transfer_if_owned = yes } #Petrozavodsk
		722 = { transfer_if_owned = yes } #Petsamo
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1059 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		146 = { transfer_if_owned = yes } #Karelia
		213 = { transfer_if_owned = yes } #Murmansk
		215 = { transfer_if_owned = yes } #White Karelia
		216 = { transfer_if_owned = yes } #Petrozavodsk
		722 = { transfer_if_owned = yes } #Petsamo
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1059 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		146 = { add_claim_of_ROOT = yes } #Karelia
		213 = { add_claim_of_ROOT = yes } #Murmansk
		215 = { add_claim_of_ROOT = yes } #White Karelia
		216 = { add_claim_of_ROOT = yes } #Petrozavodsk
		722 = { add_claim_of_ROOT = yes } #Petsamo
		if = {
			limit = {
				215 = { has_dynamic_modifier = { modifier = RUS_ethnic_autonomy } }
			}
			146 = {
				add_dynamic_modifier = { modifier = RUS_ethnic_autonomy }
				increase_state_category_by_one_level = yes
				set_state_flag = karelian_state
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1059 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

#####################################
##   E A S T E R N   E U R O P E   ##
#####################################

country_event = { #Fate of Ukraine
	id = annex.1060
	title = annexation_202
	desc = annexation_202_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = { is_ukraine = no }
				remove_core_of = UKR
				remove_claim_by = UKR
			}
			UKR = {
				UKR_clear_hetmanist_ideas = yes
				UKR_clear_republic_ideas = yes
				UKR_clear_revbloc_ideas = yes
				UKR_clear_borotbyst_ideas = yes
				UKR_uskhd_end_tree = yes
				UKR_update_military = yes
				if = {
					limit = { has_completed_focus = UKR_bsd_mil1 }
					uncomplete_national_focus = {
						focus = UKR_bsd_mil1
						uncomplete_children = yes
					}
				}
				if = {
					limit = { has_completed_focus = UKR_destiny_of_ukraine }
					uncomplete_national_focus = {
						focus = UKR_destiny_of_ukraine
						uncomplete_children = yes
					}
				}
				if = {
					limit = { has_completed_focus = UKR_fighters_til_the_end }
					uncomplete_national_focus = {
						focus = UKR_fighters_til_the_end
						uncomplete_children = yes
					}
				}
			}
			137 = {
				remove_dynamic_modifier = { modifier = UKR_crimean_autonomy }
				remove_dynamic_modifier = { modifier = UKR_crimean_autonomy_2 }
			}
			80 = { retain_state = yes } #Cernauti
			89 = { retain_state = yes } #Stanislawow
			91 = { retain_state = yes } #Lwow
			93 = { retain_state = yes } #Brest
			241 = { retain_state = yes } #Gomel
			997 = { retain_state = yes } #Polesia
			1088 = { retain_state = yes } #Chelm
			if = {
				limit = { var:global.russia = { ROOT_can_grant_land = yes } }
				var:global.russia = { save_event_target_as = russia }
			}
			if = {
				limit = { RUS_can_integrate = yes }
				save_event_target_as = can_annex
			}
		}
	}

	option = { #Puppet Republic
		log = "[GetLogInfo]: event annex.1060 option annex.1060.a"
		name = annex.1060.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 2
				has_democratic_government = yes
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				UKR_remove_hetmanate = yes
				UKR_puppet_setup = yes
				if = {
					limit = { has_government = national_populist }
					set_cosmetic_tag = UKR_national_republic
				}
				else = {
					set_cosmetic_tag = UKR_republic
				}
			}
		}
	}

	option = { #Puppet Hetmanate
		log = "[GetLogInfo]: event annex.1060 option annex.1060.b"
		name = annex.1060.b
		trigger = {
			is_subject = no
			has_socialist_government = no
			NOT = { has_government = national_populist }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 2
				has_authoritarian_government = yes
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		release_targeted_tag_nocosmetic = yes
		hidden_effect = {
			var:tag_to_release = {
				UKR_pavlo_skoropadskyi = { retire = yes }
				UKR_danylo_skoropadskyi = { retire = yes }
			}
			if = {
				limit = { tag = AUS }
				var:tag_to_release = {
					UKR_puppet_setup = yes
					set_portraits = {
						character = UKR_wilhelm_franz_von_habsburg
						civilian = { large = GFX_portrait_UKR_wilhelm_franz_von_habsburg_civilian_large_king }
					}
					set_politics = {
						ruling_party = social_liberal
						elections_allowed = yes
					}
					set_political_party = {
						ideology = social_liberal
						popularity = 60
					}
					UKR_wilhelm_franz_von_habsburg = { promote_character = social_liberal_subtype }
					add_country_leader_trait = UKR_hetman
				}
				country_event = ukraine.77
			}
			else = {
				var:tag_to_release = {
					UKR_puppet_setup = yes
					if = {
						limit = { NOT = { has_character = UKR_danylo_skoropadskyi } }
						UKR_danylo_skoropadskyi = {
							hidden_effect = { set_nationality = PREV }
							promote_character = social_democrat_subtype
							promote_character = social_liberal_subtype
							promote_character = market_liberal_subtype
							promote_character = social_conservative_subtype
							promote_character = authoritarian_democrat_subtype
							promote_character = paternal_autocrat_subtype
						}
					}
				}
			}
		}
	}

	option = { #for Ottomans: take Crimea
		log = "[GetLogInfo]: event annex.1060 option annex.1060.c"
		name = annex.1060.c
		trigger = {
			is_subject = no
			tag = OTT
			137 = { is_valid_annexation_state = yes } #Crimea
		}
		ai_chance = { base = 50 }
		add_state_claim = 137
		hidden_effect = {
			UKR = {
				UKR_remove_hetmanate = yes
				UKR_puppet_setup = yes
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		release_targeted_tag = yes
	}

	option = { #Give to Russia
		log = "[GetLogInfo]: event annex.1060 option annex.give_to_russia"
		name = annex.give_to_russia
		trigger = {
			has_event_target = russia
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_german_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:russia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:russia }
		UKR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1060 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		UKR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1060 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_state = {
			limit = {
				region = 130 #Ukraine
				NOT = {
					AND = {
						is_claim_or_core_of_owner = yes
						owner = { is_ally_with = ROOT }
					}
				}
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1060 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Brest
	id = annex.1061
	title = annexation_93
	desc = annexation_93_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					1088 = { is_claim_or_core_of_ROOT = yes } #Chelm
					792 = { is_claim_or_core_of_ROOT = yes } #Volhynia
					AND = {
						95 = { is_claim_or_core_of_ROOT = yes } #Pinsk
						owns_state = 997 #Polesia
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				1088 = { #Chelm
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:1088.owner = { save_event_target_as = chelm }
			if = {
				limit = {
					is_russian_tag = yes
					var:1088.owner = { is_ally_of_ROOT = yes }
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				792 = { #Volhynia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:chelm }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:792.owner = { save_event_target_as = volhynia }
		}
		if = {
			limit = {
				95 = { #Pinsk
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:chelm }
						NOT = { tag = event_target:volhynia }
						997 = { annexations_required_state_is_owned_by_either_side = yes } #Polesia
						ROOT_can_grant_land = yes
					}
				}
			}
			var:95.owner = { save_event_target_as = pinsk }
		}
	}

	option = { #Give to owner of Chelm
		log = "[GetLogInfo]: event annex.1061 option annex.europe.give_to_owner_of_chelm"
		name = annex.europe.give_to_owner_of_chelm
		trigger = {
			has_event_target = chelm
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:chelm }
				is_ally_with = event_target:volhynia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:volhynia = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:chelm }
				is_ally_with = event_target:pinsk
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pinsk = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:chelm = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:chelm }
		93 = { transfer_state_and_notify = yes } #Brest
	}

	option = { #give to owner of Volhynia
		log = "[GetLogInfo]: event annex.1061 option annex.europe.give_to_owner_of_volhynia"
		name = annex.europe.give_to_owner_of_volhynia
		trigger = {
			has_event_target = volhynia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:volhynia }
				is_ally_with = event_target:chelm
				OR = {
					is_germany_or_splinter_tag = no
					event_target:chelm = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:volhynia }
				is_ally_with = event_target:pinsk
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pinsk = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:volhynia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:volhynia }
		93 = { transfer_state_and_notify = yes } #Brest
	}

	option = { #give to owner of Pinsk
		log = "[GetLogInfo]: event annex.1061 option annex.europe.give_to_owner_of_pinsk"
		name = annex.europe.give_to_owner_of_pinsk
		trigger = {
			has_event_target = pinsk
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pinsk }
				is_ally_with = event_target:chelm
				OR = {
					is_germany_or_splinter_tag = no
					event_target:chelm = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pinsk }
				is_ally_with = event_target:volhynia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:volhynia = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:pinsk = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:pinsk }
		93 = { transfer_state_and_notify = yes } #Brest
		997 = { transfer_if_owned = yes } #Polesia
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1061 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		93 = { transfer_state_and_notify = yes } #Brest
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1061 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		if = {
			limit = { original_tag = UKR }
			93 = { remove_claim_and_add_core_of_ROOT = yes } #Brest
			997 = {
				if = {
					limit = { is_valid_annexation_state = yes } #Polesia
					remove_claim_and_add_core_of_ROOT = yes #Polesia
				}
			}
		}
		else = {
			93 = { add_claim_of_ROOT = yes } #Brest
			if = {
				limit = { 95 = { is_claim_or_core_of_ROOT = yes } } #Pinsk
				997 = { add_claim_of_ROOT = yes } #Polesia
			}
		}
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
				}
			}
			93 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1061 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Polesia
	id = annex.1062
	title = annexation_997
	desc = annexation_997_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					792 = { is_claim_or_core_of_ROOT = yes } #Volhynia
					95 = { is_claim_or_core_of_ROOT = yes } #Pinsk
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				792 = { #Volhynia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:792.owner = { save_event_target_as = volhynia }
		}
		if = {
			limit = {
				95 = { #Pinsk
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:volhynia }
					}
				}
			}
			var:95.owner = { save_event_target_as = pinsk }
		}
	}

	option = { #give to owner of Volhynia
		log = "[GetLogInfo]: event annex.1062 option annex.europe.give_to_owner_of_volhynia"
		name = annex.europe.give_to_owner_of_volhynia
		trigger = {
			has_event_target = volhynia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:volhynia }
				is_ally_with = event_target:pinsk
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pinsk = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:volhynia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:volhynia }
		997 = { transfer_state_and_notify = yes } #Polesia
	}

	option = { #give to owner of Pinsk
		log = "[GetLogInfo]: event annex.1062 option annex.europe.give_to_owner_of_pinsk"
		name = annex.europe.give_to_owner_of_pinsk
		trigger = {
			has_event_target = pinsk
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pinsk }
				is_ally_with = event_target:volhynia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:volhynia = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:pinsk = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:pinsk }
		997 = { transfer_state_and_notify = yes } #Polesia
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1062 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		997 = { transfer_state_and_notify = yes } #Polesia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1062 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		997 = { add_claim_of_ROOT = yes } #Polesia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1062 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Belarus
	id = annex.1063
	title = annexation_206
	desc = annexation_206_desc
	picture = GFX_report_event_generic_conference2

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = {
						OR = {
							state = 94 #Volkovysk
							state = 95 #Pinsk
							state = 194 #Mozyr
							state = 204 #Novogrudok
							state = 206 #Minsk
							state = 207 #Braslav
							state = 1087 #Mogilev
						}
					}
					add_core_of = BLR
				}
				else = {
					remove_core_of = BLR
				}
				remove_claim_by = BLR
			}
			BLR = {
				BLR_werner_kempf = { retire = yes }
				BLR_kanstancin_jezavitau = { set_nationality = PREV }
				set_party_name = {
					ideology = paternal_autocrat
					name = BLR_paternal_autocrat_party
					long_name = BLR_paternal_autocrat_party_long
				}
				BLR_teardown_buying_germany_equipment_decisions = yes
				if = {
					limit = {
						ROOT = { has_authoritarian_government = yes }
					}
					BLR_clear_bsdp_ideas = yes
				}
				if = {
					limit = {
						ROOT = {
							NOT = {
								has_government = authoritarian_democrat
								has_government = paternal_autocrat
							}
						}
					}
					BLR_clear_coup_ideas = yes
				}
				if = {
					limit = { ROOT = { NOT = { has_government = national_populist } } }
					BLR_clear_kryvia_ideas = yes
				}
			}
			94 = { retain_state = yes } #Volkovysk
			if = {
				limit = { var:global.russia = { ROOT_can_grant_land = yes } }
				var:global.russia = { save_event_target_as = russia }
			}
			if = {
				limit = { RUS_can_integrate = yes }
				save_event_target_as = can_annex
			}
		}
	}

	is_triggered_only = yes

	option = { #Liberate White Ruthenia
		log = "[GetLogInfo]: event annex.1063 option annex.1063.a"
		name = annex.1063.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				original_tag = BAT
				has_socialist_government = no
			}
			modifier = {
				factor = 0
				original_tag = GER
				has_authoritarian_government = yes
			}
		}
		set_temp_variable = { tag_to_release = BLR }
		release_targeted_tag = yes
	}

	option = { #Create the General-Gouvernement
		log = "[GetLogInfo]: event annex.1063 option annex.1063.b"
		name = annex.1063.b
		trigger = {
			is_subject = no
			OR = {
				original_tag = GER
				original_tag = BAT
			}
			has_socialist_government = no
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = BLR }
		release_targeted_tag = yes
		var:tag_to_release = {
			set_cosmetic_tag = BLR_gengov
			set_politics = {
				ruling_party = paternal_autocrat
				elections_allowed = no
				name = BLR_paternal_autocrat2_party
				long_name = BLR_paternal_autocrat2_party_long
			}
			BLR_werner_kempf = {
				set_nationality = PREV
				hidden_effect = { remove_all_country_leader_roles = yes }
				add_country_leader_role = {
					country_leader = {
						desc = BLR_werner_kempf_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}
			hidden_effect = { BLR_kanstancin_jezavitau = { retire = yes } }
		}
	}

	option = { #Give to Russia
		log = "[GetLogInfo]: event annex.1063 option annex.give_to_russia"
		name = annex.give_to_russia
		trigger = {
			has_event_target = russia
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:russia }
			}
			modifier = {
				factor = 0.1
				event_target:russia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:russia }
		242 = { set_transfer_target_state = yes } #Smolensk
		243 = { set_transfer_target_state = yes } #Krichev
		755 = { set_transfer_target_state = yes } #Vitebsk
		BLR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1063 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		BLR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1063 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		BLR = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1063 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Eastern Belarus
	id = annex.1064
	title = annexation_242
	desc = annexation_242_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						1087 = { is_claim_or_core_of_ROOT = yes } #Mohilev
						owns_any_state_of = {
							243 #Krichev
							755 #Vitebsk
						}
					}
					AND = {
						205 = { is_claim_or_core_of_ROOT = yes } #Kaluga
						owns_state = 242 #Smolensk
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				1087 = { #Mohilev
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						243 = { annexations_required_state_is_owned_by_either_side = yes } #Krichev
						755 = { annexations_required_state_is_owned_by_either_side = yes } #Vitebsk
					}
				}
			}
			var:1087.owner = { save_event_target_as = mohilev }
		}
		if = {
			limit = {
				205 = { #Kaluga
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:mohilev }
						242 = { annexations_required_state_is_owned_by_either_side = yes } #Smolensk
					}
				}
			}
			var:205.owner = { save_event_target_as = kaluga }
		}
	}

	option = { #Give to owner of Mohilev
		log = "[GetLogInfo]: event annex.1064 option annex.1064.a"
		name = annex.1064.a
		trigger = {
			has_event_target = mohilev
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:mohilev }
				is_ally_with = event_target:kaluga
				OR = {
					is_germany_or_splinter_tag = no
					event_target:kaluga = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:mohilev = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:mohilev }
		242 = { transfer_if_owned = yes } #Smolensk
		243 = { transfer_if_owned = yes } #Krichev
		755 = { transfer_if_owned = yes } #Vitebsk
	}

	option = { #Give to owner of Kaluga
		log = "[GetLogInfo]: event annex.1064 option annex.1064.b"
		name = annex.1064.b
		trigger = {
			has_event_target = kaluga
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:kaluga }
				is_ally_with = event_target:mohilev
				OR = {
					is_germany_or_splinter_tag = no
					event_target:mohilev = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:kaluga = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:kaluga }
		242 = { transfer_if_owned = yes } #Smolensk
		243 = { transfer_if_owned = yes } #Krichev
		755 = { transfer_if_owned = yes } #Vitebsk
	}

	option = { #Split between owners of Mohilev and Kaluga
		log = "[GetLogInfo]: event annex.1064 option annex.1064.c"
		name = annex.1064.c
		trigger = {
			has_event_target = mohilev
			has_event_target = kaluga
			OR = {
				243 = { is_valid_annexation_state = yes } #Krichev
				755 = { is_valid_annexation_state = yes } #Vitebsk
			}
			242 = { is_valid_annexation_state = yes } #Smolensk
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					AND = {
						NOT = { is_ally_with = event_target:mohilev }
						is_ally_with = event_target:kaluga
					}
					AND = {
						NOT = { is_ally_with = event_target:kaluga }
						is_ally_with = event_target:mohilev
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					AND = {
						event_target:mohilev = { is_subject = no }
						event_target:kaluga = { is_subject = yes }
					}
					AND = {
						event_target:mohilev = { is_subject = yes }
						event_target:kaluga = { is_subject = no }
					}
				}
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				OR = {
					event_target:mohilev = { is_russian_tag = yes }
					event_target:kaluga = { is_russian_tag = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:kaluga }
		242 = { transfer_if_owned = yes } #Smolensk
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:mohilev }
		243 = { transfer_if_owned = yes } #Krichev
		755 = { transfer_if_owned = yes } #Vitebsk
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1064 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		242 = { transfer_if_owned = yes } #Smolensk
		243 = { transfer_if_owned = yes } #Krichev
		755 = { transfer_if_owned = yes } #Vitebsk
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1064 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		242 = { add_claim_of_ROOT = yes } #Smolensk
		243 = { add_claim_of_ROOT = yes } #Krichev
		755 = { add_claim_of_ROOT = yes } #Vitebsk
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1064 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Russia
	id = annex.1065
	title = annexation_219
	desc = annexation_219_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = FER } }
				FER = { clear_cores_of_tag_if_possible = yes }
			}
			if = {
				limit = { NOT = { country_exists = RUS } }
				RUS = { clear_cores_of_tag_if_possible = yes }
			}
			for_each_scope_loop = {
				array = RUS.RUS_starting_states_array
				add_core_of = RSA
			}
			RSA = {
				drop_cosmetic_tag = yes
			}
			213 = { retain_state = yes } #Murmansk
			215 = { retain_state = yes } #White Karelia
			216 = { retain_state = yes } #Petrozavodsk
			218 = { retain_state = yes } #Rostov
			234 = { retain_state = yes } #Ekaterinodar
			242 = { retain_state = yes } #Smolensk
			243 = { retain_state = yes } #Krichev
			329 = { retain_state = yes } #Tuva
			537 = { retain_state = yes } #North Sakhalin
			577 = { retain_state = yes } #South Sakhalin
			722 = { retain_state = yes } #Petsamo
			755 = { retain_state = yes } #Vitebsk
			880 = { retain_state = yes } #Latgale
			1006 = { retain_state = yes } #Novorossiysk
			MNR = { every_core_state = { retain_state = yes } }
			every_owned_state = {
				limit = {
					OR = {
						is_alash = yes
						is_siberia = yes
						is_russian_far_east = yes
					}
				}
				retain_state = yes
			}
		}
	}

	option = { #Liberate core Russia
		log = "[GetLogInfo]: event annex.1065 option annex.1065.a"
		name = annex.1065.a
		trigger = {
			is_subject = no
		}
		set_temp_variable = { tag_to_release = RSA }
		release_targeted_tag = yes
		hidden_effect = {
			set_autonomy = {
				target = var:tag_to_release
				autonomy_state = autonomous_puppet
				end_wars = no
			}
			RUS_puppet_setup = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1065 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		RSA = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1065 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Dvinsk
	id = annex.1066
	title = annexation_880
	desc = annexation_880_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					12 = { is_claim_or_core_of_ROOT = yes } #Livonia
					190 = { is_claim_or_core_of_ROOT = yes } #Courland
					209 = { is_claim_or_core_of_ROOT = yes } #Pskov
					210 = { is_claim_or_core_of_ROOT = yes } #Velikiye Luki
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				12 = { #Livonia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:12.owner = { save_event_target_as = livonia }
		}
		if = {
			limit = {
				190 = { #Courland
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:livonia }
					}
				}
			}
			var:190.owner = { save_event_target_as = courland }
		}
		if = {
			limit = {
				209 = { #Pskov
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:livonia }
						NOT = { tag = event_target:courland }
					}
				}
			}
			var:209.owner = { save_event_target_as = pskov }
		}
		if = {
			limit = {
				210 = { #Velikiye Luki
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:livonia }
						NOT = { tag = event_target:courland }
						NOT = { tag = event_target:pskov }
					}
				}
			}
			var:210.owner = { save_event_target_as = velikiye_luki }
		}
	}

	option = { #Give to owner of Livonia
		log = "[GetLogInfo]: event annex.1066 option annex.1066.a"
		name = annex.1066.a
		trigger = {
			has_event_target = livonia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:livonia }
				is_ally_with = event_target:courland
				OR = {
					is_germany_or_splinter_tag = no
					event_target:courland = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:livonia }
				is_ally_with = event_target:pskov
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pskov = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:livonia }
				is_ally_with = event_target:velikiye_luki
				OR = {
					is_germany_or_splinter_tag = no
					event_target:velikiye_luki = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:livonia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:livonia }
		880 = { transfer_state_and_notify = yes } #Latgale
	}

	option = { #Give to owner of Courland
		log = "[GetLogInfo]: event annex.1066 option annex.1066.b"
		name = annex.1066.b
		trigger = {
			has_event_target = courland
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:courland }
				is_ally_with = event_target:livonia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:livonia = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:courland }
				is_ally_with = event_target:pskov
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pskov = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:courland }
				is_ally_with = event_target:velikiye_luki
				OR = {
					is_germany_or_splinter_tag = no
					event_target:velikiye_luki = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:courland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:courland }
		880 = { transfer_state_and_notify = yes } #Latgale
	}

	option = { #Give to owner of Pskov
		log = "[GetLogInfo]: event annex.1066 option annex.1066.c"
		name = annex.1066.c
		trigger = {
			has_event_target = pskov
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pskov }
				is_ally_with = event_target:livonia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:livonia = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pskov }
				is_ally_with = event_target:courland
				OR = {
					is_germany_or_splinter_tag = no
					event_target:courland = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pskov }
				is_ally_with = event_target:velikiye_luki
				OR = {
					is_germany_or_splinter_tag = no
					event_target:velikiye_luki = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:pskov = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:pskov }
		880 = { transfer_state_and_notify = yes } #Latgale
	}

	option = { #Give to owner of Velikiye Luki
		log = "[GetLogInfo]: event annex.1066 option annex.1066.d"
		name = annex.1066.d
		trigger = {
			has_event_target = velikiye_luki
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:velikiye_luki }
				is_ally_with = event_target:livonia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:livonia = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:velikiye_luki }
				is_ally_with = event_target:courland
				OR = {
					is_germany_or_splinter_tag = no
					event_target:courland = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:velikiye_luki }
				is_ally_with = event_target:pskov
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pskov = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:velikiye_luki = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:velikiye_luki }
		880 = { transfer_state_and_notify = yes } #Latgale
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1066 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		880 = { transfer_state_and_notify = yes } #Latgale
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1066 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		880 = { add_claim_of_ROOT = yes } #Latgale
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1066 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

#####################################
##   SOUTH EASTERN   E U R O P E   ##
#####################################

country_event = { #Fate of Albania
	id = annex.1068
	title = annexation_44
	desc = annexation_44_desc
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = {
						NOT = { state = 44 } #Toskeria
						NOT = { state = 765 } #Kosovo
						NOT = { state = 766 } #Northern Epirus
						NOT = { state = 1053 } #Ghegeria
					}
					remove_core_of = ALB
				}
				else = {
					add_core_of = ALB
				}
				remove_claim_by = ALB
			}
			765 = { retain_state = yes } #Kosovo
			766 = { retain_state = yes } #Northern Epirus
			ALB = { drop_cosmetic_tag = yes }
		}
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1068 option annex.1068.a"
		name = annex.1068.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = ALB }
		release_targeted_tag = yes
		ALB_puppet_setup = yes
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1068 option annex.1068.b"
		name = annex.1068.b
		trigger = {
			OR = {
				AND = {
					AUS_is_led_by_habsburgs = yes
					ALB = { ALB_wilhelm_zu_wied = { is_dead = no } }
				}
				AND = {
					original_tag = BUL
					is_monarchy = yes
					BUL_kyril_sakskoburggotski = {
						is_dead = no
						is_country_leader = no
					}
				}
			}
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = ALB }
		release_targeted_tag = yes
		ALB_puppet_setup = yes
		ALB_create_monarchy = yes
	}

	option = { #for Serbia: annex Ghegeria, liberate the rest
		log = "[GetLogInfo]: event annex.1068 option annex.1068.c"
		name = annex.1068.c
		trigger = {
			original_tag = SER
			1053 = { is_valid_annexation_state = yes } #Ghegeria
			is_subject = no
		}
		1053 = { add_claim_of_ROOT = yes } #Ghegeria
		set_temp_variable = { tag_to_release = ALB }
		release_targeted_tag = yes
		ALB_puppet_setup = yes
	}

	option = { #for Serbia: annex Ghegeria, give the rest to overlord
		log = "[GetLogInfo]: event annex.1068 option annex.1068.d"
		name = annex.1068.d
		trigger = {
			original_tag = SER
			1053 = { is_valid_annexation_state = yes } #Ghegeria
			is_subject = yes
		}
		1053 = { add_claim_of_ROOT = yes } #Ghegeria

		set_temp_variable = { tag_to_release = overlord }
		ALB = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1068 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		ALB = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1068 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Montenegro
	id = annex.1069
	title = annexation_105
	desc = annexation_105_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = { is_montenegro = no }
				remove_core_of = MNT
				remove_claim_by = MNT
			}
			MNT = {
				drop_cosmetic_tag = yes
				SER_disable_yugoslavia_integration = yes
				if = {
					limit = { has_character = MNT_mihailo_petrovic_njegos }
					MNT_mihailo_petrovic_njegos = {
						remove_all_country_leader_roles = yes
						retire = yes
					}
				}
				if = {
					limit = { NOT = { has_character = MNT_blazo_jovanovic } }
					MNT_blazo_jovanovic = {
						set_nationality = MNT
						promote_character = totalist_subtype
						promote_character = syndicalist_subtype
						promote_character = radical_socialist_subtype
						promote_character = social_democrat_subtype
					}
				}
			}
			841 = { retain_state = yes } #Kotor
			if = {
				limit = {
					OR = {
						108 = { is_claim_or_core_of_ROOT = yes } #Morava
						AND = {
							104 = { is_claim_or_core_of_ROOT = yes } #Bosnia
							109 = { is_claim_or_core_of_ROOT = yes } #Central Croatia
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					108 = { #Morava
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:108.owner = { save_event_target_as = serbia }
			}
			if = {
				limit = {
					104 = { #Bosnia
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:serbia }
							109 = { is_claim_or_core_of_PREV = yes } #Central Croatia
							ROOT_can_grant_land = yes
						}
					}
				}
				var:104.owner = { save_event_target_as = croatia }
			}
		}
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1069 option annex.1069.a"
		name = annex.1069.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				has_event_target = serbia
				OR = {
					is_major = no
					is_ally_with = event_target:serbia
					event_target:serbia = { has_socialist_government = yes }
				}
			}
			modifier = {
				factor = 0
				has_event_target = croatia
				OR = {
					is_major = no
					is_ally_with = event_target:croatia
					event_target:croatia = { has_socialist_government = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = MNT }
		105 = { remove_claim_and_add_core_of_target = yes } #Montenegro
		release_targeted_tag = yes

		hidden_effect = { # swap out Markovic and Miletic for Grulovic and Rankovic, respectively
			SER = {
				if = {
					limit = { has_character = SER_vukasin_markovic }
					SER_vukasin_markovic = { set_nationality = MNT }
					MNT = {
						promote_character = {
							character = SER_vukasin_markovic
							ideology = totalist_subtype
						}
					}
				}
				if = {
					limit = { has_character = MNT_petko_miletic }
					MNT_petko_miletic = { set_nationality = MNT }
					MNT = {
						promote_character = {
							character = MNT_petko_miletic
							ideology = syndicalist_subtype
						}
					}
				}
				promote_character = {
					character = SER_nikola_grulovic
					ideology = totalist_subtype
				}
				SER_aleksandar_rankovic = {
					add_country_leader_role = {
						country_leader = {
							desc = SER_aleksandar_rankovic_advisor_desc
							ideology = syndicalist_subtype
						}
						promote_leader = yes
					}
				}
			}
		}
	}

	option = { #liberate as kingdom
		log = "[GetLogInfo]: event annex.1069 option annex.1069.b"
		name = annex.1069.b
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = serbia
				OR = {
					is_major = no
					is_ally_with = event_target:serbia
					event_target:serbia = { has_socialist_government = yes }
				}
			}
			modifier = {
				factor = 0
				has_event_target = croatia
				OR = {
					is_major = no
					is_ally_with = event_target:croatia
					event_target:croatia = { has_socialist_government = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = MNT }
		105 = { remove_claim_and_add_core_of_target = yes } #Montenegro
		release_targeted_tag = yes
		var:tag_to_release = { MNT_create_mihailo = yes }

		hidden_effect = { # swap out Markovic and Miletic for Grulovic and Rankovic, respectively
			SER = {
				if = {
					limit = { has_character = SER_vukasin_markovic }
					SER_vukasin_markovic = { set_nationality = MNT }
					MNT = {
						promote_character = {
							character = SER_vukasin_markovic
							ideology = totalist_subtype
						}
					}
				}
				if = {
					limit = { has_character = MNT_petko_miletic }
					MNT_petko_miletic = { set_nationality = MNT }
					MNT = {
						promote_character = {
							character = MNT_petko_miletic
							ideology = syndicalist_subtype
						}
					}
				}
				promote_character = {
					character = SER_nikola_grulovic
					ideology = totalist_subtype
				}
				SER_aleksandar_rankovic = {
					add_country_leader_role = {
						country_leader = {
							desc = SER_aleksandar_rankovic_advisor_desc
							ideology = syndicalist_subtype
						}
						promote_leader = yes
					}
				}
			}
		}
	}

	option = { #Give to Serbia
		log = "[GetLogInfo]: event annex.1069 option annex.europe.give_to_serbia"
		name = annex.europe.give_to_serbia
		trigger = {
			has_event_target = serbia
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:serbia = { original_tag = SER }
				OR = {
					original_tag = BUL
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:serbia }
				is_ally_with = event_target:croatia
				OR = {
					NOT = {
						original_tag = BUL
						AUS_is_led_by_habsburgs = yes
					}
					NOT = { event_target:croatia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:serbia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:serbia }
		105 = { transfer_state_and_notify = yes } #Montenegro
	}

	option = { #Give to Croatia
		log = "[GetLogInfo]: event annex.1069 option annex.europe.give_to_croatia"
		name = annex.europe.give_to_croatia
		trigger = {
			has_event_target = croatia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:croatia = { original_tag = SER }
				OR = {
					original_tag = BUL
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:croatia }
				is_ally_with = event_target:serbia
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:serbia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		105 = { transfer_state_and_notify = yes } #Montenegro

		hidden_effect = { # swap out Markovic and Miletic for Grulovic and Rankovic, respectively
			SER = {
				if = {
					limit = { has_character = SER_vukasin_markovic }
					SER_vukasin_markovic = { set_nationality = MNT }
					MNT = {
						promote_character = {
							character = SER_vukasin_markovic
							ideology = totalist_subtype
						}
					}
				}
				if = {
					limit = { has_character = MNT_petko_miletic }
					MNT_petko_miletic = { set_nationality = MNT }
					MNT = {
						promote_character = {
							character = MNT_petko_miletic
							ideology = syndicalist_subtype
						}
					}
				}
				promote_character = {
					character = SER_nikola_grulovic
					ideology = totalist_subtype
				}
				SER_aleksandar_rankovic = {
					add_country_leader_role = {
						country_leader = {
							desc = SER_aleksandar_rankovic_advisor_desc
							ideology = syndicalist_subtype
						}
						promote_leader = yes
					}
				}
			}
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1069 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		105 = { add_claim_of_ROOT = yes } #Montenegro
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1069 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		105 = { transfer_state_and_notify = yes } #Montenegro
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1069 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bosnia
	id = annex.1070
	title = annexation_104
	desc = annexation_104_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = { is_bosnia = no }
				remove_core_of = BOS
				remove_claim_by = BOS
			}
			BOS = {
				drop_cosmetic_tag = yes
				SER_disable_yugoslavia_integration = yes
			}
		}
		if = {
			limit = {
				OR = {
					109 = { is_claim_or_core_of_ROOT = yes } #Central Croatia
					107 = { is_claim_or_core_of_ROOT = yes } #Belgrade
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				109 = { #Central Croatia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:109.owner = { save_event_target_as = croatia }
		}
		if = {
			limit = {
				annexations_can_make_alliance_offer = yes
				SER = {
					annexations_is_valid_target_for_alliance_offer = yes
					NOT = { has_country_flag = offered_bosnia_@ROOT }
				}
			}
			SER = { save_event_target_as = can_offer_bosnia_to_serbia }
		}
		else_if = {
			limit = {
				107 = { #Belgrade
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:croatia }
					}
				}
			}
			var:107.owner = { save_event_target_as = serbia }
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1070 option annex.1070.a"
		name = annex.1070.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = BOS }
		release_targeted_tag = yes
	}

	option = { #Give it to Croatia
		log = "[GetLogInfo]: event annex.1070 option annex.europe.give_to_croatia"
		name = annex.europe.give_to_croatia
		trigger = {
			has_event_target = croatia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = can_offer_bosnia_to_serbia
				NOT = { original_tag = BUL }
				AUS_is_led_by_habsburgs = no
			}
			modifier = {
				factor = 0
				event_target:croatia = { is_ai = yes }
				has_event_target = serbia
				event_target:serbia = { is_ai = no }
			}
			modifier = {
				factor = 0.1
				event_target:croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		104 = { transfer_state_and_notify = yes } #Bosnia
	}

	option = { #Give it to Serbia
		log = "[GetLogInfo]: event annex.1070 option annex.europe.give_to_serbia"
		name = annex.europe.give_to_serbia
		trigger = {
			has_event_target = serbia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				event_target:serbia = { is_ai = yes }
				has_event_target = croatia
				event_target:croatia = { is_ai = no }
			}
			modifier = {
				factor = 0.1
				event_target:serbia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:serbia }
		104 = { transfer_state_and_notify = yes } #Bosnia
	}

	option = { #Offer to SER
		log = "[GetLogInfo]: event annex.1070 option annex.1070.b"
		name = annex.1070.b
		trigger = {
			has_event_target = can_offer_bosnia_to_serbia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0 #don't get pulled into random wars
				event_target:can_offer_bosnia_to_serbia = { annexations_AI_dont_offer_if_target_involved_in_separate_major_war = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:can_offer_bosnia_to_serbia }
		hidden_effect = {
			102 = { save_to_offered_states = yes } #Carniola
			104 = { save_to_offered_states = yes } #Bosnia
			105 = { save_to_offered_states = yes } #Montenegro
			107 = { save_to_offered_states = yes } #Belgrade
			108 = { save_to_offered_states = yes } #Morava
			109 = { save_to_offered_states = yes } #Central Croatia
			794 = { save_to_offered_states = yes } #Syrmia
		}
		var:tag_to_release = {
			set_country_flag = offered_bosnia_@ROOT
			offer_states_to_target = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1070 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		BOS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1070 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		104 = { add_claim_of_ROOT = yes } #Bosnia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1070 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Kosovo
	id = annex.1071
	title = annexation_765
	desc = annexation_765_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					108 = { is_claim_or_core_of_ROOT = yes } #Morava
					1053 = { is_claim_or_core_of_ROOT = yes } #Ghegeria
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				108 = { #Morava
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:108.owner = { save_event_target_as = morava }
		}
		if = {
			limit = {
				1053 = { #Ghegeria
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:morava }
					}
				}
			}
			var:1053.owner = { save_event_target_as = ghegeria }
		}
	}

	option = { #Give to owner of Morava
		log = "[GetLogInfo]: event annex.1071 option annex.europe.give_to_owner_of_morava"
		name = annex.europe.give_to_owner_of_morava
		trigger = {
			has_event_target = morava
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:morava = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:morava }
				is_ally_with = event_target:ghegeria
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:ghegeria = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:morava = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:morava }
		765 = { transfer_state_and_notify = yes } #Kosovo
	}

	option = { #Give to owner of Ghegeria
		log = "[GetLogInfo]: event annex.1071 option annex.1071.a"
		name = annex.1071.a
		trigger = {
			has_event_target = ghegeria
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:ghegeria = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:ghegeria }
				is_ally_with = event_target:morava
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:morava = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:ghegeria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:ghegeria }
		765 = { transfer_state_and_notify = yes } #Kosovo
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1071 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		765 = { transfer_state_and_notify = yes } #Kosovo
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1071 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		765 = { add_claim_of_ROOT = yes } #Kosovo
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1071 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Serbia
	id = annex.1072
	title = annexation_107
	desc = annexation_107_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_yugoslavian_cores_claims = yes
			SER = {
				remove_ideas = {
					SER_treaty_of_wartholz
					SER_secret_rearmament
					SER_open_rearmament
					SER_the_dream_of_yugoslavia
					SER_the_dream_of_yugoslavia_no_AUS
					SER_the_dream_of_yugoslavia_fulfilled
					SER_konspiracija_idea
					SER_konspiracija_conflict
					SER_puppet_show
					SER_Petar_II_regency
					SER_Petar_II_stojadinovic_puppet
				}
				SER_puppet_dethrone_petar_effect = yes
				set_party_name = {
					ideology = national_populist
					long_name = SER_national_populist_party_puppet_long
					name = SER_national_populist_party_puppet
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = SER_national_populist_party_puppet_long
					name = SER_national_populist_party_puppet
				}
				if = {
					limit = { has_character = SER_milan_stojadinovic }
					retire_character = SER_milan_stojadinovic
				}
				SER_milan_nedic = {
					set_nationality = PREV
					if = {
						limit = { has_ideology = paternal_autocrat_subtype }
						promote_character = paternal_autocrat_subtype
					}
					else = {
						add_country_leader_role = {
							country_leader = {
								desc = SER_milan_nedic_commander_desc
								ideology = paternal_autocrat_subtype
							}
							promote_leader = yes
						}
					}
					if = {
						limit = { has_ideology = national_populist_subtype }
						promote_character = national_populist_subtype
					}
					else = {
						add_country_leader_role = {
							country_leader = {
								desc = SER_milan_nedic_commander_desc
								ideology = national_populist_subtype
							}
							promote_leader = yes
						}
					}
				}
				SER_vukasin_markovic = {
					set_nationality = PREV
					promote_character = totalist_subtype
					promote_character = syndicalist_subtype
				}
				every_unit_leader = {
					limit = { has_character_flag = BUL_leader }
					set_nationality = BUL
					clr_character_flag = BUL_leader
				}
				SER_remove_yugoslavia = yes
			}
			if = {
				limit = {
					is_south_slav_tag = yes
					107 = { any_neighbor_state = { is_claim_or_core_of_ROOT = yes } } #Belgrade
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					109 = { #Central Croatia
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							owns_state = 104 #Bosnia
							is_south_slav_tag = yes
							ROOT_can_grant_land = yes
						}
					}
				}
				var:109.owner = { save_event_target_as = croatia }
			}
			765 = { retain_state = yes } #Kosovo
			767 = { retain_state = yes } #Nish
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1072 option annex.1072.a"
		name = annex.1072.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_south_slav_tag = yes
			}
			modifier = {
				factor = 0
				original_tag = BUL
				has_government = paternal_autocrat
			}
			modifier = {
				factor = 0
				has_event_target = croatia
				OR = {
					is_major = no
					is_ally_with = event_target:croatia
				}
				event_target:croatia = { is_south_slav_tag = yes }
			}
		}
		set_temp_variable = { tag_to_release = SER }
		release_targeted_tag_nocosmetic = yes
		if = {
			limit = {
				OR = {
					original_tag = GER
					original_tag = AUS
					original_tag = HUN
					original_tag = BUL
				}
				has_socialist_government = no
			}
			SER = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
				mark_focus_tree_layout_dirty = yes
			}
		}
		else_if = {
			limit = { has_socialist_government = yes } #unlock socialist tree for puppet SER
			SER = {
				unlock_national_focus = SER_Third_Revolution
				hidden_effect = {
					SER_dusan_simovic = { retire = yes }
					SER_milan_nedic = { retire = yes }
					SER_milutin_nedic = { retire = yes }
					SER_bogoljub_ilic = { retire = yes }
					SER_dragoljub_mihailovic = { retire = yes }
				}
			}
		}
		else = {
			hidden_effect = {
				SER = {
					SER_dusan_simovic = { set_nationality = PREV }
					SER_milan_nedic = { set_nationality = PREV }
					SER_milutin_nedic = { set_nationality = PREV }
					SER_bogoljub_ilic = { set_nationality = PREV }
					SER_dragoljub_mihailovic = { set_nationality = PREV }
				}
			}
		}
		country_event = serpuppet.100 #The Serbian Monarchy
	}

	option = { #make Yugoslavia
		log = "[GetLogInfo]: event annex.1072 option annex.1072.b"
		name = annex.1072.b
		trigger = {
			102 = { is_valid_annexation_state = yes } #Carniola
			104 = { is_valid_annexation_state = yes } #Bosnia
			105 = { is_valid_annexation_state = yes } #Montenegro
			109 = { is_valid_annexation_state = yes } #Central Croatia
			is_south_slav_tag = no
			is_subject = no
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_south_slav_tag = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = BUL
					original_tag = AUS
					original_tag = HUN
				}
			}
			modifier = {
				factor = 0
				has_event_target = croatia
				OR = {
					is_major = no
					is_ally_with = event_target:croatia
					event_target:croatia = { has_socialist_government = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = SER }
		every_state = {
			limit = { is_yugoslavia = yes }
			add_claim_of_target = yes
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 102 #Carniola
					state = 104 #Bosnia
					state = 105 #Montenegro
					state = 107 #Belgrade
					state = 108 #Morava
					state = 109 #Central Croatia
					state = 794 #Syrmia
				}
				is_valid_annexation_state = yes
			}
			transfer_state_without_overriding_occupation = yes
		}
		puppet_released_tag = yes
		var:tag_to_release = {
			effect_tooltip = {
				if = {
					limit = { PREV = { has_socialist_government = yes } }
					set_cosmetic_tag = YUG_fed
				}
				else_if = {
					limit = { PREV = { has_left_democratic_government = yes } }
					set_cosmetic_tag = YUG_fed
				}
				else = {
					set_cosmetic_tag = YUG_rep
				}
			}
			hidden_effect = {
				activate_decision = SER_Form_Yugoslavia
				if = { #unlock socialist tree for puppet SER
					limit = { has_socialist_government = yes }
					unlock_national_focus = SER_Third_Revolution
				}
			}
		}
		country_event = serpuppet.100 #The Serbian Monarchy
	}

	option = { #Give to Croatia
		log = "[GetLogInfo]: event annex.1072 option annex.europe.give_to_croatia"
		name = annex.europe.give_to_croatia
		trigger = {
			has_event_target = croatia
			if = {
				limit = { original_tag = BUL }
				event_target:croatia = {
					is_ally_with = ROOT
					OR = {
						is_subject = no
						is_subject_of = ROOT
					}
				}
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_south_slav_tag = yes
			}
			modifier = {
				factor = 0
				event_target:croatia = { is_south_slav_tag = no }
			}
			modifier = {
				factor = 0
				is_major = yes
				NOT = { is_ally_with = event_target:croatia }
			}
			modifier = {
				factor = 0.1
				event_target:croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		107 = { transfer_if_owned = yes } #Belgrade
		108 = { transfer_if_owned = yes } #Morava
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1072 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		SER = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1072 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_south_slav_tag = no
			}
		}
		107 = { add_claim_of_ROOT = yes } #Belgrade
		108 = { add_claim_of_ROOT = yes } #Morava
	}

	option = { #for Zveno Bulgaria: integrate
		log = "[GetLogInfo]: event annex.1072 option annex.1072.c"
		name = annex.1072.c
		trigger = {
			original_tag = BUL
			has_government = paternal_autocrat
			is_valid_peace_target = yes
			NOT = { has_completed_focus = BUL_balkan_war_defeat }
			NOT = { has_country_flag = BUL_disabled_bulgoslavia } # received volunteers from AUS, GER, or their allies
			NOT = { has_completed_focus = BUL_german_diplomacy }
			NOT = { has_global_flag = germany_demands_end_to_balkan_war }
			NOT = { has_global_flag = austria_demands_end_to_balkan_war }
		}
		SER = { add_claim_of_ROOT_on_valid_cores = yes }
		set_country_flag = BUL_hijacked_yugoslavism
		mark_focus_tree_layout_dirty = yes
		custom_effect_tooltip = unlocks_new_focuses
		country_event = bulgariaflavour.8
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1072 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Nis
	id = annex.1073
	title = annexation_767
	desc = annexation_767_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					106 = { is_claim_or_core_of_ROOT = yes } #Macedonia
					107 = { is_claim_or_core_of_ROOT = yes } #Belgrade
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				106 = { #Macedonia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:106.owner = { save_event_target_as = macedonia }
		}
		if = {
			limit = {
				107 = { #Belgrade
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:macedonia }
					}
				}
			}
			var:107.owner = { save_event_target_as = belgrade }
		}
	}

	option = { #Give to owner of Macedonia
		log = "[GetLogInfo]: event annex.1073 option annex.1073.a"
		name = annex.1073.a
		trigger = {
			has_event_target = macedonia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:macedonia = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:macedonia }
				is_ally_with = event_target:belgrade
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:belgrade = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:macedonia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:macedonia }
		767 = { transfer_state_and_notify = yes } #Nish
	}

	option = { #Give to owner of Belgrade
		log = "[GetLogInfo]: event annex.1073 option annex.europe.give_to_owner_of_belgrade"
		name = annex.europe.give_to_owner_of_belgrade
		trigger = {
			has_event_target = belgrade
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:belgrade = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgrade }
				is_ally_with = event_target:macedonia
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:macedonia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:belgrade = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgrade }
		767 = { transfer_state_and_notify = yes } #Nish
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1073 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		767 = { transfer_state_and_notify = yes } #Nish
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1073 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		767 = { add_claim_of_ROOT = yes } #Nish
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1073 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Kotor
	id = annex.1074
	title = annexation_841
	desc = annexation_841_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					105 = { is_claim_or_core_of_ROOT = yes } #Montenegro
					163 = { is_claim_or_core_of_ROOT = yes } #Dalmatia
					160 = { is_claim_or_core_of_ROOT = yes } #Venetia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				105 = { #Montenegro
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:105.owner = { save_event_target_as = montenegro }
		}
		if = {
			limit = {
				163 = { #Dalmatia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:montenegro }
					}
				}
			}
			var:163.owner = { save_event_target_as = dalmatia }
		}
		if = {
			limit = {
				160 = { #Venetia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:dalmatia }
						NOT = { tag = event_target:montenegro }
					}
				}
			}
			var:160.owner = { save_event_target_as = venetia }
		}
	}

	option = { #Give to owner of Montenegro
		log = "[GetLogInfo]: event annex.1074 option annex.1074.a"
		name = annex.1074.a
		trigger = {
			has_event_target = montenegro
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:montenegro = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgrade }
				is_ally_with = event_target:dalmatia
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:dalmatia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgrade }
				is_ally_with = event_target:venetia
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:venetia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:montenegro = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:montenegro }
		841 = { transfer_state_and_notify = yes } #Kotor
	}

	option = { #Give to owner of Dalmatia
		log = "[GetLogInfo]: event annex.1074 option annex.1074.b"
		name = annex.1074.b
		trigger = {
			has_event_target = dalmatia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:dalmatia = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:dalmatia }
				is_ally_with = event_target:belgrade
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:belgrade = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:dalmatia }
				is_ally_with = event_target:venetia
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:venetia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:dalmatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:dalmatia }
		841 = { transfer_state_and_notify = yes } #Kotor
	}

	option = { #Give to owner of Venetia
		log = "[GetLogInfo]: event annex.1074 option annex.europe.give_to_owner_of_venetia"
		name = annex.europe.give_to_owner_of_venetia
		trigger = {
			has_event_target = venetia
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:venetia = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				is_ally_with = event_target:montenegro
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:montenegro = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				is_ally_with = event_target:dalmatia
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
					}
					NOT = { event_target:dalmatia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:venetia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:venetia }
		841 = { transfer_state_and_notify = yes } #Kotor
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1074 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		841 = { transfer_state_and_notify = yes } #Nish
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1074 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		841 = { add_claim_of_ROOT = yes } #Kotor
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1074 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Macedonia
	id = annex.1075
	title = annexation_106
	desc = annexation_106_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					48 = { is_claim_or_core_of_ROOT = yes } #Sofia
					AND = {
						108 = { is_claim_or_core_of_ROOT = yes } #Morava
						owns_state = 767 #Nish
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				108 = { #Morava
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						767 = { annexations_required_state_is_owned_by_either_side = yes } #Nish
						ROOT_can_grant_land = yes
					}
				}
			}
			if = {
				limit = {
					annexations_can_make_alliance_offer = yes
					SER = {
						owns_state = 108 #Morava
						annexations_is_valid_target_for_alliance_offer = yes
						NOT = { has_country_flag = offered_macedonia_@ROOT }
					}
				}
				SER = { save_event_target_as = can_offer_macedonia_to_serbia }
			}
			else = {
				var:108.owner = { save_event_target_as = morava }
			}
		}
		if = {
			limit = {
				48 = { #Sofia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:can_offer_macedonia_to_serbia }
						NOT = { tag = event_target:serbia }
						ROOT_can_grant_land = yes
					}
				}
			}
			if = {
				limit = {
					annexations_can_make_alliance_offer = yes
					BUL = {
						owns_state = 48 #Sofia
						annexations_is_valid_target_for_alliance_offer = yes
						NOT = { has_country_flag = offered_macedonia_@ROOT }
					}
				}
				BUL = { save_event_target_as = can_offer_macedonia_to_bulgaria }
			}
			else = {
				var:48.owner = { save_event_target_as = sofia }
			}
		}
	}

	option = { #Give to owner of Morava
		log = "[GetLogInfo]: event annex.1075 option annex.europe.give_to_owner_of_morava"
		name = annex.europe.give_to_owner_of_morava
		trigger = {
			has_event_target = morava
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:morava = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
					original_tag = CRO
					original_tag = ALB
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:morava }
				is_ally_with = event_target:sofia
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
						original_tag = CRO
						original_tag = ALB
					}
					NOT = { event_target:sofia = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:morava = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:morava }
		106 = { transfer_state_and_notify = yes } #Macedonia
		767 = { transfer_if_owned = yes } #Nish
	}

	option = { #Give to owner of Sofia
		log = "[GetLogInfo]: event annex.1075 option annex.1075.a"
		name = annex.1075.a
		trigger = {
			has_event_target = sofia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:sofia = { original_tag = SER }
				OR = {
					AUS_is_led_by_habsburgs = yes
					original_tag = BUL
					original_tag = CRO
					original_tag = ALB
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:sofia }
				is_ally_with = event_target:morava
				OR = {
					NOT = {
						AUS_is_led_by_habsburgs = yes
						original_tag = BUL
						original_tag = CRO
						original_tag = ALB
					}
					NOT = { event_target:morava = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:sofia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:sofia }
		106 = { transfer_state_and_notify = yes } #Macedonia
	}

	option = { #Offer it to SER
		log = "[GetLogInfo]: event annex.1075 option annex.1075.b"
		name = annex.1075.b
		trigger = {
			has_event_target = can_offer_macedonia_to_serbia
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = AUS
					original_tag = CRO
					original_tag = ALB
				}
			}
			modifier = {
				factor = 0 #don't get pulled into random wars
				event_target:can_offer_macedonia_to_serbia = { annexations_AI_dont_offer_if_target_involved_in_separate_major_war = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:can_offer_macedonia_to_serbia }
		hidden_effect = {
			106 = { save_to_offered_states = yes } #Macedonia
			765 = { save_to_offered_states = yes } #Nish
		}
		var:tag_to_release = {
			set_country_flag = offered_macedonia_@ROOT
			offer_states_to_target = yes
		}
	}

	option = { #Offer it to BUL
		log = "[GetLogInfo]: event annex.1075 option annex.1075.c"
		name = annex.1075.c
		trigger = {
			has_event_target = can_offer_macedonia_to_bulgaria
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = ROM
					original_tag = GRE
					original_tag = TUR
				}
			}
			modifier = {
				factor = 0 #don't get pulled into random wars
				event_target:can_offer_macedonia_to_bulgaria = { annexations_AI_dont_offer_if_target_involved_in_separate_major_war = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:can_offer_macedonia_to_bulgaria }
		hidden_effect = {
			106 = { save_to_offered_states = yes } #Macedonia
		}
		var:tag_to_release = {
			set_country_flag = offered_macedonia_@ROOT
			offer_states_to_target = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1075 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		106 = { transfer_state_and_notify = yes } #Macedonia
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1075 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		106 = { add_claim_of_ROOT = yes } #Macedonia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1075 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Romania
	id = annex.1076
	title = annexation_46
	desc = annexation_46_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					NOT = { region = 15 } #Romania
					NOT = { region = 144 } #Transylvania
				}
				remove_core_of = ROM
				remove_claim_by = ROM
			}
			TRS = { every_core_state = { retain_state = yes } }
			77 = { retain_state = yes } #Silistria
			78 = { retain_state = yes } #Bessarabia
			80 = { retain_state = yes } #Cernauti
			713 = { retain_state = yes } #Suceava
			772 = { retain_state = yes } #Constantza
		}
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1076 option annex.1076.a"
		name = annex.1076.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				NOT = {
					tag = UPC
					is_american_tag = yes
					AND = {
						is_russian_tag = yes
						has_elected_government = yes
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				ROM_remove_monarchy = yes
				ROM_puppet_setup = yes
			}
		}
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1076 option annex.1076.b"
		name = annex.1076.b
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				OR = {
					tag = UPC
					is_american_tag = yes
					AND = {
						is_russian_tag = yes
						has_elected_government = yes
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		release_targeted_tag = yes
		var:tag_to_release = {
			ROM_create_monarchy = yes
			hidden_effect = { ROM_puppet_setup = yes }
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1076 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		ROM = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1076 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bulgaria
	id = annex.1077
	title = annexation_48
	desc = annexation_48_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = {
						is_bulgaria = no
						if = {
							limit = { check_variable = { core_countries^num = 1 } }
							NOT = { state = 184 } #Komotini
							NOT = { state = 731 } #Florina
							NOT = { state = 767 } #Nish
							NOT = { state = 769 } #Serres
						}
					}
					remove_core_of = BUL
				}
				else = {
					add_core_of = BUL
				}
				remove_claim_by = BUL
			}
			77 = { retain_state = yes } #Silistria
			106 = { retain_state = yes } #Macedonia
			184 = { retain_state = yes } #Komotini
			731 = { retain_state = yes } #Florina
			767 = { retain_state = yes } #Nish
			769 = { retain_state = yes } #Serres
			1089 = { retain_state = yes } #Kardzhali
			BUL = {
				remove_ideas = GER_mil_support_idea
				BUL_remove_monarchy = yes
				set_party_name = {
					ideology = social_conservative
					name = BUL_national_liberal_party
					long_name = BUL_national_liberal_party_long
				}
				if = {
					limit = { NOT = { has_character = BUL_pencho_zlatev } }
					BUL_alexander_stamboliyski = { promote_character = authoritarian_democrat_subtype }
					set_party_name = {
						ideology = authoritarian_democrat
						name = BUL_its_just_bzns_party
						long_name = BUL_its_just_bzns_party_long
					}
				}
				else = {
					BUL_pencho_zlatev = { promote_character = authoritarian_democrat_subtype }
					set_party_name = {
						ideology = authoritarian_democrat
						name = BUL_royal_authoritarian_democrat_party
						long_name = BUL_royal_authoritarian_democrat_party_long
					}
				}
				set_party_name = {
					ideology = paternal_autocrat
					name = BUL_royal_authoritarian_democrat_party
					long_name = BUL_royal_authoritarian_democrat_party_long
				}
				BUL_kimon_georgiev = {
					set_nationality = PREV
					promote_character = paternal_autocrat_subtype
				}
				every_state = {
					limit = {
						NOT = { region = 26 } #Bulgaria
						NOT = { state = 184 } #Komotini
						NOT = { state = 769 } #Serres
					}
					disable_state_integration = yes
				}
				clr_country_flag = BUL_hijacked_yugoslavism
				if = {
					limit = { has_completed_focus = BUL_hijack_yugoslavism }
					uncomplete_national_focus = {
						focus = BUL_hijack_yugoslavism
						uncomplete_children = yes
					}
				}
			}
		}
	}

	option = { #republic
		log = "[GetLogInfo]: event annex.1077 option annex.1077.a"
		name = annex.1077.a
		trigger = {
			is_subject = no
			if = {
				limit = {
					original_tag = SER
				}
				is_monarchy = no
			}
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = BUL }
		release_targeted_tag = yes
		if = {
			limit = { has_socialist_government = yes }
			var:tag_to_release = {
				set_cosmetic_tag = BUL_rep
				mark_focus_tree_layout_dirty = yes
				unlock_national_focus = BUL_front_republic
			}
		}
		else_if = {
			limit = { tag = SER }
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 40
				}
				BUL_alexander_stamboliyski = { promote_character = authoritarian_democrat_subtype }
				set_cosmetic_tag = BUL_rep
				mark_focus_tree_layout_dirty = yes
				unlock_national_focus = BUL_front_republic
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = BUL_its_just_bzns_party_long
					name = BUL_its_just_bzns_party
				}
			}
			# Bulgaria transfers some factories
			belgrade_pact_loot_factory_from_bulgaria = yes
			# Fixes IMRO exploit
			if = {
				limit = {
					has_war_with = MAC
				}
				BUL = { white_peace = MAC }
			}
		}
		hidden_effect = {
			var:tag_to_release = {
				if = {
					limit = { has_dictatorship_government = no }
					remove_ideas = {
						BUL_royalist_resistance
						BUL_legionary_revolution
						BUL_legionary_revolution_2
						BUL_legionary_revolution_3
						BUL_legionary_economics
						BUL_legionary_economics_2
						BUL_legionary_economics_3
					}
				}
				if = {
					limit = { has_socialist_government = no }
					remove_ideas = {
						BUL_royalist_resistance_worse
						BUL_royalist_resistance_worse_2
						BUL_socialist_offensive_1
						BUL_socialist_offensive_2
						BUL_socialist_offensive_3
						BUL_ds_established
						BUL_communard_revolution_1
						BUL_communard_revolution_2
						BUL_communard_revolution_3
						BUL_spirit_of_solidarity_1
						BUL_spirit_of_solidarity_2
						BUL_bearing_the_torch
						BUL_consolidation_of_power_1
						BUL_consolidation_of_power_2
						BUL_peasant_state_1
						BUL_peasant_state_2
						BUL_peasant_state_3
						BUL_fighting_for_motherland_1
						BUL_fighting_for_motherland_2
					}
				}
			}
		}
	}

	option = { #monarchy
		log = "[GetLogInfo]: event annex.1077 option annex.1077.b"
		name = annex.1077.b
		trigger = {
			is_subject = no
			has_socialist_government = no
			if = {
				limit = {
					original_tag = SER
				}
				is_monarchy = yes
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					tag = GER
					tag = AUS
				}
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		release_targeted_tag = yes
		if = {
			limit = {
				original_tag = SER
			}
			var:tag_to_release = {
				BUL_create_kyril = yes
				# Bulgaria transfers some factories
				belgrade_pact_loot_factory_from_bulgaria = yes
				# Fixes IMRO exploit
				if = {
					limit = {
						has_war_with = MAC
					}
					BUL = { white_peace = MAC }
				}
			}
		}
		else = {
			var:tag_to_release = { BUL_create_ferdinand = yes }
		}
		hidden_effect = {
			var:tag_to_release = {
				remove_ideas = {
					BUL_royalist_resistance
					BUL_legionary_revolution
					BUL_legionary_revolution_2
					BUL_legionary_revolution_3
					BUL_legionary_economics
					BUL_legionary_economics_2
					BUL_legionary_economics_3
					BUL_royalist_resistance_worse
					BUL_royalist_resistance_worse_2
					BUL_socialist_offensive_1
					BUL_socialist_offensive_2
					BUL_socialist_offensive_3
					BUL_ds_established
					BUL_communard_revolution_1
					BUL_communard_revolution_2
					BUL_communard_revolution_3
					BUL_spirit_of_solidarity_1
					BUL_spirit_of_solidarity_2
					BUL_bearing_the_torch
					BUL_consolidation_of_power_1
					BUL_consolidation_of_power_2
					BUL_peasant_state_1
					BUL_peasant_state_2
					BUL_peasant_state_3
					BUL_fighting_for_motherland_1
					BUL_fighting_for_motherland_2
				}
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1077 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		BUL = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1077 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Constantinople
	id = annex.1078
	title = annexation_773
	desc = annexation_773_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					47 = { is_claim_or_core_of_ROOT = yes } #Central Greece
					340 = { #Bursa
						is_owned_by = ROOT
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				47 = { #Central Greece
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:47.owner = { save_event_target_as = greece }
		}
		if = {
			limit = {
				340 = { #Bursa
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:greece }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:340.owner = { save_event_target_as = turkey }
		}
	}

	option = { #transfer to GRE
		log = "[GetLogInfo]: event annex.1078 option annex.europe.give_to_greece"
		name = annex.europe.give_to_greece
		trigger = {
			has_event_target = greece
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:greece }
				is_ally_with = event_target:turkey
			}
			modifier = {
				factor = 0.1
				event_target:greece = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		773 = { transfer_state_and_notify = yes } #Constantinople
	}

	option = { #transfer to TUR
		log = "[GetLogInfo]: event annex.1078 option annex.europe.give_to_turkey"
		name = annex.europe.give_to_turkey
		trigger = {
			has_event_target = turkey
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:turkey }
				is_ally_with = event_target:greece
			}
			modifier = {
				factor = 0.1
				event_target:turkey = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:turkey }
		773 = { transfer_state_and_notify = yes } #Constantinople
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1078 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		773 = { transfer_state_and_notify = yes } #Constantinople
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1078 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		773 = { add_claim_of_ROOT = yes } #Constantinople
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1078 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Greece
	id = annex.1079
	title = annexation_47
	desc = annexation_47_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = { is_greece = no }
				remove_core_of = GRE
				remove_claim_by = GRE
			}
			164 = { retain_state = yes } #Dodecanese
			183 = { retain_state = yes } #Cyprus
			184 = { retain_state = yes } #Komotini
			187 = { retain_state = yes } #Aegean Islands
			341 = { retain_state = yes } #Adrianople
			731 = { retain_state = yes } #Florina
			766 = { retain_state = yes } #Northern Epirus
			769 = { retain_state = yes } #Serres
			773 = { retain_state = yes } #Constantinople
			989 = { retain_state = yes } #Chalcidice
			if = {
				limit = {
					OR = {
						NOT = { tag = GER }
						has_socialist_government = yes
					}
				}
				GRE = {
					remove_ideas = {
						GRE_foreign_industry_GER1
						GRE_foreign_industry_GER2
						GRE_foreign_industry_GER3
					}
				}
			}
			if = {
				limit = {
					OR = {
						NOT = { tag = AUS }
						has_socialist_government = yes
					}
				}
				GRE = {
					remove_ideas = {
						GRE_foreign_industry_AUS1
						GRE_foreign_industry_AUS2
						GRE_foreign_industry_AUS3
					}
				}
			}
		}
	}

	option = { #Liberate Hellenic Republic
		log = "[GetLogInfo]: event annex.1079 option annex.1079.a"
		name = annex.1079.a
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = GER
					tag = AUS
					is_in_faction_with = CAN
					is_in_faction_with = GBR
					AND = {
						has_government = authoritarian_democrat
						is_in_europe = yes
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		var:tag_to_release = {
			GRE_stop_being_syndicalist = yes
			GRE_restore_republic = yes
			GRE_uncomplete_focuses = yes
			GRE_uncomplete_expansion_focuses = yes
			if = {
				limit = { has_country_flag = GRE_monarchists_win_referendum }
				clr_country_flag = GRE_monarchists_win_referendum
				set_country_flag = GRE_republicans_win_referendum
			}
			hidden_effect = {
				if = {
					limit = { 47 = { is_owned_and_controlled_by = PREV } }
					set_capital = { state = 47 remember_old_capital = no } #Central Greece
				}
				GRE_puppet_setup = yes
			}
		}
	}
	option = { #Liberate Kingdom of Greece
		log = "[GetLogInfo]: event annex.1079 option annex.1079.b"
		name = annex.1079.b
		trigger = {
			is_subject = no
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = {
					tag = GER
					tag = AUS
					is_in_faction_with = CAN
					is_in_faction_with = GBR
					AND = {
						has_government = authoritarian_democrat
						is_in_europe = yes
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		var:tag_to_release = {
			GRE_stop_being_syndicalist = yes
			if = {
				limit = { has_idea = GRE_memories_of_king }
				remove_ideas = GRE_memories_of_king
			}
			if = {
				limit = { NOT = { has_cosmetic_tag = GRE_kingdom } }
				set_cosmetic_tag = GRE_kingdom
			}
			if = {
				limit = { has_completed_focus = GRE_king_alexandros }
				GRE_create_alexander = yes
			}
			else_if = {
				limit = { has_completed_focus = GRE_king_georgios }
				GRE_create_george = yes
			}
			else_if = {
				limit = { has_completed_focus = GRE_restore_monarchy }
				GRE_create_paul = yes
			}
			else_if = {
				limit = {
					NOT = { has_completed_focus = GRE_monarchy_referendum }
					ROOT = { has_elected_government = yes }
				}
				set_country_flag = GRE_monarchists_win_referendum
			}
			else_if = {
				limit = {
					ROOT = { has_dictatorship_government = yes }
				}
				GRE_create_paul = yes
			}
			else = {
				GRE_create_alexander = yes
			}
			GRE_uncomplete_focuses = yes
			GRE_uncomplete_expansion_focuses = yes
			hidden_effect = {
				if = {
					limit = { 47 = { is_owned_and_controlled_by = PREV } }
					set_capital = { state = 47 remember_old_capital = no } #Central Greece
				}
				GRE_puppet_setup = yes
			}
		}
	}
	option = { #Liberate Hellenic Commune
		log = "[GetLogInfo]: event annex.1079 option annex.1079.c"
		name = annex.1079.c
		trigger = {
			is_subject = no
			has_socialist_government = yes
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		var:tag_to_release = {
			GRE_become_syndicalist = yes
			GRE_restore_republic = yes
			GRE_uncomplete_focuses = yes
			GRE_uncomplete_expansion_focuses = yes
			hidden_effect = {
				if = {
					limit = { 47 = { is_owned_and_controlled_by = PREV } }
					set_capital = { state = 47 remember_old_capital = no } #Central Greece
				}
				GRE_puppet_setup = yes
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1079 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		GRE = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1079 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Chalcidice
	id = annex.1080
	title = annexation_989
	desc = annexation_989_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					47 = { is_claim_or_core_of_ROOT = yes } #Central Greece
					769 = { is_claim_or_core_of_ROOT = yes } #Serres
					AND = {
						212 = { is_claim_or_core_of_ROOT = yes } #Plovdiv
						owns_state = 769 #Serres
					}
					AND = {
						773 = { is_claim_or_core_of_ROOT = yes } #Constantinople
						owns_state = 184 #Komotini
						owns_state = 341 #Adrianople
						owns_state = 769 #Serres
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				47 = { #Central Greece
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:47.owner = { save_event_target_as = central_greece }
		}
		if = {
			limit = {
				769 = { #Serres
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:central_greeces }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:769.owner = { save_event_target_as = serres }
		}
		else = {
			if = {
				limit = {
					212 = { #Plovdiv
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:central_greece }
							769 = { annexations_required_state_is_owned_by_either_side = yes } #Serres
							ROOT_can_grant_land = yes
						}
					}
				}
				var:212.owner = { save_event_target_as = plovdiv }
			}
			if = {
				limit = {
					773 = { #Constantinople
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:central_greece }
							NOT = { tag = event_target:constantinople }
							184 = { annexations_required_state_is_owned_by_either_side = yes } #Komotini
							341 = { annexations_required_state_is_owned_by_either_side = yes } #Adrianople
							769 = { annexations_required_state_is_owned_by_either_side = yes } #Serres
							ROOT_can_grant_land = yes
						}
					}
				}
				var:773.owner = { save_event_target_as = constantinople }
			}
		}
	}

	option = { #Give to owner of Central Greece
		log = "[GetLogInfo]: event annex.1080 option annex.1080.a"
		name = annex.1080.a
		trigger = {
			has_event_target = central_greece
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_greece }
				OR = {
					is_ally_with = event_target:serres
					is_ally_with = event_target:plovdiv
					is_ally_with = event_target:constantinople
				}
			}
			modifier = {
				factor = 0.1
				event_target:central_greece = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_greece }
		989 = { transfer_state_and_notify = yes } #Chalcidice
	}

	option = { #Give to owner of Serres
		log = "[GetLogInfo]: event annex.1080 option annex.1080.b"
		name = annex.1080.b
		trigger = {
			has_event_target = serres
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:serres }
				OR = {
					is_ally_with = event_target:central_greece
					is_ally_with = event_target:plovdiv
					is_ally_with = event_target:constantinople
				}
			}
			modifier = {
				factor = 0.1
				event_target:serres = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:serres }
		989 = { transfer_state_and_notify = yes } #Chalcidice
	}

	option = { #Give to owner of Plovdiv
		log = "[GetLogInfo]: event annex.1080 option annex.1080.c"
		name = annex.1080.c
		trigger = {
			has_event_target = plovdiv
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:plovdiv }
				OR = {
					is_ally_with = event_target:central_greece
					is_ally_with = event_target:serres
					is_ally_with = event_target:constantinople
				}
			}
			modifier = {
				factor = 0.1
				event_target:plovdiv = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:plovdiv }
		769 = { transfer_if_owned = yes } #Serres
		989 = { transfer_state_and_notify = yes } #Chalcidice
	}

	option = { #Give to owner of Constantinople
		log = "[GetLogInfo]: event annex.1080 option annex.1080.d"
		name = annex.1080.d
		trigger = {
			has_event_target = constantinople
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:constantinople }
				OR = {
					is_ally_with = event_target:central_greece
					is_ally_with = event_target:serres
					is_ally_with = event_target:plovdiv
				}
			}
			modifier = {
				factor = 0.1
				event_target:constantinople = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:constantinople }
		184 = { transfer_if_owned = yes } #Komotini
		341 = { transfer_if_owned = yes } #Adrianople
		769 = { transfer_if_owned = yes } #Serres
		989 = { transfer_state_and_notify = yes } #Chalcidice
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1080 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		989 = { transfer_state_and_notify = yes } #Chalcidice
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1080 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { tag = OTT }
			184 = { remove_claim_and_add_core_of_ROOT = yes } #Komotini
			341 = { remove_claim_and_add_core_of_ROOT = yes } #Adrianople
			769 = { remove_claim_and_add_core_of_ROOT = yes } #Serres
			989 = { remove_claim_and_add_core_of_ROOT = yes } #Chalcidice
		}
		else_if = {
			limit = { 773 = { is_claim_or_core_of_ROOT = yes } } #Constantinople
			184 = { transfer_if_owned = yes } #Komotini
			341 = { transfer_if_owned = yes } #Adrianople
			769 = { transfer_if_owned = yes } #Serres
		}
		else_if = {
			limit = { 212 = { is_claim_or_core_of_ROOT = yes } } #Plovdiv
			769 = { transfer_if_owned = yes } #Serres
		}
		989 = { add_claim_of_ROOT = yes } #Chalcidice
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1080 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Northern Epirus
	id = annex.1082
	title = annexation_766
	desc = annexation_766_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					44 = { is_claim_or_core_of_ROOT = yes } #Toskeria
					185 = { is_claim_or_core_of_ROOT = yes } #Epirus
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				44 = { #Toskeria
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:44.owner = { save_event_target_as = toskeria }
		}
		if = {
			limit = {
				185 = { #Epirus
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:toskeria }
					}
				}
			}
			var:185.owner = { save_event_target_as = epirus }
		}
	}

	option = { #Give to owner of Toskeria
		log = "[GetLogInfo]: event annex.1082 option annex.1082.a"
		name = annex.1082.a
		trigger = {
			has_event_target = toskeria
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:toskeria }
				is_ally_with = event_target:epirus
			}
			modifier = {
				factor = 0.1
				event_target:toskeria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:toskeria }
		766 = { transfer_state_and_notify = yes } #Northern Epirus
	}

	option = { #Give to owner of Epirus
		log = "[GetLogInfo]: event annex.1082 option annex.1082.b"
		name = annex.1082.b
		trigger = {
			has_event_target = epirus
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:epirus }
				is_ally_with = event_target:toskeria
			}
			modifier = {
				factor = 0.1
				event_target:epirus = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:epirus }
		766 = { transfer_state_and_notify = yes } #Northern Epirus
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1082 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		766 = { transfer_state_and_notify = yes } #Chalcidice
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1082 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		766 = { add_claim_of_ROOT = yes } #Northern Epirus
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1082 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Cyprus
	id = annex.1083
	title = annexation_183
	desc = annexation_183_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				remove_core_of = CYP
				remove_claim_by = CYP
			}
			if = {
				limit = {
					OR = {
						original_tag = TUR
						original_tag = GRE
						annexations_britain_can_annex_overseas = yes
					}
				}
				save_event_target_as = can_annex
			}
			annexations_create_greece_event_target = yes
			annexations_create_turkey_event_target = yes
			annexations_create_britain_event_target = yes
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1083 option annex.1083.a"
		name = annex.1083.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = CYP }
		183 = { remove_claim_and_add_core_of_target = yes } #Cyprus
		release_targeted_tag = yes
	}

	option = { #Give to Greece
		log = "[GetLogInfo]: event annex.1083 option annex.europe.give_to_greece"
		name = annex.europe.give_to_greece
		trigger = {
			has_event_target = greece
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = GRE }
		183 = { transfer_state_and_notify = yes } #Cyprus
	}

	option = { #Give to Turkey
		log = "[GetLogInfo]: event annex.1083 option annex.europe.give_to_turkey"
		name = annex.europe.give_to_turkey
		trigger = {
			has_event_target = turkey
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_ally_with = GRE
			}
		}
		set_temp_variable = { tag_to_release = TUR }
		183 = { transfer_state_and_notify = yes } #Cyprus
	}

	option = { #Give to Britain
		log = "[GetLogInfo]: event annex.1083 option annex.give_to_britain"
		name = annex.give_to_britain
		trigger = {
			has_event_target = britain
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_will_consider_returning_colonies = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:britain }
			}
			modifier = {
				factor = 0
				event_target:britain = { has_socialist_government = yes }
			}
			modifier = {
				factor = 0.1
				event_target:britain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:britain }
		183 = { transfer_state_and_notify = yes } #Cyprus
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1083 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		183 = { transfer_state_and_notify = yes } #Cyprus
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1083 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		183 = { add_claim_of_ROOT = yes } #Cyprus
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1083 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

#####################################
##  S O U T H E R N   E U R O P E  ##
#####################################

country_event = { #Fate of Spain
	id = annex.1084
	title = annexation_41
	desc = annexation_41_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				if = {
					limit = { is_spain = no }
					remove_core_of = SPK
				}
				else = {
					add_core_of = SPK
				}
				remove_core_of = SPR
				remove_core_of = SWF
				remove_claim_by = SPK
				remove_claim_by = SPR
				remove_claim_by = SWF
			}
			SPA_puppet_setup_immediate = yes
			118 = { retain_state = yes } #Gibraltar
			165 = { retain_state = yes } #Catalonia
			167 = { retain_state = yes } #Valencia
			171 = { retain_state = yes } #Galicia
			172 = { retain_state = yes } #Navarre
			177 = { retain_state = yes } #Balearic Islands
			1070 = { retain_state = yes } #Basque Country
		}
	}

	option = { #Socialist
		log = "[GetLogInfo]: event annex.1084 option annex.1084.a"
		name = annex.1084.a
		trigger = {
			has_socialist_government = yes
			is_subject = no
		}
		set_temp_variable = { tag_to_release = SWF }
		release_spain = yes
	}

	option = { #Kingdom
		log = "[GetLogInfo]: event annex.1084 option annex.1084.b"
		name = annex.1084.b
		trigger = {
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_monarchy = no
				is_in_europe = no
			}
		}
		if = {
			limit = {
				OR = {
					tag = GBR
					original_tag = NFA
					is_ally_with = ENT
					AND = {
						has_government = national_populist
						OR = {
							original_tag = IRE
							original_tag = SIC
							original_tag = POR
							original_tag = BRA
						}
					}
				}
			}
			set_temp_variable = { tag_to_release = SPR }
		}
		else = {
			set_temp_variable = { tag_to_release = SPA }
		}
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = { tag = SPR }
				hidden_effect = {
					set_politics = { ruling_party = national_populist }
					set_popularities = {
						totalist = 0
						radical_socialist = 0
						syndicalist = 0
						social_democrat = 3
						social_liberal = 3
						market_liberal = 7
						social_conservative = 0
						authoritarian_democrat = 10
						paternal_autocrat = 12
						national_populist = 65
					}
				}
			}
			else = {
				SPA_create_juan = yes
				SPA_set_puppet_second_in_commands = yes
				hidden_effect = {
					set_party_name = {
						ideology = market_liberal
						long_name = SPA_market_liberal_mon_party_long
						name = SPA_market_liberal_mon_party
					}
					set_party_name = {
						ideology = social_liberal
						long_name = SPA_social_liberal_mon_party_long
						name = SPA_social_liberal_mon_party
					}
					set_party_name = {
						ideology = social_democrat
						long_name = SPA_radical_socialist_party_long
						name = SPA_radical_socialist_party
					}
					if = {
						limit = { event_target:original_spain = { SPA_juan_de_borbon = { is_dead = yes } } }
						SPA_jaime_de_borbon = {
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = social_democrat_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = social_liberal_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = market_liberal_subtype
								}
								promote_leader = yes
							}
						}
					}
					else = {
						SPA_juan_de_borbon = {
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = social_democrat_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = social_liberal_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = market_liberal_subtype
								}
								promote_leader = yes
							}
						}
					}
				}
			}
		}
	}

	option = { #Republic
		log = "[GetLogInfo]: event annex.1084 option annex.1084.c"
		name = annex.1084.c
		trigger = {
			has_socialist_government = no
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_monarchy = yes
				is_in_europe = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = GER
					original_tag = NFA
					ENT = { is_ally_of_ROOT = yes }
					AND = {
						has_government = national_populist
						OR = {
							original_tag = IRE
							original_tag = SIC
							original_tag = POR
							original_tag = BRA
						}
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = SPA }
		release_spain = yes
		var:tag_to_release = {
			hidden_effect = {
				set_cosmetic_tag = SPA_republic
				SPA_jose_maria_gil_robles_y_quinones_de_leon = {
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = {
							desc = SPA_jose_maria_gil_robles_y_quinones_de_leon_leader_desc
							ideology = authoritarian_democrat_subtype
						}
						promote_leader = yes
					}
				}
				SPA_emilio_mola_vidal = {
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = {
							desc = SPA_emilio_mola_vidal_leader_desc
							ideology = paternal_autocrat_subtype
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							desc = SPA_emilio_mola_vidal_leader_desc
							ideology = national_populist_subtype
						}
						promote_leader = yes
					}
				}
			}
			SPA_set_puppet_second_in_commands = yes
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1084 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		SPA = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1084 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Galicia
	id = annex.1085
	title = annexation_171
	desc = annexation_171_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					174 = { is_claim_or_core_of_ROOT = yes } #León
					793 = { is_claim_or_core_of_ROOT = yes } #Asturias
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				174 = { #León
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:174.owner = { save_event_target_as = spain_leon }
		}
		if = {
			limit = {
				793 = { #Asturias
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:spain_leon }
					}
				}
			}
			var:793.owner = { save_event_target_as = spain_asturias }
		}
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1085 option annex.1085.a"
		name = annex.1085.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = GLC }
		release_targeted_tag = yes
	}

	option = { #give to Spanish owner of León
		log = "[GetLogInfo]: event annex.1085 option annex.1085.b"
		name = annex.1085.b
		trigger = {
			has_event_target = spain_leon
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:spain_leon }
				OR = {
					is_ally_with = event_target:spain_asturias
					is_ally_with = event_target:portugal
				}
			}
			modifier = {
				factor = 0.1
				event_target:spain_leon = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain_leon }
		GLC = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #give to Spanish owner of Asturias
		log = "[GetLogInfo]: event annex.1085 option annex.1085.c"
		name = annex.1085.c
		trigger = {
			has_event_target = spain_asturias
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:spain_asturias }
				OR = {
					is_ally_with = event_target:spain_leon
					is_ally_with = event_target:portugal
				}
			}
			modifier = {
				factor = 0.1
				event_target:spain_asturias = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain_asturias }
		GLC = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1085 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		GLC = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1085 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		GLC = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1085 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Gibraltar
	id = annex.1086
	title = annexation_118
	desc = annexation_118_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					169 = { is_claim_or_core_of_ROOT = yes } #Seville
					173 = { is_claim_or_core_of_ROOT = yes } #Málaga
					annexations_britain_can_annex_overseas = yes
					annexations_AI_wants_to_own_gibraltar = yes
				}
			}
			save_event_target_as = can_annex
		}
		else_if = {
			limit = { annexations_major_can_annex_strategic_territories = yes }
			save_event_target_as = can_annex
			save_event_target_as = AI_dont_annex
		}
		annexations_create_non_socialist_britain_event_target = yes
		if = {
			limit = {
				169 = { #Seville
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:britain }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:169.owner = { save_event_target_as = spain_seville }
		}
		if = {
			limit = {
				173 = { #Málaga
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:britain }
						NOT = { tag = event_target:spain_seville }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:173.owner = { save_event_target_as = spain_malaga }
		}
	}

	option = { #Give to Spanish owner of Seville
		log = "[GetLogInfo]: event annex.1086 option annex.1086.a"
		name = annex.1086.a
		trigger = {
			has_event_target = spain_seville
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:spain_seville }
				is_ally_with = event_target:spain_malaga
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:spain_seville }
				has_event_target = britain
				annexations_AI_will_consider_returning_colonies = yes
			}
			modifier = {
				factor = 2
				NOT = { has_event_target = spain_malaga }
			}
			modifier = {
				factor = 0.1
				event_target:spain_seville = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain_seville }
		118 = { transfer_state_and_notify = yes } #Gibraltar
	}

	option = { #Give to Spanish owner of Málaga
		log = "[GetLogInfo]: event annex.1086 option annex.1086.b"
		name = annex.1086.b
		trigger = {
			has_event_target = spain_malaga
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:spain_malaga }
				is_ally_with = event_target:spain_seville
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:spain_malaga }
				has_event_target = britain
				annexations_AI_will_consider_returning_colonies = yes
			}
			modifier = {
				factor = 2
				NOT = { has_event_target = spain_seville }
			}
			modifier = {
				factor = 0.1
				event_target:spain_malaga = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain_malaga }
		118 = { transfer_state_and_notify = yes } #Gibraltar
	}

	option = { #Give to Britain
		log = "[GetLogInfo]: event annex.1086 option annex.give_to_britain"
		name = annex.give_to_britain
		trigger = {
			has_event_target = britain
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_will_consider_returning_colonies = no
			}
			modifier = {
				factor = 0
				event_target:britain = { annexations_AI_dont_give_to_non_puppet_if_major = yes }
			}
			modifier = {
				factor = 0.1
				event_target:britain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:britain }
		118 = { transfer_state_and_notify = yes } #Gibraltar
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1086 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		118 = { transfer_state_and_notify = yes } #Gibraltar
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1086 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		118 = { add_claim_of_ROOT = yes } #Gibraltar
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1086 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Euskadi
	id = annex.1087
	title = annexation_1070
	desc = annexation_1070_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		779 = { retain_state = yes } #Labourd
		if = {
			limit = {
				OR = {
					166 = { is_claim_or_core_of_ROOT = yes } #Upper Aragon
					176 = { is_claim_or_core_of_ROOT = yes } #Burgos
					1081 = { is_claim_or_core_of_ROOT = yes } #Valladolid
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				176 = { #Burgos
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:176.owner = { save_event_target_as = spain }
		}
	}

	option = { #puppet BAS
		log = "[GetLogInfo]: event annex.1087 option annex.1087.a"
		name = annex.1087.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = BAS }
		release_targeted_tag = yes
	}

	option = { #split with Spain
		log = "[GetLogInfo]: event annex.1087 option annex.1087.b"
		name = annex.1087.b
		trigger = {
			has_event_target = spain
			172 = { is_valid_annexation_state = yes } #Navarre
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SPA }
		172 = { transfer_state_and_notify = yes } #Navarre
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = BAS }
		release_targeted_tag = yes
	}

	option = { #give to Spain
		log = "[GetLogInfo]: event annex.1087 option annex.give_to_spain"
		name = annex.give_to_spain
		trigger = {
			has_event_target = spain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.1
				event_target:spain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = SPA }
		BAS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1087 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		BAS = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1087 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		BAS = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1087 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Catalonia
	id = annex.1088
	title = annexation_165
	desc = annexation_165_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		817 = { retain_state = yes } #Roussillon
		if = {
			limit = { 940 = { is_claim_or_core_of_ROOT = yes } } #Lower Aragon
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				940 = { #Lower Aragon
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:940.owner = { save_event_target_as = spain }
		}
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1088 option annex.1088.a"
		name = annex.1088.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = CAT }
		release_targeted_tag = yes
	}

	option = { #split with Spain
		log = "[GetLogInfo]: event annex.1088 option annex.1088.b"
		name = annex.1088.b
		trigger = {
			has_event_target = spain
			OR = {
				167 = { is_valid_annexation_state = yes } #Valencia
				177 = { is_valid_annexation_state = yes } #Balearic Islands
			}
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:spain }
		167 = { transfer_if_owned = yes } #Valencia
		177 = { transfer_if_owned = yes } #Balearic Islands
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = CAT }
		release_targeted_tag = yes
	}

	option = { #give to Spain
		log = "[GetLogInfo]: event annex.1088 option annex.give_to_spain"
		name = annex.give_to_spain
		trigger = {
			has_event_target = spain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.1
				event_target:spain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = SPA }
		CAT = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1088 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		CAT = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1088 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		CAT = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1088 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Portugal
	id = annex.1089
	title = annexation_112
	desc = annexation_112_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = POR } }
				every_state = {
					if = {
						limit = { is_portugal = no }
						remove_core_of = POR
					}
					else = {
						add_core_of = POR
					}
					remove_claim_by = POR
				}
				POR = { POR_remove_monarchy = yes }
			}
			if = {
				limit = {
					original_tag = SPA
					has_socialist_government = yes
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					SPA = {
						ROOT_can_grant_land = yes
						OR = {
							is_subject = no
							has_socialist_government = yes
						}
					}
				}
				SPA = { save_event_target_as = spain }
			}
		}
	}

	option = { #Liberate a republican Portugal
		log = "[GetLogInfo]: event annex.1089 option annex.1089.a"
		name = annex.1089.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { country_exists = POR }
				OR = {
					is_monarchy = yes
					is_german_tag = yes
				}
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:spain
				OR = {
					is_major = no
					has_socialist_government = yes
				}
			}
		}
		if = {
			limit = { country_exists = POR }
			custom_effect_tooltip = POR_puppet_tooltip
			hidden_effect = {
				create_dynamic_country = {
					original_tag = POR
					create_country_leader = {
						name = POR_jose_carlos_rates
						desc = POR_jose_carlos_rates_leader_desc
						picture = GFX_portrait_POR_jose_carlos_rates_civilian_large
						ideology = totalist_subtype
					}
					create_country_leader = {
						name = POR_manuel_joaquim_sousa
						desc = POR_manuel_joaquim_sousa_leader_desc
						picture = GFX_Portrait_Europe_Generic_new_3
						ideology = syndicalist_subtype
					}
					create_country_leader = {
						name = POR_bento_antonio_goncalves
						desc = POR_bento_antonio_goncalves_leader_desc
						picture = GFX_portrait_POR_bento_antonio_goncalves_civilian_large
						ideology = radical_socialist_subtype
					}
					create_country_leader = {
						name = POR_jose_domingues_dos_santos
						desc = POR_jose_domingues_dos_santos_leader_desc
						picture = GFX_portrait_POR_jose_domingues_dos_santos_civilian_large
						ideology = social_democrat_subtype
					}
					create_country_leader = {
						name = POR_liberato_damiao_ribeiro_pinto
						desc = POR_liberato_damiao_ribeiro_pinto_leader_desc
						picture = GFX_portrait_POR_liberato_damiao_ribeiro_pinto_civilian_large
						ideology = social_liberal_subtype
					}
					create_country_leader = {
						name = POR_antonio_joaquim_granjo
						desc = POR_antonio_joaquim_granjo_leader_desc
						picture = GFX_portrait_POR_antonio_joaquim_granjo_civilian_large
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = POR_francisco_pinto_da_cunha_leal
						desc = POR_francisco_pinto_da_cunha_leal_leader_desc
						picture = GFX_portrait_POR_francisco_pinto_da_cunha_leal_civilian_large
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = POR_antonio_de_oliveira_salazar
						desc = POR_antonio_de_oliveira_salazar_leader_desc
						picture = GFX_portrait_POR_antonio_de_oliveira_salazar_civilian_large
						ideology = authoritarian_democrat_subtype
					}
					create_country_leader = {
						name = POR_antonio_oscar_de_fragoso_carmona
						desc = POR_antonio_oscar_de_fragoso_carmona_leader_desc
						picture = GFX_portrait_POR_antonio_oscar_de_fragoso_carmona_army_large
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = POR_francisco_de_barcelos_rolao_preto
						desc = POR_francisco_de_barcelos_rolao_preto_leader_desc
						picture = GFX_portrait_POR_francisco_de_barcelos_rolao_preto_civilian_large
						ideology = national_populist_subtype
					}
					set_temp_variable = { tag_to_release = THIS }
				}
				release_targeted_tag = yes
			}
		}
		else = {
			set_temp_variable = { tag_to_release = POR }
			release_targeted_tag = yes
		}
	}

	option = { #Restore the Portuguese monarchy
		log = "[GetLogInfo]: event annex.1089 option annex.1089.b"
		name = annex.1089.b
		trigger = {
			is_subject = no
			NOT = { country_exists = POR }
			has_socialist_government = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_monarchy = no
				is_german_tag = no
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:spain
				is_major = no
			}
		}
		set_temp_variable = { tag_to_release = POR }
		release_targeted_tag = yes
		var:tag_to_release = { POR_monarchy_setup = yes }
	}

	option = { #give to Spain
		log = "[GetLogInfo]: event annex.1089 option annex.give_to_spain"
		name = annex.give_to_spain
		trigger = {
			has_event_target = spain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_major = yes
				has_socialist_government = no
				NOT = { is_ally_with = event_target:spain }
			}
			modifier = {
				factor = 0.1
				event_target:spain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain }
		POR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1089 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		POR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1089 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		POR = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1089 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Corsica
	id = annex.1091
	title = annexation_1
	desc = annexation_1_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					21 = { is_claim_or_core_of_ROOT = yes } #Provence
					22 = { is_claim_or_core_of_ROOT = yes } #Languedoc
					original_tag = NFA
					838 = { is_claim_or_core_of_ROOT = yes } #Liguria
					162 = { is_claim_or_core_of_ROOT = yes } #Tuscany
					2 = { is_claim_or_core_of_ROOT = yes } #Latium
					117 = { is_claim_or_core_of_ROOT = yes } #Campania
					114 = { is_claim_or_core_of_ROOT = yes } #Sardinia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				21 = { #Provence
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:21.owner = { save_event_target_as = france }
		}
		else_if = {
			limit = {
				22 = { #Languedoc
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:22.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				NFA = {
					NOT = { tag = event_target:france }
					ROOT_can_grant_land = yes
				}
			}
			NFA = { save_event_target_as = france_exile }
		}
		if = {
			limit = {
				838 = { #Liguria
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:158.owner = { save_event_target_as = italy_piedmont }
		}
		if = {
			limit = {
				162 = { #Tuscany
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:italy_piedmont }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:162.owner = { save_event_target_as = italy_tuscany }
		}
		if = {
			limit = {
				2 = { #Latium
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:italy_piedmont }
						NOT = { tag = event_target:italy_tuscany }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:2.owner = { save_event_target_as = italy_latium }
		}
		if = {
			limit = {
				117 = { #Campania
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:italy_piedmont }
						NOT = { tag = event_target:italy_tuscany }
						NOT = { tag = event_target:italy_latium }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:117.owner = { save_event_target_as = italy_campania }
		}
		if = {
			limit = {
				114 = { #Sardinia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:italy_piedmont }
						NOT = { tag = event_target:italy_tuscany }
						NOT = { tag = event_target:italy_latium }
						NOT = { tag = event_target:italy_campania }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:114.owner = { save_event_target_as = italy_sardinia }
		}
		if = {
			limit = {
				OR = {
					is_ally_with = event_target:france
					is_ally_with = event_target:france_exile
				}
			}
			save_event_target_as = has_french_ally
		}
		if = {
			limit = {
				OR = {
					is_ally_with = event_target:italy_piedmont
					is_ally_with = event_target:italy_tuscany
					is_ally_with = event_target:italy_latium
					is_ally_with = event_target:italy_campania
					is_ally_with = event_target:italy_sardinia
				}
			}
			save_event_target_as = has_italian_ally
		}
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1091 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Give it to NFA
		log = "[GetLogInfo]: event annex.1091 option annex.1091.b"
		name = annex.1091.b
		trigger = {
			has_event_target = france_exile
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france_exile }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france_exile }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0.1
				event_target:france_exile = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france_exile }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Give it to Italian tag 1 (owner of Piedmont)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.c"
		name = annex.1091.c
		trigger = {
			has_event_target = italy_piedmont
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_piedmont }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_piedmont }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0.1
				event_target:italy_piedmont = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_piedmont }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Give it to Italian tag 2 (owner of Tuscany)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.d"
		name = annex.1091.d
		trigger = {
			has_event_target = italy_tuscany
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_tuscany }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_tuscany }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0.1
				event_target:italy_tuscany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_tuscany }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Give it to Italian tag 3 (owner of Rome)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.e"
		name = annex.1091.e
		trigger = {
			has_event_target = italy_latium
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_latium }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_latium }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0.1
				event_target:italy_latium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_latium }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Give it to Italian tag 4 (owner of Campania)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.f"
		name = annex.1091.f
		trigger = {
			has_event_target = italy_campania
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_campania }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_campania }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0.1
				event_target:italy_campania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_campania }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Give it to Italian tag 5 (owner of Sardinia)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.g"
		name = annex.1091.g
		trigger = {
			has_event_target = italy_sardinia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_sardinia }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_sardinia }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0.1
				event_target:italy_sardinia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_sardinia }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1091 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1 = { transfer_state_and_notify = yes } #Corsica
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1091 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		1 = { add_claim_of_ROOT = yes } #Corsica
		if = {
			limit = { is_french_tag = yes }
			hidden_effect = { 1 = { enable_state_integration_50_compliance = yes } }
		}
		else_if = {
			limit = { is_italian_tag = yes }
			hidden_effect = { 1 = { enable_state_integration_80_compliance = yes } }
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1091 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Aosta Valley
	id = annex.1093
	title = annexation_1003
	desc = annexation_1003_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					158 = { is_claim_or_core_of_ROOT = yes } #Piedmont
					735 = { is_claim_or_core_of_ROOT = yes } #Savoy
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = { is_italian_tag = no }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				158 = { #Piedmont
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:158.owner = { save_event_target_as = italy }
		}
		if = {
			limit = {
				763 = { #Alpes
					annexations_state_owner_is_valid_grant_target = yes
					735 = { annexations_required_state_is_owned_by_either_side = yes } #Savoy
					owner = {
						NOT = { tag = event_target:italy }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:763.owner = { save_event_target_as = france }
		}
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1093 option annex.give_to_italy_single"
		name = annex.give_to_italy_single
		trigger = {
			has_event_target = italy
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_italian_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:italy = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		1003 = { transfer_state_and_notify = yes } #Aosta Valley
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1093 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:france }
		1003 = { transfer_state_and_notify = yes } #Aosta Valley
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1093 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1003 = { transfer_state_and_notify = yes } #Aosta Valley
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1093 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_italian_tag = no
				NOT = { original_tag = NFA }
			}
		}
		1003 = { add_claim_of_ROOT = yes } #Aosta Valley
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1093 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Piedmont
	id = annex.1094
	title = annexation_158
	desc = annexation_158_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					OR = {
						original_tag = SRD
						AND = {
							is_italian_unifier_tag = yes
							NOT = { has_country_flag = SIC_confed }
						}
					}
				}
				save_event_target_as = can_annex
			}
			set_temp_variable = { exclude = SRD }
			annexations_create_italian_event_targets = yes
			if = {
				limit = {
					838 = { is_valid_annexation_state = yes } #Liguria
					SRD = { ROOT_can_grant_land = yes }
				}
				SRD = { save_event_target_as = sardinia }
			}
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
			1003 = { retain_state = yes } #Aosta Valley
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1094 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1094 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1094 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1094 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as SRD
		log = "[GetLogInfo]: event annex.1094 option annex.1094.a"
		name = annex.1094.a
		trigger = {
			NOT = { country_exists = SRD }
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SRD }
		114 = { remove_claim_and_add_core_of_target = yes } #Sardinia
		158 = { remove_claim_and_add_core_of_target = yes } #Piedmont
		838 = { remove_claim_and_add_core_of_target = yes } #Liguria
		1003 = { remove_claim_and_add_core_of_target = yes } #Aosta Valley
		release_targeted_tag = yes
		var:tag_to_release = {
			if = {
				limit = { NOT = { has_cosmetic_tag = SRD_piedmont } }
				set_cosmetic_tag = SRD_piedmont
			}
		}
	}

	option = { #Give to SRD
		log = "[GetLogInfo]: event annex.1094 option annex.1094.b"
		name = annex.1094.b
		trigger = {
			has_event_target = sardinia
			OR = {
				NOT = { has_country_flag = SIC_confed }
				SRD = { is_subject = yes }
				SRD = { has_country_flag = ITA_refuse_join_@ROOT }
			}
		}
		set_temp_variable = { tag_to_release = event_target:sardinia }
		158 = { transfer_if_owned = yes } #Piedmont
		838 = { transfer_if_owned = yes } #Liguria
		1003 = { transfer_if_owned = yes } #Aosta Valley
	}

	option = { #Offer to SRD
		log = "[GetLogInfo]: event annex.1094 option annex.1094.c"
		name = annex.1094.c
		trigger = {
			has_event_target = sardinia
			NOT = { has_country_flag = SIC_confed }
			annexations_can_make_alliance_offer = yes
			event_target:sardinia = {
				annexations_is_valid_target_for_alliance_offer = yes
				if = {
					limit = { is_italian_unifier_tag = yes }
					NOT = { has_country_flag = offered_italy_@ROOT }
				}
				else = {
					NOT = { has_country_flag = offered_piedmont_@ROOT }
				}
			}
		}
		if = {
			limit = { event_target:sardinia = { is_italian_unifier_tag = yes } }
			ITA = { save_to_offered_states = yes }
			SRI = { save_to_offered_states = yes }
			SIC = { save_to_offered_states = yes }
			SRD = { save_to_offered_states = yes }
			PAP = { save_to_offered_states = yes }
			VNC = { save_to_offered_states = yes }
			EMI = { save_to_offered_states = yes }
			TUS = { save_to_offered_states = yes }
			LOM = { save_to_offered_states = yes }
			event_target:sardinia = {
				set_country_flag = offered_italy_@ROOT
				offer_states_to_target = yes
			}
		}
		else = {
			158 = { save_to_offered_states = yes } #Piedmont
			838 = { save_to_offered_states = yes } #Liguria
			1003 = { save_to_offered_states = yes } #Aosta Valley
			event_target:sardinia = {
				set_country_flag = offered_piedmont_@ROOT
				offer_states_to_target = yes
			}
		}
	}

	option = { #Italian Confederation: Make a deal with to SRD
		log = "[GetLogInfo]: event annex.1094 option SIC_offer_piedmont_to_SRD"
		name = SIC_offer_piedmont_to_SRD
		trigger = {
			has_country_flag = SIC_confed
			has_event_target = sardinia
			event_target:sardinia = {
				is_subject = no
				NOT = { has_country_flag = ITA_refuse_join_@ROOT }
			}
		}
		event_target:sardinia = { country_event = sic.100 }
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1094 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1094 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1094 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		158 = { transfer_if_owned = yes } #Piedmont
		838 = { transfer_if_owned = yes } #Liguria
		1003 = { transfer_if_owned = yes } #Aosta Valley
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1094 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		158 = { add_claim_of_ROOT = yes } #Piedmont
		838 = { add_claim_of_ROOT = yes } #Liguria
		1003 = { add_claim_of_ROOT = yes } #Aosta Valley
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1094 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Lombardy
	id = annex.1095
	title = annexation_159
	desc = annexation_159_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					is_italian_unifier_tag = yes
					NOT = { has_country_flag = SIC_confed }
				}
				save_event_target_as = can_annex
			}
			annexations_create_italian_event_targets = yes
			if = {
				limit = {
					tag = AUS
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
						NOT = { tag = event_target:italy }
						NOT = { is_in_array = { PREV.valid_italian_targets_offer = THIS } }
						ROOT_can_grant_land = yes
					}
				}
				VNC = { save_event_target_as = venice }
			}
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1095 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1095 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1095 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1095 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as LOM duchy
		log = "[GetLogInfo]: event annex.1095 option annex.1095.a"
		name = annex.1095.a
		trigger = {
			annexations_can_release_italian_splinters = yes
			NOT = { has_event_target = venice }
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = LOM }
		159 = { remove_claim_and_add_core_of_target = yes } #Lombardy
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = { LOM_create_marcello_visconti = yes }
			ITA = {
				every_character = {
					limit = { has_character_flag = ITA_lombard_leader }
					set_nationality = var:tag_to_release
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
		}
	}

	option = { #Release as LOM republic
		log = "[GetLogInfo]: event annex.1095 option annex.1095.b"
		name = annex.1095.b
		trigger = {
			annexations_can_release_italian_splinters = yes
			NOT = { has_event_target = venice }
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = LOM }
		159 = { remove_claim_and_add_core_of_target = yes } #Lombardy
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				if = {
					limit = { has_government = authoritarian_democrat }
					set_politics = {
						ruling_party = social_liberal
						elections_allowed = no
					}
					set_political_party = { ideology = social_liberal popularity = 60 }
				}
			}
			ITA = {
				every_character = {
					limit = { has_character_flag = ITA_lombard_leader }
					set_nationality = var:tag_to_release
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
				ITA_marcello_visconti_di_modrone = {
					set_nationality = var:tag_to_release
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = {
							desc = ITA_marcello_visconti_di_modrone_leader_desc
							ideology = authoritarian_democrat_subtype
						}
						promote_leader = yes
					}
				}
			}
		}
	}

	option = { #Give to VNC
		log = "[GetLogInfo]: event annex.1095 option annex.1095.c"
		name = annex.1095.c
		trigger = {
			has_event_target = venice
		}
		set_temp_variable = { tag_to_release = event_target:venice }
		159 = { transfer_state_and_notify = yes } #Lombardy
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1095 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1095 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1095 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		159 = { transfer_state_and_notify = yes } #Lombardy
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1095 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		159 = { add_claim_of_ROOT = yes } #Lombardy
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1095 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Venice
	id = annex.1096
	title = annexation_160
	desc = annexation_160_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					is_italian_unifier_tag = yes
					NOT = { has_country_flag = SIC_confed }
				}
				save_event_target_as = can_annex
			}
			annexations_create_italian_event_targets = yes
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1096 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1096 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1096 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1096 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as VNC
		log = "[GetLogInfo]: event annex.1096 option annex.1096.a"
		name = annex.1096.a
		trigger = {
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = VNC }
		160 = { remove_claim_and_add_core_of_target = yes } #Venetia
		759 = { remove_claim_and_add_core_of_target = yes } #Friuli
		release_targeted_tag = yes
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1096 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1096 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1096 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		160 = { transfer_if_owned = yes } #Venetia
		759 = { transfer_if_owned = yes } #Friuli
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1096 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		160 = { add_claim_of_ROOT = yes } #Venetia
		759 = { add_claim_of_ROOT = yes } #Friuli
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1096 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Emilia
	id = annex.1097
	title = annexation_1004
	desc = annexation_1004_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					is_italian_unifier_tag = yes
					NOT = { has_country_flag = SIC_confed }
				}
				save_event_target_as = can_annex
			}
			annexations_create_italian_event_targets = yes
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1097 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1097 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1097 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1097 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as republic
		log = "[GetLogInfo]: event annex.1097 option annex.1097.a"
		name = annex.1097.a
		trigger = {
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = EMI }
		1004 = { remove_claim_and_add_core_of_target = yes } #Emilia
		release_targeted_tag = yes
		hidden_effect = { EMI_move_relevant_characters = yes }
	}

	option = { #Release as duchy
		log = "[GetLogInfo]: event annex.1097 option annex.1097.b"
		name = annex.1097.b
		trigger = {
			OR = {
				AUS_is_led_by_habsburgs = yes
				original_tag = GER
				original_tag = SRD
			}
			is_monarchy = yes
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = EMI }
		1004 = { remove_claim_and_add_core_of_target = yes } #Emilia
		release_targeted_tag = yes
		hidden_effect = { EMI_move_relevant_characters = yes }
		var:tag_to_release = { EMI_create_roberto = yes }
	}

	option = { #Release as Parma
		log = "[GetLogInfo]: event annex.1097 option annex.1097.c"
		name = annex.1097.c
		trigger = {
			OR = {
				original_tag = SPA
				original_tag = SIC
				original_tag = NFA
			}
			is_monarchy = yes
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = EMI }
		1004 = { remove_claim_and_add_core_of_target = yes } #Emilia
		release_targeted_tag = yes
		hidden_effect = { EMI_move_relevant_characters = yes }
		var:tag_to_release = { EMI_create_elia = yes }
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1097 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1097 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1097 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1004 = { transfer_if_owned = yes } #Emilia
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1097 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		1004 = { add_claim_of_ROOT = yes } #Emilia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1097 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Tuscany
	id = annex.1098
	title = annexation_162
	desc = annexation_162_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					is_italian_unifier_tag = yes
					NOT = { has_country_flag = SIC_confed }
				}
				save_event_target_as = can_annex
			}
			annexations_create_italian_event_targets = yes
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1098 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1098 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1098 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1098 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as TUS grand duchy
		log = "[GetLogInfo]: event annex.1098 option annex.1098.a"
		name = annex.1098.a
		trigger = {
			annexations_can_release_italian_splinters = yes
			ITA = {
				ITA_pietro_ferdinando = {
					OR = {
						is_country_leader = no
						is_retired = yes
					}
				}
			}
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = TUS }
		162 = { remove_claim_and_add_core_of_target = yes } #Tuscany
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				set_cosmetic_tag = TUS_monarchy
				TUS_create_pietro_ferdinando = yes
			}
		}
	}

	option = { #Release as TUS republic
		log = "[GetLogInfo]: event annex.1098 option annex.1098.b"
		name = annex.1098.b
		trigger = {
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = TUS }
		162 = { remove_claim_and_add_core_of_target = yes } #Tuscany
		release_targeted_tag = yes
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1098 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1098 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1098 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		162 = { transfer_if_owned = yes } #Tuscany
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1098 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		162 = { add_claim_of_ROOT = yes } #Tuscany
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1098 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Central Italy
	id = annex.1099
	title = annexation_161
	desc = annexation_161_desc
	picture = GFX_report_event_generic_conference2

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					OR = {
						original_tag = PAP
						AND = {
							is_italian_unifier_tag = yes
							NOT = { has_country_flag = SIC_confed }
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = { PAP = { ROOT_can_grant_land = yes } }
				if = {
					limit = {
						annexations_can_make_alliance_offer = yes
						PAP = {
							annexations_is_valid_target_for_alliance_offer = yes
							NOT = { has_country_flag = offered_papacy_@ROOT }
						}
						count_triggers = {
							amount = 3
							157 = { is_valid_annexation_state = yes } #Marches
							161 = { is_valid_annexation_state = yes } #Romagna
							764 = { is_valid_annexation_state = yes } #Viterbo
							1005 = { is_valid_annexation_state = yes } #Umbria
						}
					}
					PAP = { save_event_target_as = can_offer_lands_to_pope }
				}
				PAP = { save_event_target_as = papal_states }
			}
			set_temp_variable = { exclude = PAP }
			annexations_create_italian_event_targets = yes
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	is_triggered_only = yes

	option = { #Offer to PAP
		log = "[GetLogInfo]: event annex.1099 option annex.1099.a"
		name = annex.1099.a
		trigger = {
			has_event_target = can_offer_lands_to_pope
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0 #give to ally Italy instead
				is_ally_with = event_target:italy
			}
			modifier = {
				factor = 0 #offer to Italy instead
				check_variable = { valid_italian_targets_offer^num > 0 }
			}
			modifier = {
				factor = 0 #don't get pulled into random wars
				event_target:can_offer_lands_to_pope = { annexations_AI_dont_offer_if_target_involved_in_separate_major_war = yes }
			}
		}
		set_temp_variable = { tag_to_release = PAP }
		157 = { save_to_offered_states = yes } #Marches
		161 = { save_to_offered_states = yes } #Romagna
		764 = { save_to_offered_states = yes } #Viterbo
		1005 = { save_to_offered_states = yes } #Umbria
		var:tag_to_release = {
			set_country_flag = offered_papacy_@ROOT
			offer_states_to_target = yes
		}
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1099 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to PAP
		log = "[GetLogInfo]: event annex.1099 option annex.1099.b"
		name = annex.1099.b
		trigger = {
			has_event_target = papal_states
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0 #offer alliance instead
				has_event_target = can_offer_lands_to_pope
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:papal_states }
				is_ally_with = event_target:italy
			}
		}
		set_temp_variable = { tag_to_release = PAP }
		157 = { transfer_if_owned = yes } #Marches
		161 = { transfer_if_owned = yes } #Romagna
		764 = { transfer_if_owned = yes } #Viterbo
		1005 = { transfer_if_owned = yes } #Umbria
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1099 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0 #offer alliance instead
				check_variable = { valid_italian_targets_offer^num > 0 }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy }
				OR = {
					has_event_target = can_offer_lands_to_pope
					is_ally_with = event_target:papal_states
				}
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1099 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		157 = { transfer_if_owned = yes } #Marches
		161 = { transfer_if_owned = yes } #Romagna
		764 = { transfer_if_owned = yes } #Viterbo
		1005 = { transfer_if_owned = yes } #Umbria
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1099 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		157 = { add_claim_of_ROOT = yes } #Marches
		161 = { add_claim_of_ROOT = yes } #Romagna
		764 = { add_claim_of_ROOT = yes } #Viterbo
		1005 = { add_claim_of_ROOT = yes } #Umbria
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1099 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Rome
	id = annex.1100
	title = annexation_2
	desc = annexation_2_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					is_italian_unifier_tag = yes
					NOT = { has_country_flag = SIC_confed }
				}
				save_event_target_as = can_annex
			}
			annexations_create_italian_event_targets = yes
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1100 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1100 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1100 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1100 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as PAP
		log = "[GetLogInfo]: event annex.1100 option annex.1100.a"
		name = annex.1100.a
		trigger = {
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = PAP }
		2 = { remove_claim_and_add_core_of_target = yes } #Latium
		764 = { remove_claim_and_add_core_of_target = yes } #Viterbo
		if = {
			limit = { has_country_flag = SIC_confed }
			157 = { remove_claim_and_add_core_of_target = yes } #Marches
			161 = { remove_claim_and_add_core_of_target = yes } #Romagna
			1005 = { remove_claim_and_add_core_of_target = yes } #Umbria
		}
		else = {
			157 = { retain_state = yes } #Marches
			161 = { retain_state = yes } #Romagna
			1005 = { retain_state = yes } #Umbria
		}
		release_targeted_tag = yes
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1100 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1100 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1100 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		2 = { transfer_if_owned = yes } #Latium
		764 = { transfer_if_owned = yes } #Viterbo
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1100 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		2 = { add_claim_of_ROOT = yes } #Latium
		764 = { add_claim_of_ROOT = yes } #Viterbo
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1100 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Southern Italy
	id = annex.1101
	title = annexation_117
	desc = annexation_117_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					is_italian_unifier_tag = yes
					NOT = { has_country_flag = SIC_confed }
				}
				save_event_target_as = can_annex
			}
			annexations_create_italian_event_targets = yes
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1101 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1101 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1101 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1101 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as SIC
		log = "[GetLogInfo]: event annex.1101 option annex.1101.a"
		name = annex.1101.a
		trigger = {
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SIC }
		every_state = {
			limit = { is_southern_italy = yes }
			add_core_of = var:tag_to_release
			hidden_effect = { remove_claim_by = var:tag_to_release }
		}
		release_targeted_tag = yes
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1101 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1101 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1101 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_southern_italy = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1101 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_state = {
			limit = { is_southern_italy = yes }
			add_claim_of_ROOT = yes
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1101 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Sardinia
	id = annex.1102
	title = annexation_114
	desc = annexation_114_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			annexations_reset_italian_tags = yes
			if = {
				limit = {
					is_italian_unifier_tag = yes
					NOT = { has_country_flag = SIC_confed }
				}
				save_event_target_as = can_annex
			}
			annexations_create_italian_event_targets = yes
			every_owned_state = {
				limit = { is_italian_irredentist_claim = yes }
				retain_state = yes #just in case
			}
		}
	}

	option = { #Release as republican ITA
		log = "[GetLogInfo]: event annex.1102 option annex.europe.release_italy_republic"
		name = annex.europe.release_italy_republic
		trigger = {
			annexations_can_release_italian_republic = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		annexations_release_italy = yes
	}

	option = { #Release as federation ITA
		log = "[GetLogInfo]: event annex.1102 option annex.europe.release_italy_federation"
		name = annex.europe.release_italy_federation
		trigger = {
			annexations_can_release_italian_federation = yes
		}
		set_temp_variable = { tag_to_release = ITA }
		set_temp_variable = { ITA_release_as_federation = 1 }
		annexations_release_italy = yes
	}

	option = { #Release as SRI
		log = "[GetLogInfo]: event annex.1102 option annex.europe.release_italy_socialist"
		name = annex.europe.release_italy_socialist
		trigger = {
			annexations_can_release_socialist_italy = yes
		}
		set_temp_variable = { tag_to_release = SRI }
		annexations_release_italy = yes
	}

	option = { #Release as kingdom SRD
		log = "[GetLogInfo]: event annex.1102 option annex.europe.release_italy_kingdom"
		name = annex.europe.release_italy_kingdom
		trigger = {
			annexations_can_release_kingdom_of_italy = yes
		}
		set_temp_variable = { tag_to_release = SRD }
		annexations_release_italy = yes
	}

	option = { #Release as SRD
		log = "[GetLogInfo]: event annex.1102 option annex.1102.a"
		name = annex.1102.a
		trigger = {
			NOT = { country_exists = SRD }
			annexations_can_release_italian_splinters = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SRD }
		114 = { remove_claim_and_add_core_of_target = yes } #Sardinia
		release_targeted_tag = yes
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1102 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		annexations_give_italy_to_target = yes
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1102 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		annexations_offer_italy_to_target = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1102 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		114 = { transfer_state_and_notify = yes } #Sardinia
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1102 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		114 = { add_claim_of_ROOT = yes } #Sardinia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1102 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Malta
	id = annex.1103
	title = annexation_116
	desc = annexation_116_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					OR = {
						is_italian_unifier_tag = yes
						115 = { is_claim_or_core_of_ROOT = yes } #Sicily
						annexations_britain_can_annex_overseas = yes
						annexations_AI_wants_to_own_malta = yes
					}
				}
				save_event_target_as = can_annex
			}
			else_if = {
				limit = { annexations_major_can_annex_strategic_territories = yes }
				save_event_target_as = can_annex
				save_event_target_as = AI_dont_annex
			}
			annexations_create_britain_event_target = yes
			annexations_create_italian_event_targets = yes
			if = {
				limit = {
					NOT = { has_event_target = italy }
					115 = { #Sicily
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:britain }
							NOT = { is_in_array = { valid_italian_targets_grant = THIS } }
							NOT = { is_in_array = { valid_italian_targets_offer = THIS } }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:115.owner = { save_event_target_as = italy }
			}
		}
	}

	option = { #puppet Malta
		log = "[GetLogInfo]: event annex.1103 option annex.1103.a"
		name = annex.1103.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = MLT }
		release_targeted_tag = yes
	}

	option = { #Give to Britain
		log = "[GetLogInfo]: event annex.1103 option annex.give_to_britain"
		name = annex.give_to_britain
		trigger = {
			has_event_target = britain
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_will_consider_returning_colonies = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:britain }
				OR = {
					is_ally_with = event_target:italy
					check_variable = { valid_italian_targets_offer^num > 0 }
				}
			}
			modifier = {
				factor = 0
				event_target:britain = { has_socialist_government = yes }
			}
			modifier = {
				factor = 0.1
				event_target:britain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:britain }
		116 = { transfer_state_and_notify = yes } #Malta
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1103 option annex.give_to_italy"
		name = annex.give_to_italy
		trigger = {
			OR = {
				has_event_target = italy
				check_variable = { valid_italian_targets_grant^num > 0 }
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				check_variable = { valid_italian_targets_offer^num > 0 }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy }
				is_ally_with = event_target:britain
			}
			modifier = {
				factor = 0.1
				has_event_target = italy
				event_target:italy = { is_subject = yes }
			}
		}
		if = {
			limit = { has_event_target = italy }
			set_temp_variable = { tag_to_release = event_target:italy }
			116 = { transfer_state_and_notify = yes } #Malta
		}
		else = {
			116 = { save_to_offered_states = yes } #Malta
			country_event = annex.200
		}
	}

	option = { #Offer to Italy
		log = "[GetLogInfo]: event annex.1103 option annex.europe.offer_to_italy"
		name = annex.europe.offer_to_italy
		trigger = {
			check_variable = { valid_italian_targets_offer^num > 0 }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
		}
		116 = { save_to_offered_states = yes } #Malta
		if = {
			limit = { check_variable = { valid_italian_targets_offer^num > 1 } }
			country_event = annex.201
		}
		else = {
			var:valid_italian_targets_offer^0 = {
				set_country_flag = offered_italy_@ROOT
				offer_states_to_target = yes
			}
			clear_array = valid_italian_targets_offer
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1103 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		116 = { transfer_state_and_notify = yes } #Malta
	}

	option = { #Annex
		log = "[GetLogInfo]: event annex.1103 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		116 = { add_claim_of_ROOT = yes } #Malta
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1103 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Verviers
	id = annex.1104
	title = annexation_741
	desc = annexation_741_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					948 = { is_claim_or_core_of_ROOT = yes } #Liège
					781 = { is_claim_or_core_of_ROOT = yes } #Western Rhineland
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				948 = { #Liège
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:948.owner = { save_event_target_as = belgium }
		}
		if = {
			limit = {
				781 = { #Western Rhineland
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:belgium }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:781.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give it to Belgium/Wallonia/France
		log = "[GetLogInfo]: event annex.1104 option annex.give_to_belgium"
		name = annex.give_to_belgium
		trigger = {
			has_event_target = belgium
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:germany
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:germany = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:belgium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		741 = { transfer_state_and_notify = yes } #Verviers
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1104 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:germany = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				is_ally_with = event_target:belgium
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		741 = { transfer_state_and_notify = yes } #Verviers
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1104 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		741 = { transfer_state_and_notify = yes } #Verviers
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1104 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { is_belgian_tag = yes }
			741 = { remove_claim_and_add_core_of_ROOT = yes } #Verviers
		}
		else = {
			741 = { add_claim_of_ROOT = yes } #Verviers
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1104 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Tesin
	id = annex.1105
	title = annexation_924
	desc = annexation_924_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					75 = { is_claim_or_core_of_ROOT = yes } #Moravia
					88 = { is_claim_or_core_of_ROOT = yes } #Krakow
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				75 = {
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:75.owner = { save_event_target_as = moravia }
		}
		if = {
			limit = {
				88 = {
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:moravia }
					}
				}
			}
			var:88.owner = { save_event_target_as = krakow }
		}
	}

	option = { #Give it to owner of Moravia
		log = "[GetLogInfo]: event annex.1105 option annex.1105.a"
		name = annex.1105.a
		trigger = {
			has_event_target = moravia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:moravia }
				is_ally_with = event_target:krakow
			}
			modifier = {
				factor = 0.1
				event_target:moravia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:moravia }
		924 = { transfer_state_and_notify = yes } #Tesin
	}

	option = { #Give it to owner of Krakow
		log = "[GetLogInfo]: event annex.1105 option annex.europe.give_to_owner_of_krakow"
		name = annex.europe.give_to_owner_of_krakow
		trigger = {
			has_event_target = krakow
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:krakow }
				is_ally_with = event_target:moravia
			}
			modifier = {
				factor = 0.1
				event_target:krakow = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:krakow }
		924 = { transfer_state_and_notify = yes } #Tesin
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1105 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		924 = { transfer_state_and_notify = yes } #Tesin
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1105 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		924 = { add_claim_of_ROOT = yes } #Tesin
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1105 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Danubian Plain
	id = annex.1106
	title = annexation_71
	desc = annexation_71_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					70 = { is_claim_or_core_of_ROOT = yes } #Slovakia
					155 = { is_claim_or_core_of_ROOT = yes } #Transdanubia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				70 = { #Slovakia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:70.owner = { save_event_target_as = slovakia }
		}
		if = {
			limit = {
				155 = { #Transdanubia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:slovakia }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:155.owner = { save_event_target_as = transdanubia }
		}
	}

	option = { #Give to owner of Slovakia
		log = "[GetLogInfo]: event annex.1106 option annex.europe.give_to_slovakia"
		name = annex.europe.give_to_slovakia
		trigger = {
			has_event_target = slovakia
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:slovakia }
				is_ally_with = event_target:transdanubia
			}
			modifier = {
				factor = 0.1
				event_target:slovakia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovakia }
		71 = { transfer_state_and_notify = yes } #Danubian Plain
	}

	option = { #Give to owner of Transdanubia
		log = "[GetLogInfo]: event annex.1106 option annex.europe.give_to_owner_of_transdanubia"
		name = annex.europe.give_to_owner_of_transdanubia
		trigger = {
			has_event_target = transdanubia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:transdanubia }
				is_ally_with = event_target:slovakia
			}
			modifier = {
				factor = 0.1
				event_target:transdanubia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:transdanubia }
		71 = { transfer_state_and_notify = yes } #Danubian Plain
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1106 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		71 = { transfer_state_and_notify = yes } #Danubian Plain
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1106 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		71 = { add_claim_of_ROOT = yes } #Danubian Plain
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1106 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Volkovysk
	id = annex.1107
	title = annexation_94
	desc = annexation_94_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					204 = { is_claim_or_core_of_ROOT = yes } #Novogrudok
					AND = {
						11 = { is_claim_or_core_of_ROOT = yes } #Kaunas
						owns_state = 96 #Vilnius
					}
					AND = {
						92 = { is_claim_or_core_of_ROOT = yes } #Plock
						owns_state = 97 #Bialystok
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				204 = { #Novogrudok
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:204.owner = { save_event_target_as = belarus }
		}
		if = {
			limit = {
				11 = { #Kaunas
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:belarus }
						96 = { annexations_required_state_is_owned_by_either_side = yes } #Vilnius
						ROOT_can_grant_land = yes
					}
				}
			}
			var:11.owner = { save_event_target_as = lithuania }
		}
		if = {
			limit = {
				92 = { #Lublin
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:belarus }
						NOT = { tag = event_target:lithuania }
						97 = { annexations_required_state_is_owned_by_either_side = yes } #Bialystok
						ROOT_can_grant_land = yes
					}
				}
			}
			var:92.owner = { save_event_target_as = poland }
		}
	}

	option = { #give to Belarus/Russia
		log = "[GetLogInfo]: event annex.1107 option annex.europe.give_to_belarus"
		name = annex.europe.give_to_belarus
		trigger = {
			has_event_target = belarus
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					event_target:lithuania = {
						owns_state = 96 #Vilnius
						owns_state = 97 #Bialystok
					}
					event_target:poland = {
						owns_state = 96 #Vilnius
						owns_state = 97 #Bialystok
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:belarus = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belarus }
		94 = { transfer_state_and_notify = yes } #Volkovysk
	}

	option = { #give to Poland
		log = "[GetLogInfo]: event annex.1107 option annex.europe.give_to_poland"
		name = annex.europe.give_to_poland
		trigger = {
			has_event_target = poland
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.1
				event_target:poland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:poland }
		94 = { transfer_state_and_notify = yes } #Volkovysk
		97 = { transfer_if_owned = yes } #Bialystok
	}

	option = { #give to Lithuania
		log = "[GetLogInfo]: event annex.1107 option annex.europe.give_to_lithuania"
		name = annex.europe.give_to_lithuania
		trigger = {
			has_event_target = lithuania
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.1
				event_target:lithuania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lithuania }
		94 = { transfer_state_and_notify = yes } #Volkovysk
		96 = { transfer_if_owned = yes } #Vilnius
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1107 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		94 = { transfer_state_and_notify = yes } #Volkovysk
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1107 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		94 = { add_claim_of_ROOT = yes } #Volkovysk
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1107 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Gomel
	id = annex.1108
	title = annexation_241
	desc = annexation_241_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					243 = { is_claim_or_core_of_ROOT = yes } #Krichev
					194 = { is_claim_or_core_of_ROOT = yes } #Mozyr
					193 = { is_claim_or_core_of_ROOT = yes } #Chernihiv
					791 = { is_claim_or_core_of_ROOT = yes } #Starodub
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				243 = { #Krichev
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:243.owner = { save_event_target_as = krichev }
		}
		if = {
			limit = {
				194 = { #Mozyr
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:krichev }
					}
				}
			}
			var:194.owner = { save_event_target_as = mozyr }
		}
		if = {
			limit = {
				193 = { #Chernihiv
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:krichev }
						NOT = { tag = event_target:mozyr }
					}
				}
			}
			var:193.owner = { save_event_target_as = chernihiv }
		}
		if = {
			limit = {
				791 = { #Starodub
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:krichev }
						NOT = { tag = event_target:mozyr }
						NOT = { tag = event_target:chernihiv }
					}
				}
			}
			var:791.owner = { save_event_target_as = starodub }
		}
	}

	option = { #give to owner of Krichev
		log = "[GetLogInfo]: event annex.1108 option annex.1108.a"
		name = annex.1108.a
		trigger = {
			has_event_target = krichev
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:krichev }
				OR = {
					is_ally_with = event_target:mozyr
					is_ally_with = event_target:chernihiv
					is_ally_with = event_target:starodub
				}
			}
			modifier = {
				factor = 0.1
				event_target:krichev = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:krichev }
		241 = { transfer_state_and_notify = yes } #Gomel
	}

	option = { #give to owner of Mozyr
		log = "[GetLogInfo]: event annex.1108 option annex.1108.b"
		name = annex.1108.b
		trigger = {
			has_event_target = mozyr
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:mozyr }
				OR = {
					is_ally_with = event_target:krichev
					is_ally_with = event_target:chernihiv
					is_ally_with = event_target:starodub
				}
			}
			modifier = {
				factor = 0.1
				event_target:mozyr = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:mozyr }
		241 = { transfer_state_and_notify = yes } #Gomel
	}

	option = { #give to owner of Chernihiv
		log = "[GetLogInfo]: event annex.1108 option annex.1108.c"
		name = annex.1108.c
		trigger = {
			has_event_target = chernihiv
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:chernihiv }
				OR = {
					is_ally_with = event_target:krichev
					is_ally_with = event_target:mozyr
					is_ally_with = event_target:starodub
				}
			}
			modifier = {
				factor = 0.1
				event_target:chernihiv = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:chernihiv }
		241 = { transfer_state_and_notify = yes } #Gomel
	}

	option = { #give to owner of Starodub
		log = "[GetLogInfo]: event annex.1108 option annex.1108.d"
		name = annex.1108.d
		trigger = {
			has_event_target = starodub
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:starodub }
				OR = {
					is_ally_with = event_target:krichev
					is_ally_with = event_target:mozyr
					is_ally_with = event_target:chernihiv
				}
			}
			modifier = {
				factor = 0.1
				event_target:starodub = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:starodub }
		241 = { transfer_state_and_notify = yes } #Gomel
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1108 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		241 = { transfer_state_and_notify = yes } #Gomel
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1108 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		241 = { add_claim_of_ROOT = yes } #Gomel
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1108 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Gorizia
	id = annex.1109
	title = annexation_683
	desc = annexation_683_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					102 = { is_claim_or_core_of_ROOT = yes } #Carniola
					AND = {
						160 = { is_claim_or_core_of_ROOT = yes } #Venetia
						owns_state = 488 #Trieste
					}
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = { is_germany_or_splinter_tag = yes }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				102 = { #Carniola
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:102.owner = { save_event_target_as = carniola }
		}
		if = {
			limit = {
				160 = { #Venetia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						488 = { annexations_required_state_is_owned_by_either_side = yes } #Trieste
					}
				}
			}
			var:160.owner = { save_event_target_as = venetia }
		}
	}

	option = { #Give to owner of Carniola
		log = "[GetLogInfo]: event annex.1109 option annex.europe.give_to_owner_of_carniola"
		name = annex.europe.give_to_owner_of_carniola
		trigger = {
			has_event_target = carniola
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carniola }
				is_ally_with = event_target:venetia
			}
			modifier = {
				factor = 0.1
				event_target:carniola = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carniola }
		683 = { transfer_state_and_notify = yes } #Gorizia
	}

	option = { #Give to owner of Venetia
		log = "[GetLogInfo]: event annex.1109 option annex.europe.give_to_owner_of_venetia"
		name = annex.europe.give_to_owner_of_venetia
		trigger = {
			has_event_target = venetia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				OR = {
					is_ally_with = event_target:carniola
					is_ally_with = event_target:central_croatia
				}
			}
			modifier = {
				factor = 0.1
				event_target:venetia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:venetia }
		683 = { transfer_state_and_notify = yes } #Gorizia
		488 = { transfer_if_owned = yes } #Trieste
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1109 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		683 = { transfer_state_and_notify = yes } #Gorizia
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1109 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		683 = { add_claim_of_ROOT = yes } #Gorizia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1109 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Fiume
	id = annex.1110
	title = annexation_103
	desc = annexation_103_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					102 = { is_claim_or_core_of_ROOT = yes } #Carniola
					109 = { is_claim_or_core_of_ROOT = yes } #Central Croatia
					160 = { is_claim_or_core_of_ROOT = yes } #Venetia
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = { is_germany_or_splinter_tag = yes }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				102 = { #Carniola
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:102.owner = { save_event_target_as = carniola }
		}
		if = {
			limit = {
				109 = { #Central Croatia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:carniola }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:109.owner = { save_event_target_as = central_croatia }
		}
		if = {
			limit = {
				160 = { #Venetia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:carniola }
						NOT = { tag = event_target:central_croatia }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:160.owner = { save_event_target_as = venetia }
		}
	}

	option = { #Give to owner of Carniola
		log = "[GetLogInfo]: event annex.1110 option annex.europe.give_to_owner_of_carniola"
		name = annex.europe.give_to_owner_of_carniola
		trigger = {
			has_event_target = carniola
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carniola }
				OR = {
					is_ally_with = event_target:central_croatia
					is_ally_with = event_target:venetia
				}
			}
			modifier = {
				factor = 0.1
				event_target:carniola = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carniola }
		103 = { transfer_state_and_notify = yes } #Rijeka
	}

	option = { #Give to owner of Central Croatia
		log = "[GetLogInfo]: event annex.1110 option annex.europe.give_to_owner_of_central_croatia"
		name = annex.europe.give_to_owner_of_central_croatia
		trigger = {
			has_event_target = central_croatia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_croatia }
				OR = {
					is_ally_with = event_target:carniola
					is_ally_with = event_target:venetia
				}
			}
			modifier = {
				factor = 0.1
				event_target:central_croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_croatia }
		103 = { transfer_state_and_notify = yes } #Rijeka
	}

	option = { #Give to owner of Venetia
		log = "[GetLogInfo]: event annex.1110 option annex.europe.give_to_owner_of_venetia"
		name = annex.europe.give_to_owner_of_venetia
		trigger = {
			has_event_target = venetia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:venetia }
				OR = {
					is_ally_with = event_target:carniola
					is_ally_with = event_target:central_croatia
				}
			}
			modifier = {
				factor = 0.1
				event_target:venetia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:venetia }
		103 = { transfer_state_and_notify = yes } #Rijeka
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1110 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		103 = { transfer_state_and_notify = yes } #Rijeka
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1110 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		103 = { add_claim_of_ROOT = yes } #Rijeka
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1110 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Pressburg
	id = annex.1111
	title = annexation_1090
	desc = annexation_1090_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					4 = { is_claim_or_core_of_ROOT = yes } #Lower Austria
					70 = { is_claim_or_core_of_ROOT = yes } #Slovakia
					71 = { is_claim_or_core_of_ROOT = yes } #Danubian Plain
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				4 = { #Lower Austria
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:4.owner = { save_event_target_as = lower_austria }
		}
		if = {
			limit = {
				70 = { #Slovakia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:lower_austria }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:70.owner = { save_event_target_as = slovakia }
		}
		if = {
			limit = {
				71 = { #Danubian Plain
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:lower_austria }
						NOT = { tag = event_target:slovakia }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:71.owner = { save_event_target_as = danubian_plain }
		}
	}

	option = { #Give it to owner of Lower Austria
		log = "[GetLogInfo]: event annex.1111 option annex.europe.give_to_owner_of_lower_austria"
		name = annex.europe.give_to_owner_of_lower_austria
		trigger = {
			has_event_target = lower_austria
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0 #no border gore, please
				NOT = { event_target:lower_austria = { owns_state = 784 } } #Burgenland
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lower_austria }
				OR = {
					is_ally_with = event_target:slovakia
					is_ally_with = event_target:danubian_plain
				}
			}
			modifier = {
				factor = 0.1
				event_target:lower_austria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lower_austria }
		1090 = { transfer_state_and_notify = yes } #Pressburg
	}

	option = { #Give it to owner of Slovakia
		log = "[GetLogInfo]: event annex.1111 option annex.europe.give_to_slovakia"
		name = annex.europe.give_to_slovakia
		trigger = {
			has_event_target = slovakia
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:slovakia }
				OR = {
					is_ally_with = event_target:lower_austria
					is_ally_with = event_target:danubian_plain
				}
			}
			modifier = {
				factor = 0.1
				event_target:slovakia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovakia }
		1090 = { transfer_state_and_notify = yes } #Pressburg
	}

	option = { #Give it to owner of Danubian Plain
		log = "[GetLogInfo]: event annex.1111 option annex.1111.a"
		name = annex.1111.a
		trigger = {
			has_event_target = danubian_plain
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0 #no border gore, please
				NOT = { event_target:danubian_plain = { owns_state = 784 } } #Burgenland
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:danubian_plain }
				OR = {
					is_ally_with = event_target:lower_austria
					is_ally_with = event_target:slovakia
				}
			}
			modifier = {
				factor = 0.1
				event_target:danubian_plain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:danubian_plain }
		1090 = { transfer_state_and_notify = yes } #Pressburg
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1111 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1090 = { transfer_state_and_notify = yes } #Pressburg
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1111 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = {
				OR = {
					original_tag = AUS
					is_germany_or_splinter_tag = yes
				}
			}
			1090 = { #Pressburg
				add_claim_of_ROOT = yes
				enable_state_integration_50_compliance = yes
			}
		}
		else = {
			1090 = { add_claim_of_ROOT = yes } #Pressburg
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1111 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Roussillon
	id = annex.1112
	title = annexation_817
	desc = annexation_817_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					22 = { is_claim_or_core_of_ROOT = yes } #Languedoc
					984 = { is_claim_or_core_of_ROOT = yes } #Pyrenees
					165 = { is_claim_or_core_of_ROOT = yes } #Catalonia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				22 = { #Provence
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:22.owner = { save_event_target_as = languedoc }
		}
		if = {
			limit = {
				984 = { #Pyrenees
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:languedoc }
					}
				}
			}
			var:984.owner = { save_event_target_as = pyrenees }
		}
		if = {
			limit = {
				165 = { #Catalonia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:languedoc }
						NOT = { tag = event_target:pyrenees }
					}
				}
			}
			var:165.owner = { save_event_target_as = catalonia }
		}
	}

	option = { #Give to owner of Languedoc
		log = "[GetLogInfo]: event annex.1112 option annex.1112.a"
		name = annex.1112.a
		trigger = {
			has_event_target = languedoc
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:languedoc = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:languedoc }
				is_ally_with = event_target:pyrenees
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pyrenees = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:languedoc }
				is_ally_with = event_target:catalonia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:catalonia = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:languedoc = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:languedoc }
		817 = { transfer_state_and_notify = yes } #Roussillon
	}

	option = { #Give to owner of Pyrenees
		log = "[GetLogInfo]: event annex.1112 option annex.europe.give_to_owner_of_pyrenees"
		name = annex.europe.give_to_owner_of_pyrenees
		trigger = {
			has_event_target = pyrenees
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:pyrenees = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pyrenees }
				is_ally_with = event_target:languedoc
				OR = {
					is_germany_or_splinter_tag = no
					event_target:languedoc = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pyrenees }
				is_ally_with = event_target:catalonia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:catalonia = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:pyrenees = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:pyrenees }
		817 = { transfer_state_and_notify = yes } #Roussillon
	}

	option = { #Give to owner of Catalonia
		log = "[GetLogInfo]: event annex.1112 option annex.1112.b"
		name = annex.1112.b
		trigger = {
			has_event_target = catalonia
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:catalonia = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:catalonia }
				is_ally_with = event_target:languedoc
				OR = {
					is_germany_or_splinter_tag = no
					event_target:languedoc = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:catalonia }
				is_ally_with = event_target:pyrenees
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pyrenees = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:catalonia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:catalonia }
		817 = { transfer_state_and_notify = yes } #Roussillon
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1112 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		817 = { transfer_state_and_notify = yes } #Roussillon
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1112 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		817 = { add_claim_of_ROOT = yes } #Roussillon
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1112 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Chelm
	id = annex.1113
	title = annexation_1088
	desc = annexation_1088_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					92 = { is_claim_or_core_of_ROOT = yes } #Lublin
					792 = { is_claim_or_core_of_ROOT = yes } #Volhynia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				92 = { #Lublin
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:92.owner = { save_event_target_as = lublin }
		}
		if = {
			limit = {
				792 = { #Volhynia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:lublin }
					}
				}
			}
			var:792.owner = { save_event_target_as = volhynia }
		}
		if = {
			limit = {
				is_russian_tag = yes
				OR = {
					RUS_is_expansionist = no #== won't take Lwow
					is_ally_with = event_target:lublin
					AND = {
						has_event_target = lublin
						event_target:lublin = { owns_state = 91 } #Lwow
					}
				}
			}
			save_event_target_as = AI_dont_annex
		}
	}

	option = { #Give to owner of Lublin
		log = "[GetLogInfo]: event annex.1113 option annex.1113.a"
		name = annex.1113.a
		trigger = {
			has_event_target = lublin
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lublin }
				is_ally_with = event_target:volhynia
				OR = {
					is_germany_or_splinter_tag = no
					event_target:volhynia = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:lublin = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lublin }
		1088 = { transfer_state_and_notify = yes } #Chelm
	}

	option = { #Give to owner of Volhynia
		log = "[GetLogInfo]: event annex.1113 option annex.europe.give_to_owner_of_volhynia"
		name = annex.europe.give_to_owner_of_volhynia
		trigger = {
			has_event_target = volhynia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_AI_wants_to_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:volhynia }
				is_ally_with = event_target:lublin
				OR = {
					is_germany_or_splinter_tag = no
					event_target:lublin = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:volhynia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:volhynia }
		1088 = { transfer_state_and_notify = yes } #Chelm
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1113 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1088 = { transfer_state_and_notify = yes } #Chelm
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1113 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = AI_dont_annex
			}
		}
		1088 = { add_claim_of_ROOT = yes } #Chelm
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
				}
			}
			1088 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1113 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Labourd
	id = annex.1114
	title = annexation_779
	desc = annexation_779_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					OR = {
						19 = { is_claim_or_core_of_ROOT = yes } #Aquitaine
						984 = { is_claim_or_core_of_ROOT = yes } #Pyrenees
						172 = { is_claim_or_core_of_ROOT = yes } #Navarre
						1070 = { is_claim_or_core_of_ROOT = yes } #Basque Country
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					19 = { #Aquitaine
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:19.owner = { save_event_target_as = aquitaine }
			}
			if = {
				limit = {
					984 = { #Pyrenees
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:aquitaine }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:984.owner = { save_event_target_as = pyrenees }
			}
			if = {
				limit = {
					172 = { #Navarre
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:aquitaine }
							NOT = { tag = event_target:pyrenees }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:172.owner = { save_event_target_as = navarre }
			}
			if = {
				limit = {
					1070 = { #Basque Country
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:aquitaine }
							NOT = { tag = event_target:pyrenees }
							NOT = { tag = event_target:navarre }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:1070.owner = { save_event_target_as = basque_country }
			}
		}
	}

	option = { #Give to owner of Aquitaine
		log = "[GetLogInfo]: event annex.1114 option annex.1114.a"
		name = annex.1114.a
		trigger = {
			has_event_target = aquitaine
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:aquitaine = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:aquitaine }
				is_ally_with = event_target:pyrenees
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pyrenees = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:aquitaine }
				is_ally_with = event_target:navarre
				OR = {
					is_germany_or_splinter_tag = no
					event_target:navarre = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:aquitaine }
				is_ally_with = event_target:basque_country
				OR = {
					is_germany_or_splinter_tag = no
					event_target:basque_country = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:aquitaine = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:aquitaine }
		779 = { transfer_state_and_notify = yes } #Labourd
	}

	option = { #Give to owner of Pyrenees
		log = "[GetLogInfo]: event annex.1114 option annex.europe.give_to_owner_of_pyrenees"
		name = annex.europe.give_to_owner_of_pyrenees
		trigger = {
			has_event_target = pyrenees
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:pyrenees = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pyrenees }
				is_ally_with = event_target:aquitaine
				OR = {
					is_germany_or_splinter_tag = no
					event_target:aquitaine = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pyrenees }
				is_ally_with = event_target:navarre
				OR = {
					is_germany_or_splinter_tag = no
					event_target:navarre = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:pyrenees }
				is_ally_with = event_target:basque_country
				OR = {
					is_germany_or_splinter_tag = no
					event_target:basque_country = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:pyrenees = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:pyrenees }
		779 = { transfer_state_and_notify = yes } #Labourd
	}

	option = { #Give to owner of Navarre
		log = "[GetLogInfo]: event annex.1114 option annex.1114.b"
		name = annex.1114.b
		trigger = {
			has_event_target = navarre
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:navarre = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:navarre }
				is_ally_with = event_target:aquitaine
				OR = {
					is_germany_or_splinter_tag = no
					event_target:aquitaine = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:navarre }
				is_ally_with = event_target:pyrenees
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pyrenees = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:navarre }
				is_ally_with = event_target:basque_country
				OR = {
					is_germany_or_splinter_tag = no
					event_target:basque_country = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 4
				event_target:navarre = { original_tag = BAS }
			}
			modifier = {
				factor = 0.1
				event_target:navarre = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:navarre }
		779 = { transfer_state_and_notify = yes } #Labourd
	}

	option = { #Give to owner of Basque Country
		log = "[GetLogInfo]: event annex.1114 option annex.1114.c"
		name = annex.1114.c
		trigger = {
			has_event_target = basque_country
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:basque_country = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:basque_country }
				is_ally_with = event_target:aquitaine
				OR = {
					is_germany_or_splinter_tag = no
					event_target:aquitaine = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:basque_country }
				is_ally_with = event_target:pyrenees
				OR = {
					is_germany_or_splinter_tag = no
					event_target:pyrenees = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:navarre }
				is_ally_with = event_target:navarre
				OR = {
					is_germany_or_splinter_tag = no
					event_target:navarre = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 4
				event_target:basque_country = { original_tag = BAS }
			}
			modifier = {
				factor = 0.1
				event_target:basque_country = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:basque_country }
		779 = { transfer_state_and_notify = yes } #Labourd
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1114 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		779 = { transfer_state_and_notify = yes } #Labourd
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1114 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		779 = { add_claim_of_ROOT = yes } #Labourd
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1114 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Saxony
	id = annex.1115
	title = annexation_65
	desc = annexation_65_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					OR = {
						is_german_unifier_tag = yes
						59 = { is_claim_or_core_of_ROOT = yes } #Hanover
						64 = { is_claim_or_core_of_ROOT = yes } #Brandenburg
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					59 = { #Hanover
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:germany }
							NOT = { tag = event_target:hanover }
							ROOT_can_grant_land = yes }
					}
				}
				var:59.owner = { save_event_target_as = hanover }
			}
			if = {
				limit = {
					64 = { #Brandenburg
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:germany }
							NOT = { tag = event_target:hanover }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:64.owner = { save_event_target_as = brandenburg }
			}
		}
	}

	option = { #Give to German tag 1 (owner of Hanover)
		log = "[GetLogInfo]: event annex.1115 option annex.europe.give_to_owner_of_hanover"
		name = annex.europe.give_to_owner_of_hanover
		trigger = {
			has_event_target = hanover
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:hanover }
				is_ally_with = event_target:brandenburg
			}
			modifier = {
				factor = 0.1
				event_target:hanover = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:hanover }
		every_owned_state = {
			limit = {
				is_saxony = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Give to German tag 2 (owner of Brandenburg)
		log = "[GetLogInfo]: event annex.1115 option annex.1115.a"
		name = annex.1115.a
		trigger = {
			has_event_target = brandenburg
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:brandenburg }
				is_ally_with = event_target:hanover
			}
			modifier = {
				factor = 0.1
				event_target:brandenburg = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:brandenburg }
		every_owned_state = {
			limit = {
				is_saxony = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1115 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_saxony = yes
				is_valid_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1115 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_state = {
			limit = { is_saxony = yes }
			add_claim_of_ROOT = yes
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1115 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Schleswig-Holstein
	id = annex.1116
	title = annexation_58
	desc = annexation_58_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					59 = { is_claim_or_core_of_ROOT = yes } #Hanover
					61 = { is_claim_or_core_of_ROOT = yes } #Mecklenburg
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				59 = { #Hanover
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:59.owner = { save_event_target_as = hanover }
		}
		if = {
			limit = {
				61 = { #Mecklenburg
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:hanover }
					}
				}
			}
			var:61.owner = { save_event_target_as = mecklenburg }
		}
	}

	option = { #Give to German tag 1 (owner of Hanover)
		log = "[GetLogInfo]: event annex.1116 option annex.europe.give_to_owner_of_hanover"
		name = annex.europe.give_to_owner_of_hanover
		trigger = {
			has_event_target = hanover
		}
		ai_chance = {
			base = 65
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:hanover }
				is_ally_with = event_target:mecklenburg
			}
			modifier = {
				factor = 0.1
				event_target:hanover = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:hanover }
		58 = { transfer_state_and_notify = yes } #Schleswig-Holstein
	}

	option = { #Give to German tag 2 (owner of Mecklenburg)
		log = "[GetLogInfo]: event annex.1116 option annex.1116.a"
		name = annex.1116.a
		trigger = {
			has_event_target = mecklenburg
		}
		ai_chance = {
			base = 35
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:mecklenburg }
				is_ally_with = event_target:german_hanover
			}
			modifier = {
				factor = 0.1
				event_target:mecklenburg = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:mecklenburg }
		58 = { transfer_state_and_notify = yes } #Schleswig-Holstein
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1116 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		58 = { transfer_state_and_notify = yes } #Schleswig-Holstein
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1116 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		58 = { add_claim_of_ROOT = yes } #Schleswig-Holstein
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1116 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Kuban
	id = annex.1118
	title = annexation_234
	desc = annexation_234_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					227 = { is_claim_or_core_of_ROOT = yes } #Yuzivka
					235 = { is_claim_or_core_of_ROOT = yes } #Stavropol
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				235 = { #Stavropol
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:235.owner = { save_event_target_as = stavropol }
		}
		if = {
			limit = {
				227 = { #Yuzivka
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:stavropol }
					}
				}
			}
			var:227.owner = { save_event_target_as = yuzivka }
		}
	}

	option = { #give to owner of Stavropol
		log = "[GetLogInfo]: event annex.1118 option annex.europe.give_to_owner_of_stavropol"
		name = annex.europe.give_to_owner_of_stavropol
		trigger = {
			has_event_target = stavropol
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = TUR
					is_germany_or_splinter_tag = yes
				}
				event_target:stavropol = { is_russian_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:stavropol }
				is_ally_with = event_target:yuzivka
				OR = {
					NOT = {
						original_tag = TUR
						is_germany_or_splinter_tag = yes
					}
					event_target:yuzivka = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:stavropol = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:stavropol }
		218 = { transfer_if_owned = yes } #Rostov
		234 = { transfer_if_owned = yes } #Ekaterinodar
		1006 = { transfer_if_owned = yes } #Novorossiysk
	}

	option = { #give to owner of Yuzivka
		log = "[GetLogInfo]: event annex.1118 option annex.1118.a"
		name = annex.1118.a
		trigger = {
			has_event_target = yuzivka
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = TUR
					is_germany_or_splinter_tag = yes
				}
				event_target:yuzivka = { is_russian_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:yuzivka }
				is_ally_with = event_target:stavropol
				OR = {
					NOT = {
						original_tag = TUR
						is_germany_or_splinter_tag = yes
					}
					event_target:stavropol = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:yuzivka = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:yuzivka }
		218 = { transfer_if_owned = yes } #Rostov
		234 = { transfer_if_owned = yes } #Ekaterinodar
		1006 = { transfer_if_owned = yes } #Novorossiysk
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1118 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		218 = { transfer_if_owned = yes } #Rostov
		234 = { transfer_if_owned = yes } #Ekaterinodar
		1006 = { transfer_if_owned = yes } #Novorossiysk
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1118 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		218 = { add_claim_of_ROOT = yes } #Rostov
		234 = { add_claim_of_ROOT = yes } #Ekaterinodar
		1006 = { add_claim_of_ROOT = yes } #Novorossiysk
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1118 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of the North Caucasus
	id = annex.1119
	title = annexation_232
	desc = annexation_232_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { 235 = { is_claim_or_core_of_ROOT = yes } } #Stavropol
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				235 = { #Stavropol
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:235.owner = { save_event_target_as = stavropol }
		}
	}

	option = { #puppet MNR
		log = "[GetLogInfo]: event annex.1119 option annex.1119.a"
		name = annex.1119.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = MNR }
		release_targeted_tag = yes
	}

	option = { #Give to RUS
		log = "[GetLogInfo]: event annex.1119 option annex.europe.give_to_owner_of_stavropol"
		name = annex.europe.give_to_owner_of_stavropol
		trigger = {
			has_event_target = stavropol
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					original_tag = AZR
					original_tag = TUR
					is_german_tag = yes
				}
				event_target:stavropol = { is_russian_tag = yes }
			}
			modifier = {
				factor = 0.1
				event_target:stavropol = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:stavropol }
		MNR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1119 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		MNR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1119 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		MNR = { add_claim_of_ROOT_on_valid_cores = yes }
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1119 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Savoy
	id = annex.1121
	title = annexation_943
	desc = annexation_943_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						27 = { is_claim_or_core_of_ROOT = yes } #Burgundy
						owns_state = 943 #Upper Savoy
					}
					AND = {
						763 = { is_claim_or_core_of_ROOT = yes } #Alpes
						owns_state = 735 #Savoy
					}
					AND = {
						158 = { is_claim_or_core_of_ROOT = yes } #Piedmont
						owns_state = 1003 #Aosta Valley
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				27 = { #Burgundy
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						943 = { annexations_required_state_is_owned_by_either_side = yes } #Upper Savoy
					}
				}
			}
			var:27.owner = { save_event_target_as = burgundy }
		}
		if = {
			limit = {
				763 = { #Alpes
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:burgundy }
						735 = { annexations_required_state_is_owned_by_either_side = yes } #Savoy
					}
				}
			}
			var:763.owner = { save_event_target_as = alpes }
		}
		if = {
			limit = {
				158 = { #Piedmont
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:burgundy }
						NOT = { tag = event_target:alpes }
						1003 = { annexations_required_state_is_owned_by_either_side = yes } #Aosta Valley
						ROOT_can_grant_land = yes
					}
				}
			}
			var:158.owner = { save_event_target_as = piedmont }
		}
	}

	option = { #Give to owner of Burgundy
		log = "[GetLogInfo]: event annex.1121 option annex.1121.a"
		name = annex.1121.a
		trigger = {
			has_event_target = burgundy
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:burgundy = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:burgundy }
				is_ally_with = event_target:alpes
				OR = {
					is_germany_or_splinter_tag = no
					event_target:alpes = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:burgundy }
				is_ally_with = event_target:piedmont
				OR = {
					is_germany_or_splinter_tag = no
					event_target:piedmont = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:burgundy = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:burgundy }
		735 = { transfer_if_owned = yes } #Savoy
		943 = { transfer_if_owned = yes } #Upper Savoy
	}

	option = { #Give to owner of Alpes
		log = "[GetLogInfo]: event annex.1121 option annex.1121.b"
		name = annex.1121.b
		trigger = {
			has_event_target = alpes
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:alpes = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:alpes }
				is_ally_with = event_target:burgundy
				OR = {
					is_germany_or_splinter_tag = no
					event_target:burgundy = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:alpes }
				is_ally_with = event_target:piedmont
				OR = {
					is_germany_or_splinter_tag = no
					event_target:piedmont = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:alpes = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:alpes }
		735 = { transfer_if_owned = yes } #Savoy
		943 = { transfer_if_owned = yes } #Upper Savoy
	}

	option = { #Give to owner of Piedmont
		log = "[GetLogInfo]: event annex.1121 option annex.europe.give_to_owner_of_piedmont"
		name = annex.europe.give_to_owner_of_piedmont
		trigger = {
			has_event_target = piedmont
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:piedmont = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:piedmont }
				is_ally_with = event_target:alpes
				OR = {
					is_germany_or_splinter_tag = no
					event_target:alpes = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:piedmont }
				is_ally_with = event_target:burgundy
				OR = {
					is_germany_or_splinter_tag = no
					event_target:burgundy = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:piedmont = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:piedmont }
		735 = { transfer_if_owned = yes } #Savoy
		943 = { transfer_if_owned = yes } #Upper Savoy
		1003 = { transfer_if_owned = yes } #Aosta Valley
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1121 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		735 = { transfer_if_owned = yes } #Savoy
		943 = { transfer_if_owned = yes } #Upper Savoy
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1121 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		735 = { add_claim_of_ROOT = yes } #Savoy
		943 = { add_claim_of_ROOT = yes } #Upper Savoy
		if = {
			limit = { 158 = { is_claim_or_core_of_ROOT = yes } } #Piedmont
			1003 = { add_claim_of_ROOT = yes } #Aosta Valley
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1121 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Nice
	id = annex.1122
	title = annexation_762
	desc = annexation_762_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					21 = { is_claim_or_core_of_ROOT = yes } #Provence
					158 = { is_claim_or_core_of_ROOT = yes } #Piedmont
					838 = { is_claim_or_core_of_ROOT = yes } #Liguria
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				21 = { #Provence
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:21.owner = { save_event_target_as = provence }
		}
		if = {
			limit = {
				158 = { #Piedmont
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:provence }
					}
				}
			}
			var:158.owner = { save_event_target_as = piedmont }
		}
		if = {
			limit = {
				838 = { #Liguria
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:provence }
						NOT = { tag = event_target:piedmont }
					}
				}
			}
			var:838.owner = { save_event_target_as = liguria }
		}
	}

	option = { #Give to owner of Provence
		log = "[GetLogInfo]: event annex.1122 option annex.1122.a"
		name = annex.1122.a
		trigger = {
			has_event_target = provence
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:provence = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:provence }
				is_ally_with = event_target:piedmont
				OR = {
					is_germany_or_splinter_tag = no
					event_target:piedmont = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:provence }
				is_ally_with = event_target:liguria
				OR = {
					is_germany_or_splinter_tag = no
					event_target:liguria = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:provence = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:provence }
		762 = { transfer_state_and_notify = yes } #Nice
	}

	option = { #Give to owner of Piedmont
		log = "[GetLogInfo]: event annex.1122 option annex.europe.give_to_owner_of_piedmont"
		name = annex.europe.give_to_owner_of_piedmont
		trigger = {
			has_event_target = piedmont
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:piedmont = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:piedmont }
				is_ally_with = event_target:provence
				OR = {
					is_germany_or_splinter_tag = no
					event_target:provence = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:piedmont }
				is_ally_with = event_target:liguria
				OR = {
					is_germany_or_splinter_tag = no
					event_target:liguria = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:piedmont = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:piedmont }
		762 = { transfer_state_and_notify = yes } #Nice
	}

	option = { #Give to owner of Liguria
		log = "[GetLogInfo]: event annex.1122 option annex.1122.b"
		name = annex.1122.b
		trigger = {
			has_event_target = liguria
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:liguria = { is_french_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:liguria }
				is_ally_with = event_target:provence
				OR = {
					is_germany_or_splinter_tag = no
					event_target:provence = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:liguria }
				is_ally_with = event_target:piedmont
				OR = {
					is_germany_or_splinter_tag = no
					event_target:piedmont = { is_french_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:liguria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:liguria }
		762 = { transfer_state_and_notify = yes } #Nice
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1122 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		762 = { transfer_state_and_notify = yes } #Nice
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1122 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		762 = { add_claim_of_ROOT = yes } #Nice
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1122 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Syrmia
	id = annex.1123
	title = annexation_794
	desc = annexation_794_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					107 = { is_claim_or_core_of_ROOT = yes } #Belgrade
					109 = { is_claim_or_core_of_ROOT = yes } #Central Croatia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				107 = { #Belgrade
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:107.owner = { save_event_target_as = belgrade }
		}
		if = {
			limit = {
				109 = { #Central Croatia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:belgrade }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:109.owner = { save_event_target_as = central_croatia }
		}
	}

	option = { #Give to owner of Belgrade
		log = "[GetLogInfo]: event annex.1123 option annex.europe.give_to_owner_of_belgrade"
		name = annex.europe.give_to_owner_of_belgrade
		trigger = {
			has_event_target = belgrade
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:belgrade = { original_tag = SER }
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgrade }
				is_ally_with = event_target:central_croatia
				OR = {
					event_target:central_croatia = {
						NOT = { is_ally_with = HUN }
						NOT = { is_ally_with = AUS }
					}
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:belgrade = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgrade }
		794 = { transfer_state_and_notify = yes } #Syrmia
	}

	option = { #Give to owner of Central Croatia
		log = "[GetLogInfo]: event annex.1123 option annex.europe.give_to_owner_of_central_croatia"
		name = annex.europe.give_to_owner_of_central_croatia
		trigger = {
			has_event_target = central_croatia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:central_croatia = {
					OR = {
						is_ally_with = HUN
						is_ally_with = AUS
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:central_croatia }
				is_ally_with = event_target:belgrade
				OR = {
					NOT = { event_target:belgrade = { original_tag = SER } }
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:central_croatia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:central_croatia }
		794 = { transfer_state_and_notify = yes } #Syrmia
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1123 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		794 = { transfer_state_and_notify = yes } #Syrmia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1123 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		794 = { add_claim_of_ROOT = yes } #Syrmia
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1123 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Karavanks
	id = annex.1124
	title = annexation_1107
	desc = annexation_1107_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					102 = { is_claim_or_core_of_ROOT = yes } #Carniola
					835 = { is_claim_or_core_of_ROOT = yes } #Carinthia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				102 = { #Carniola
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:102.owner = { save_event_target_as = carniola }
		}
		if = {
			limit = {
				835 = { #Carinthia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:carniola }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:835.owner = { save_event_target_as = carinthia }
		}
	}

	option = { #Give to owner of Carniola
		log = "[GetLogInfo]: event annex.1124 option annex.europe.give_to_owner_of_carniola"
		name = annex.europe.give_to_owner_of_carniola
		trigger = {
			has_event_target = carniola
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carniola }
				is_ally_with = event_target:carinthia
			}
			modifier = {
				factor = 0.1
				event_target:carniola = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carniola }
		1107 = { transfer_state_and_notify = yes } #Karavanks
	}

	option = { #Give to owner of Carinthia
		log = "[GetLogInfo]: event annex.1124 option annex.europe.give_to_owner_of_carinthia"
		name = annex.europe.give_to_owner_of_carinthia
		trigger = {
			has_event_target = carinthia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:carinthia }
				is_ally_with = event_target:carniola
			}
			modifier = {
				factor = 0.1
				event_target:carinthia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:carinthia }
		1107 = { transfer_state_and_notify = yes } #Karavanks
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1124 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1107 = { transfer_state_and_notify = yes } #Karavanks
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1124 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		1107 = { add_claim_of_ROOT = yes } #Karavanks
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1124 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Constantza
	id = annex.1125
	title = annexation_772
	desc = annexation_772_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					46 = { is_claim_or_core_of_ROOT = yes } #Muntenia
					AND = {
						original_tag = BUL
						owns_state = 77 #Silistria
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				46 = { #Muntenia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:46.owner = { save_event_target_as = muntenia }
		}
		if = {
			limit = {
				771 = { #Varna
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:muntenia }
						77 = { annexations_required_state_is_owned_by_either_side = yes } #Silistria
						ROOT_can_grant_land = yes
					}
				}
			}
			var:771.owner = { save_event_target_as = varna }
		}
	}

	option = { #Give to owner of Muntenia
		log = "[GetLogInfo]: event annex.1125 option annex.europe.give_to_owner_of_muntenia"
		name = annex.europe.give_to_owner_of_muntenia
		trigger = {
			has_event_target = muntenia
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:muntenia }
				is_ally_with = event_target:varna
				OR = {
					NOT = {
						original_tag = AUS
						original_tag = HUN
					}
					NOT = { event_target:varna = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:muntenia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:muntenia }
		772 = { transfer_state_and_notify = yes } #Constantza
	}

	option = { #Give to owner of Varna
		log = "[GetLogInfo]: event annex.1125 option annex.europe.give_to_owner_of_varna"
		name = annex.europe.give_to_owner_of_varna
		trigger = {
			has_event_target = varna
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:varna }
				is_ally_with = event_target:muntenia
				OR = {
					NOT = {
						original_tag = AUS
						original_tag = HUN
					}
					NOT = { event_target:muntenia = { original_tag = ROM } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:varna = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:varna }
		772 = { transfer_state_and_notify = yes } #Constantza
		77 = { transfer_if_owned = yes } #Silistria
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1125 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		772 = { transfer_state_and_notify = yes } #Constantza
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1125 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		772 = { add_claim_of_ROOT = yes } #Constantza
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1125 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Florina
	id = annex.1126
	title = annexation_731
	desc = annexation_731_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					1076 = { is_claim_or_core_of_ROOT = yes } #Veria
					106 = { is_claim_or_core_of_ROOT = yes } #Macedonia
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				1076 = { #Veria
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:1076.owner = { save_event_target_as = greece }
		}
		if = {
			limit = {
				106 = { #Macedonia
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:greece }
					}
				}
			}
			var:106.owner = { save_event_target_as = bulgaria }
		}
	}

	option = { #Give to Greece
		log = "[GetLogInfo]: event annex.1126 option annex.europe.give_to_greece"
		name = annex.europe.give_to_greece
		trigger = {
			has_event_target = greece
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				add = -40
				NOT = { is_ally_with = event_target:greece }
				is_ally_with = event_target:bulgaria
			}
			modifier = {
				factor = 0.1
				event_target:greece = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		731 = { transfer_state_and_notify = yes } #Florina
	}

	option = { #Give to Bulgaria
		log = "[GetLogInfo]: event annex.1126 option annex.europe.give_to_bulgaria"
		name = annex.europe.give_to_bulgaria
		trigger = {
			has_event_target = bulgaria
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:bulgaria }
				is_ally_with = event_target:greece
			}
			modifier = {
				factor = 0
				NOT = { event_target:bulgaria = { original_tag = BUL } }
			}
			modifier = {
				factor = 0
				769 = { #Serres
					NOT = { is_owned_by = event_target:bulgaria }
					is_valid_annexation_state = no
				}
			}
			modifier = {
				factor = 0.1
				event_target:bulgaria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		731 = { transfer_state_and_notify = yes } #Florina
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1126 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		731 = { transfer_state_and_notify = yes } #Florina
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1126 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = { original_tag = GRE }
				NOT = { original_tag = BUL }
			}
		}
		731 = { add_claim_of_ROOT = yes } #Florina
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1126 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Komotini
	id = annex.1127
	title = annexation_184
	desc = annexation_184_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					769 = { is_claim_or_core_of_ROOT = yes } #Serres
					AND = {
						989 = { is_claim_or_core_of_ROOT = yes } #Chalcidice
						owns_state = 769 #Serres
					}
					341 = { is_claim_or_core_of_ROOT = yes } #Adrianople
					AND = {
						212 = { is_claim_or_core_of_ROOT = yes } #Plovdiv
						owns_state = 1089 #Kardzhali
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				769 = { #Serres
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:769.owner = { save_event_target_as = serres }
		}
		else_if = {
			limit = {
				989 = { #Chalcidice
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						769 = { annexations_required_state_is_owned_by_either_side = yes } #Serres
						ROOT_can_grant_land = yes
					}
				}
			}
			var:989.owner = { save_event_target_as = serres }
		}
		if = {
			limit = {
				341 = { #Adrianople
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:serres }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:341.owner = { save_event_target_as = adrianople }
		}
		if = {
			limit = {
				212 = { #Plovdiv
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:serres }
						NOT = { tag = event_target:adrianople }
						1089 = { annexations_required_state_is_owned_by_either_side = yes } #Kardzhali
						ROOT_can_grant_land = yes
					}
				}
			}
			var:212.owner = { save_event_target_as = plovdiv }
		}
	}

	option = { #Give to owner of Serres
		log = "[GetLogInfo]: event annex.1127 option annex.1127.a"
		name = annex.1127.a
		trigger = {
			has_event_target = serres
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:serres }
				OR = {
					is_ally_with = event_target:adrianople
					is_ally_with = event_target:plovdiv
				}
			}
			modifier = {
				factor = 0.1
				event_target:serres = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:serres }
		184 = { transfer_state_and_notify = yes } #Komotini
		769 = { transfer_if_owned = yes } #Serres
	}

	option = { #Give to owner of Adrianople
		log = "[GetLogInfo]: event annex.1127 option annex.1127.b"
		name = annex.1127.b
		trigger = {
			has_event_target = adrianople
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:adrianople }
				OR = {
					is_ally_with = event_target:serres
					is_ally_with = event_target:plovdiv
				}
			}
			modifier = {
				factor = 0.1
				event_target:adrianople = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:adrianople }
		184 = { transfer_state_and_notify = yes } #Komotini
	}

	option = { #Give to owner of Plovdiv
		log = "[GetLogInfo]: event annex.1127 option annex.1127.c"
		name = annex.1127.c
		trigger = {
			has_event_target = plovdiv
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:plovdiv }
				OR = {
					is_ally_with = event_target:serres
					is_ally_with = event_target:adrianople
				}
			}
			modifier = {
				factor = 0.1
				event_target:plovdiv = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:plovdiv }
		184 = { transfer_state_and_notify = yes } #Komotini
		1089 = { transfer_if_owned = yes } #Kardzhali
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1127 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		184 = { transfer_state_and_notify = yes } #Komotini
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1127 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { tag = OTT }
			184 = { remove_claim_and_add_core_of_ROOT = yes } #Komotini
		}
		else = {
			184 = { add_claim_of_ROOT = yes } #Komotini
			if = {
				limit = { 989 = { is_claim_or_core_of_ROOT = yes } } #Chalcidice
				769 = { add_claim_of_ROOT = yes } #Serres
			}
			if = {
				limit = { 212 = { is_claim_or_core_of_ROOT = yes } } #Plovdiv
				1089 = { add_claim_of_ROOT = yes } #Kardzhali
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1127 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Mura
	id = annex.1128
	title = annexation_1109
	desc = annexation_1109_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					155 = { is_claim_or_core_of_ROOT = yes } #Transdanubia
					AND = {
						1107 = { is_claim_or_core_of_ROOT = yes } #Karavanks
						OR = {
							owns_state = 784 #Burgenland
							775 = { is_claim_or_core_of_ROOT = no } #Styria
						}
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				155 = { #Transdanubia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:155.owner = { save_event_target_as = transdanubia }
		}
		if = {
			limit = {
				1107 = { #Karavanks
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:transdanubia }
						ROOT_can_grant_land = yes
						OR = {
							owns_state = 784 #Burgenland
							775 = { is_claim_or_core_of_PREV = no } #Styria
						}
					}
				}
			}
			var:1107.owner = { save_event_target_as = karavanks }
		}
	}

	option = { #Give to owner of Transdanubia
		log = "[GetLogInfo]: event annex.1128 option annex.europe.give_to_owner_of_transdanubia"
		name = annex.europe.give_to_owner_of_transdanubia
		trigger = {
			has_event_target = transdanubia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:transdanubia = {
					OR = {
						is_ally_with = HUN
						is_ally_with = AUS
					}
				}
				OR = {
					original_tag = SER
					original_tag = ROM
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:transdanubia }
				is_ally_with = event_target:karavanks
				OR = {
					NOT = {
						original_tag = BUL
						original_tag = HUN
						AUS_is_led_by_habsburgs = yes
					}
					event_target:karavanks = {
						NOT = {
							original_tag = SER
							original_tag = ROM
						}
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:transdanubia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:transdanubia }
		1109 = { transfer_state_and_notify = yes } #Mura
	}

	option = { #Give to owner of Karavanks
		log = "[GetLogInfo]: event annex.1128 option annex.1128.a"
		name = annex.1128.a
		trigger = {
			has_event_target = karavanks
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:karavanks = {
					OR = {
						original_tag = SER
						original_tag = ROM
					}
				}
				OR = {
					original_tag = BUL
					original_tag = HUN
					AUS_is_led_by_habsburgs = yes
				}
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:karavanks }
				is_ally_with = event_target:transdanubia
				OR = {
					NOT = {
						original_tag = SER
						original_tag = ROM
					}
					event_target:transdanubia = {
						NOT = {
							is_ally_with = HUN
							is_ally_with = AUS
						}
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:karavanks = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:karavanks }
		1109 = { transfer_state_and_notify = yes } #Mura
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1128 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1109 = { transfer_state_and_notify = yes } #Mura
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1128 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		1109 = { add_claim_of_ROOT = yes } #Mura
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1128 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Lille
	id = annex.1129
	title = annexation_980
	desc = annexation_980_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					17 = { is_claim_or_core_of_ROOT = yes } #Pas-de-Calais
					34 = { is_claim_or_core_of_ROOT = yes } #Hainaut
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				17 = { #Pas-de-Calais
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:17.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				34 = { #Hainaut
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:france }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:34.owner = { save_event_target_as = belgium }
		}
	}

	option = { #give to France
		log = "[GetLogInfo]: event annex.1129 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:belgium
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		980 = { transfer_state_and_notify = yes } #Lille
	}

	option = { #give to Belgium
		log = "[GetLogInfo]: event annex.1129 option annex.give_to_belgium"
		name = annex.give_to_belgium
		trigger = {
			has_event_target = belgium
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:france
			}
			modifier = {
				factor = 0.1
				event_target:belgium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		980 = { transfer_state_and_notify = yes } #Lille
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1129 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		980 = { transfer_state_and_notify = yes } #Lille
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1129 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		980 = { add_claim_of_ROOT = yes } #Lille
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1129 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Dunkirk
	id = annex.1130
	title = annexation_29
	desc = annexation_29_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					17 = { is_claim_or_core_of_ROOT = yes } #Pas-de-Calais
					6 = { is_claim_or_core_of_ROOT = yes } #Flanders
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				17 = { #Pas-de-Calais
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:17.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				6 = { #Flanders
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:france }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:6.owner = { save_event_target_as = belgium }
		}
	}

	option = { #give to France
		log = "[GetLogInfo]: event annex.1130 option annex.give_to_france"
		name = annex.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 65
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				is_ally_with = event_target:belgium
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		29 = { transfer_state_and_notify = yes } #Dunkirk
	}

	option = { #give to Belgium
		log = "[GetLogInfo]: event annex.1130 option annex.give_to_belgium"
		name = annex.give_to_belgium
		trigger = {
			has_event_target = belgium
		}
		ai_chance = {
			base = 35
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:france
			}
			modifier = {
				factor = 0.1
				event_target:belgium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		29 = { transfer_state_and_notify = yes } #Dunkirk
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1130 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		29 = { transfer_state_and_notify = yes } #Dunkirk
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1130 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		29 = { add_claim_of_ROOT = yes } #Dunkirk
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1130 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Limburg
	id = annex.1131
	title = annexation_978
	desc = annexation_978_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					35 = { is_claim_or_core_of_ROOT = yes } #North Brabant
					925 = { is_claim_or_core_of_ROOT = yes } #Brabant
					781 = { is_claim_or_core_of_ROOT = yes } #Western Rhineland
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = { is_germany_or_splinter_tag = yes }
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				35 = { #North Brabant
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:35.owner = { save_event_target_as = netherlands }
		}
		if = {
			limit = {
				925 = { #Brabant
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:netherlands }
					}
				}
			}
			var:925.owner = { save_event_target_as = belgium }
		}
		if = {
			limit = {
				781 = { #Western Rhineland
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:netherlands }
						NOT = { tag = event_target:belgium }
					}
				}
			}
			var:781.owner = { save_event_target_as = germany }
		}
	}

	option = { #give to the Netherlands
		log = "[GetLogInfo]: event annex.1131 option annex.europe.give_to_netherlands"
		name = annex.europe.give_to_netherlands
		trigger = {
			has_event_target = netherlands
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:netherlands }
				is_ally_with = event_target:belgium
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:netherlands }
				is_ally_with = event_target:germany
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:germany = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:netherlands = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:netherlands }
		978 = { transfer_state_and_notify = yes } #Limburg
	}

	option = { #give to Belgium
		log = "[GetLogInfo]: event annex.1131 option annex.give_to_belgium"
		name = annex.give_to_belgium
		trigger = {
			has_event_target = belgium
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:netherlands
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:germany
				OR = {
					annexations_AI_country_wants_to_dismantle_germany = no
					event_target:germany = { is_german_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:belgium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		978 = { transfer_state_and_notify = yes } #Limburg
	}

	option = { #give to Germany
		log = "[GetLogInfo]: event annex.1131 option annex.europe.give_to_germany"
		name = annex.europe.give_to_germany
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				event_target:germany = { is_german_tag = yes }
				annexations_AI_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:germany }
				OR = {
					is_ally_with = event_target:netherlands
					is_ally_with = event_target:belgium
				}
			}
			modifier = {
				factor = 0.1
				event_target:germany = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		978 = { transfer_state_and_notify = yes } #Limburg
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1131 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		978 = { transfer_state_and_notify = yes } #Limburg
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1131 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.4
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = { original_tag = HOL }
			978 = { remove_claim_and_add_core_of_ROOT = yes } #Limburg
		}
		else = {
			978 = { add_claim_of_ROOT = yes } #Limburg
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1131 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Westerscheldt
	id = annex.1132
	title = annexation_979
	desc = annexation_979_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					6 = { is_claim_or_core_of_ROOT = yes } #Flanders
					35 = { is_claim_or_core_of_ROOT = yes } #North Brabant
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				6 = { #Flanders
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:6.owner = { save_event_target_as = belgium }
		}
		if = {
			limit = {
				35 = { #North Brabant
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:belgium }
					}
				}
			}
			var:35.owner = { save_event_target_as = netherlands }
		}
	}

	option = { #give to the Netherlands
		log = "[GetLogInfo]: event annex.1132 option annex.europe.give_to_netherlands"
		name = annex.europe.give_to_netherlands
		trigger = {
			has_event_target = netherlands
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:netherlands }
				is_ally_with = event_target:belgium
			}
			modifier = {
				factor = 0.1
				event_target:netherlands = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:netherlands }
		979 = { transfer_state_and_notify = yes } #Westerscheldt
	}

	option = { #give to Belgium
		log = "[GetLogInfo]: event annex.1132 option annex.give_to_belgium"
		name = annex.give_to_belgium
		trigger = {
			has_event_target = belgium
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:belgium }
				is_ally_with = event_target:netherlands
			}
			modifier = {
				factor = 0.1
				event_target:belgium = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		979 = { transfer_state_and_notify = yes } #Westerscheldt
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1132 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		979 = { transfer_state_and_notify = yes } #Westerscheldt
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1132 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = { base = 100 }
		if = {
			limit = { original_tag = HOL }
			979 = { remove_claim_and_add_core_of_ROOT = yes } #Westerscheldt
		}
		else = {
			979 = { add_claim_of_ROOT = yes } #Westerscheldt
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1132 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Northern England
	id = annex.1133
	title = annexation_131
	desc = annexation_131_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { 130 = { is_claim_or_core_of_ROOT = yes } } #Yorkshire
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				130 = { #Yorkshire
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:130.owner = { save_event_target_as = england }
		}
		hidden_effect = {
			create_dynamic_country = {
				original_tag = GBP
				copy_tag = GBP
				set_cosmetic_tag = GBP_northumbria
				save_global_event_target_as = northumbria
				reserve_dynamic_country = yes
			}
		}
	}

	option = { #release a puppet Northumbria
		log = "[GetLogInfo]: event annex.1133 option annex.1133.a"
		name = annex.1133.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				has_event_target = england
			}
		}
		effect_tooltip = {
			set_temp_variable = { tag_to_release = event_target:northumbria }
			131 = { remove_claim_and_add_core_of_target = yes } #Northumberland
			1108 = { remove_claim_and_add_core_of_target = yes } #Cumberland
			release_targeted_tag_nocosmetic = yes
		}
		hidden_effect = {
			event_target:northumbria = {
				drop_cosmetic_tag = yes
				reserve_dynamic_country = no
			}
			clear_global_event_target = northumbria
			create_dynamic_country = {
				original_tag = GBP
				copy_tag = GBP
				set_temp_variable = { tag_to_release = THIS }
				britain_create_puppet_templates = yes
				131 = { remove_claim_and_add_core_of_target = yes } #Northumberland
				1108 = { remove_claim_and_add_core_of_target = yes } #Cumberland
				GBP_set_up_northumbria = yes
			}
			release_targeted_tag_nocosmetic = yes
			var:tag_to_release = {
				ROOT = {
					set_autonomy = {
						target = PREV
						autonomy_state = integrated_puppet
						end_wars = no
					}
				}
			}
			var:tag_to_release = { GBP_set_northumbria_politics = yes }
		}
	}

	option = { #give to England
		log = "[GetLogInfo]: event annex.1133 option annex.europe.give_to_england"
		name = annex.europe.give_to_england
		trigger = {
			has_event_target = england
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.1
				event_target:england = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:england }
		131 = { transfer_if_owned = yes } #Northumberland
		1108 = { transfer_if_owned = yes } #Cumberland
		hidden_effect = {
			event_target:northumbria = {
				drop_cosmetic_tag = yes
				reserve_dynamic_country = no
			}
			clear_global_event_target = northumbria
		}
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1133 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		131 = { transfer_if_owned = yes } #Northumberland
		1108 = { transfer_if_owned = yes } #Cumberland
		hidden_effect = {
			event_target:northumbria = {
				drop_cosmetic_tag = yes
				reserve_dynamic_country = no
			}
			clear_global_event_target = northumbria
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1133 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		131 = { remove_claim_and_add_core_of_ROOT = yes } #Northumberland
		1108 = { remove_claim_and_add_core_of_ROOT = yes } #Cumberland
		hidden_effect = {
			event_target:northumbria = {
				drop_cosmetic_tag = yes
				reserve_dynamic_country = no
			}
			clear_global_event_target = northumbria
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1133 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		hidden_effect = {
			event_target:northumbria = {
				drop_cosmetic_tag = yes
				reserve_dynamic_country = no
			}
			clear_global_event_target = northumbria
		}
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bessarabia
	id = annex.1134
	title = annexation_78
	desc = annexation_78_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					79 = { is_claim_or_core_of_ROOT = yes } #Moldavia
					192 = { is_claim_or_core_of_ROOT = yes } #Odessa
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				79 = { #Moldavia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:79.owner = { save_event_target_as = moldavia }
		}
		if = {
			limit = {
				192 = { #Odessa
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:moldavia }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:192.owner = { save_event_target_as = odessa }
		}
	}

	option = { #give to owner of Moldavia
		log = "[GetLogInfo]: event annex.1134 option annex.1134.a"
		name = annex.1134.a
		trigger = {
			has_event_target = moldavia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = BUL
					AUS_is_led_by_habsburgs = yes
				}
				event_target:moldavia = { original_tag = ROM }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:moldavia }
				is_ally_with = event_target:odessa
				OR = {
					is_germany_or_splinter_tag = no
					event_target:odessa = { is_russian_tag = no }
				}
			}
			modifier = {
				factor = 0.1
				event_target:moldavia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:moldavia }
		78 = { transfer_state_and_notify = yes } #Bessarabia
	}

	option = { #give to owner of Odessa
		log = "[GetLogInfo]: event annex.1134 option annex.1134.b"
		name = annex.1134.b
		trigger = {
			has_event_target = odessa
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				event_target:odessa = { is_russian_tag = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:odessa }
				is_ally_with = event_target:moldavia
				OR = {
					NOT = {
						original_tag = BUL
						AUS_is_led_by_habsburgs = yes
					}
					NOT = { event_target:moldavia = { original_tag = ROM } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:odessa = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:odessa }
		78 = { transfer_state_and_notify = yes } #Bessarabia
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1134 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		78 = { transfer_state_and_notify = yes } #Bessarabia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1134 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		78 = { add_claim_of_ROOT = yes } #Bessarabia
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
				}
			}
			78 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1134 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Serres
	id = annex.1135
	title = annexation_769
	desc = annexation_769_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					989 = { is_claim_or_core_of_ROOT = yes } #Chalcidice
					212 = { is_claim_or_core_of_ROOT = yes } #Plovdiv
					184 = { is_claim_or_core_of_ROOT = yes } #Komotini
					AND = {
						341 = { is_claim_or_core_of_ROOT = yes } #Adrianople
						owns_state = 184 #Komotini
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				989 = { #Chalcidice
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:989.owner = { save_event_target_as = chalcidice }
		}
		if = {
			limit = {
				212 = { #Plovdiv
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:chalcidice }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:212.owner = { save_event_target_as = plovdiv }
		}
		if = {
			limit = {
				184 = { #Komotini
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:chalcidice }
						NOT = { tag = event_target:plovdiv }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:184.owner = { save_event_target_as = komotini }
		}
		else_if = {
			limit = {
				341 = { #Adrianople
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:chalcidice }
						NOT = { tag = event_target:plovdiv }
						184 = { annexations_required_state_is_owned_by_either_side = yes } #Komotini
						ROOT_can_grant_land = yes
					}
				}
			}
			var:341.owner = { save_event_target_as = komotini }
		}
	}

	option = { #give to owner of Chalcidice
		log = "[GetLogInfo]: event annex.1135 option annex.1135.a"
		name = annex.1135.a
		trigger = {
			has_event_target = chalcidice
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:chalcidice }
				OR = {
					is_ally_with = event_target:plovdiv
					is_ally_with = event_target:komotini
				}
			}
			modifier = {
				factor = 0.1
				event_target:chalcidice = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:chalcidice }
		769 = { transfer_state_and_notify = yes } #Serres
	}

	option = { #give to owner of Plovdiv
		log = "[GetLogInfo]: event annex.1135 option annex.1135.b"
		name = annex.1135.b
		trigger = {
			has_event_target = plovdiv
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:plovdiv }
				OR = {
					is_ally_with = event_target:chalcidice
					is_ally_with = event_target:komotini
				}
			}
			modifier = {
				factor = 0.1
				event_target:plovdiv = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:plovdiv }
		769 = { transfer_state_and_notify = yes } #Serres
	}

	option = { #give to owner of Komotini/Adrianople
		log = "[GetLogInfo]: event annex.1135 option annex.1135.c"
		name = annex.1135.c
		trigger = {
			has_event_target = komotini
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:komotini }
				OR = {
					is_ally_with = event_target:chalcidice
					is_ally_with = event_target:plovdiv
				}
			}
			modifier = {
				factor = 0.1
				event_target:komotini = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:komotini }
		184 = { transfer_if_owned = yes } #Komotini
		769 = { transfer_state_and_notify = yes } #Serres
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1135 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		769 = { transfer_state_and_notify = yes } #Serres
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1135 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { tag = OTT }
			184 = { remove_claim_and_add_core_of_ROOT = yes } #Komotini
			769 = { remove_claim_and_add_core_of_ROOT = yes } #Serres
		}
		else = {
			if = {
				limit = { 341 = { is_claim_or_core_of_ROOT = yes } }
				184 = { add_claim_of_ROOT = yes } #Komotini
			}
			769 = { add_claim_of_ROOT = yes } #Serres
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1135 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Kardzhali
	id = annex.1136
	title = annexation_1089
	desc = annexation_1089_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					184 = { is_claim_or_core_of_ROOT = yes } #Komotini
					212 = { is_claim_or_core_of_ROOT = yes } #Plovdiv
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				184 = { #Komotini
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:184.owner = { save_event_target_as = greece }
		}
		if = {
			limit = {
				212 = { #Plovdiv
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:greece }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:212.owner = { save_event_target_as = bulgaria }
		}
	}

	option = { #give to owner of Komotini
		log = "[GetLogInfo]: event annex.1136 option annex.europe.give_to_greece"
		name = annex.europe.give_to_greece
		trigger = {
			has_event_target = greece
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:greece }
				is_ally_with = event_target:bulgaria
			}
			modifier = {
				factor = 0.1
				event_target:greece = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		1089 = { transfer_state_and_notify = yes } #Kardzhali
	}

	option = { #give to owner of Plovdiv
		log = "[GetLogInfo]: event annex.1136 option annex.europe.give_to_bulgaria"
		name = annex.europe.give_to_bulgaria
		trigger = {
			has_event_target = bulgaria
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:bulgaria }
				is_ally_with = event_target:greece
			}
			modifier = {
				factor = 0.1
				event_target:bulgaria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		1089 = { transfer_state_and_notify = yes } #Kardzhali
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1136 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1089 = { transfer_state_and_notify = yes } #Kardzhali
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1136 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { tag = OTT }
			1089 = { remove_claim_and_add_core_of_ROOT = yes } #Kardzhali
		}
		else = {
			1089 = { add_claim_of_ROOT = yes } #Kardzhali
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1136 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Suceava
	id = annex.1137
	title = annexation_713
	desc = annexation_713_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					79 = { is_claim_or_core_of_ROOT = yes } #Moldavia
					AND = {
						OR = {
							original_tag = GAL
							original_tag = TRS
						}
						owns_state = 80 #Cernauti
					}
					AND = {
						OR = {
							original_tag = TRS
							AUS_is_unified = yes
						}
						OR = {
							owns_state = 80 #Cernauti
							76 = { is_claim_or_core_of_ROOT = yes } #Cluj
						}
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				79 = { #Moldavia
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:79.owner = { save_event_target_as = romania }
		}
		if = {
			limit = {
				var:80.owner = { #Cernauti
					NOT = { tag = event_target:romania }
					OR = {
						original_tag = GAL
						original_tag = TRS
						AUS_is_unified = yes
					}
					ROOT_can_grant_land = yes
				}
			}
			var:80.owner = { save_event_target_as = galicia }
		}
		if = {
			limit = {
				var:76.owner = { #Cluj
					NOT = { tag = event_target:romania }
					NOT = { tag = event_target:galicia }
					OR = {
						original_tag = TRS
						AUS_is_unified = yes
					}
					ROOT_can_grant_land = yes
				}
			}
			var:76.owner = { save_event_target_as = transylvania }
		}
	}

	option = { #Give to Romania
		log = "[GetLogInfo]: event annex.1137 option annex.europe.give_to_romania"
		name = annex.europe.give_to_romania
		trigger = {
			has_event_target = romania
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0.25
				NOT = { is_ally_with = event_target:romania }
			}
			modifier = {
				factor = 0.1
				event_target:romania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:romania }
		713 = { transfer_state_and_notify = yes } #Suceava
	}

	option = { #Give to Galicia
		log = "[GetLogInfo]: event annex.1137 option annex.europe.give_to_galicia"
		name = annex.europe.give_to_galicia
		trigger = {
			has_event_target = galicia
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:galicia }
				OR = {
					is_ally_with = event_target:romania
					is_ally_with = event_target:transylvania
				}
			}
			modifier = {
				factor = 0.1
				event_target:galicia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:galicia }
		713 = { transfer_state_and_notify = yes } #Suceava
	}

	option = { #Give to Transylvania
		log = "[GetLogInfo]: event annex.1137 option annex.europe.give_to_transylvania"
		name = annex.europe.give_to_transylvania
		trigger = {
			has_event_target = transylvania
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:transylvania }
				OR = {
					is_ally_with = event_target:romania
					is_ally_with = event_target:galicia
				}
			}
			modifier = {
				factor = 0.1
				event_target:transylvania = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:transylvania }
		713 = { transfer_state_and_notify = yes } #Suceava
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1137 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		713 = { transfer_if_owned = yes } #Suceava
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1137 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		713 = { add_claim_of_ROOT = yes } #Suceava
		if = {
			limit = {
				76 = { is_claim_or_core_of_ROOT = no } #Cluj
				79 = { is_claim_or_core_of_ROOT = no } #Moldavia
			}
			80 = { add_claim_of_ROOT = yes } #Cernauti
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1137 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Lwow
	id = annex.1138
	title = annexation_91
	desc = annexation_91_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = GAL } }
				GAL = {
					clear_cores_of_tag_if_possible = yes
					GAL_remove_karl_albrecht = yes
					activate_targeted_decision = { target = POL decision = GAL_unite_with_poland }
				}
			}
			if = {
				limit = {
					OR = {
						88 = { is_claim_or_core_of_ROOT = yes } #Krakow
						89 = { is_claim_or_core_of_ROOT = yes } #Stanislawow
						1088 = { is_claim_or_core_of_ROOT = yes } #Chelm
						AND = {
							792 = { is_claim_or_core_of_ROOT = yes } #Volhynia
							owns_state = 89 #Stanislawow
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					88 = { #Krakow
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:88.owner = { save_event_target_as = krakow }
			}
			if = {
				limit = {
					89 = { #Stanislawow
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:krakow }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:89.owner = { save_event_target_as = stanislawow }
			}
			if = {
				limit = {
					1088 = { #Chelm
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:krakow }
							NOT = { tag = event_target:stanislawow }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:1088.owner = { save_event_target_as = chelm }
			}
			if = {
				limit = {
					792 = { #Volhynia
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:krakow }
							NOT = { tag = event_target:stanislawow }
							NOT = { tag = event_target:chelm }
							89 = { annexations_required_state_is_owned_by_either_side = yes } #Stanislawow
							ROOT_can_grant_land = yes
						}
					}
				}
				var:792.owner = { save_event_target_as = volhynia }
			}
		}
	}

	option = { #Give to owner of Krakow
		log = "[GetLogInfo]: event annex.1138 option annex.europe.give_to_owner_of_krakow"
		name = annex.europe.give_to_owner_of_krakow
		trigger = {
			has_event_target = krakow
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:krakow }
				OR = {
					is_ally_with = event_target:stanislawow
					is_ally_with = event_target:chelm
					is_ally_with = event_target:volhynia
				}
			}
			modifier = {
				add = 30
				event_target:krakow = { owns_state = 1088 } #Chelm
			}
			modifier = {
				factor = 0.1
				event_target:krakow = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:krakow }
		91 = { transfer_state_and_notify = yes } #Lwow
	}

	option = { #Give to owner of Stanislawow
		log = "[GetLogInfo]: event annex.1138 option annex.1138.a"
		name = annex.1138.a
		trigger = {
			has_event_target = stanislawow
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:stanislawow }
				OR = {
					is_ally_with = event_target:krakow
					is_ally_with = event_target:chelm
				}
			}
			modifier = {
				factor = 0.1
				event_target:stanislawow = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:stanislawow }
		91 = { transfer_state_and_notify = yes } #Lwow
	}

	option = { #Give to owner of Chelm
		log = "[GetLogInfo]: event annex.1138 option annex.europe.give_to_owner_of_chelm"
		name = annex.europe.give_to_owner_of_chelm
		trigger = {
			has_event_target = chelm
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:chelm }
				OR = {
					is_ally_with = event_target:krakow
					is_ally_with = event_target:stanislawow
					is_ally_with = event_target:volhynia
				}
			}
			modifier = {
				factor = 0.1
				event_target:chelm = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:chelm }
		91 = { transfer_state_and_notify = yes } #Lwow
	}

	option = { #Give to owner of Volhynia
		log = "[GetLogInfo]: event annex.1138 option annex.europe.give_to_owner_of_volhynia"
		name = annex.europe.give_to_owner_of_volhynia
		trigger = {
			has_event_target = volhynia
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:volhynia }
				OR = {
					is_ally_with = event_target:krakow
					is_ally_with = event_target:chelm
				}
			}
			modifier = {
				factor = 0.1
				event_target:volhynia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:volhynia }
		91 = { transfer_state_and_notify = yes } #Lwow
		89 = { transfer_if_owned = yes } #Stanislawow
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1138 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		91 = { transfer_state_and_notify = yes } #Lwow
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1138 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		91 = { add_claim_of_ROOT = yes } #Lwow
		if = {
			limit = { 792 = { is_claim_or_core_of_ROOT = yes } } #Volhynia
			89 = { add_claim_of_ROOT = yes } #Stanislawow
		}
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
				}
			}
			91 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
			89 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1138 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Stanislawow
	id = annex.1139
	title = annexation_89
	desc = annexation_89_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = GAL } }
				GAL = {
					clear_cores_of_tag_if_possible = yes
					GAL_remove_karl_albrecht = yes
					activate_targeted_decision = { target = POL decision = GAL_unite_with_poland }
				}
			}
			if = {
				limit = {
					OR = {
						91 = { is_claim_or_core_of_ROOT = yes } #Lwow
						792 = { is_claim_or_core_of_ROOT = yes } #Volhynia
						AND = {
							AUS_is_unified = yes
							80 = { is_claim_or_core_of_ROOT = yes } #Cernauti
						}
					}
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					91 = { #Lwow
						annexations_state_owner_is_valid_grant_target = yes
						owner = { ROOT_can_grant_land = yes }
					}
				}
				var:91.owner = { save_event_target_as = lwow }
			}
			if = {
				limit = {
					792 = { #Volhynia
						annexations_state_owner_is_valid_grant_target = yes
						owner = {
							NOT = { tag = event_target:lwow }
							ROOT_can_grant_land = yes
						}
					}
				}
				var:792.owner = { save_event_target_as = volhynia }
			}
			if = {
				limit = {
					var:80.owner = { #Cernauti
						OR = {
							original_tag = GAL
							AUS_is_unified = yes
						}
						NOT = { tag = event_target:lwow }
						NOT = { tag = event_target:volhynia }
						ROOT_can_grant_land = yes
					}
				}
				var:80.owner = { save_event_target_as = cernauti }
			}
		}
	}

	option = { #Give to owner of Lwow
		log = "[GetLogInfo]: event annex.1139 option annex.europe.give_to_owner_of_lwow"
		name = annex.europe.give_to_owner_of_lwow
		trigger = {
			has_event_target = lwow
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:lwow }
				is_ally_with = event_target:volhynia
			}
			modifier = {
				factor = 0.1
				event_target:lwow = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:lwow }
		89 = { transfer_state_and_notify = yes } #Stanislawow
	}

	option = { #Give to owner of Volhynia
		log = "[GetLogInfo]: event annex.1139 option annex.europe.give_to_owner_of_volhynia"
		name = annex.europe.give_to_owner_of_volhynia
		trigger = {
			has_event_target = volhynia
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:volhynia }
				OR = {
					is_ally_with = event_target:galicia
					is_ally_with = event_target:poland
				}
			}
			modifier = {
				factor = 0.1
				event_target:volhynia = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:volhynia }
		89 = { transfer_state_and_notify = yes } #Stanislawow
	}

	option = { #Give to owner of Cernauti
		log = "[GetLogInfo]: event annex.1139 option annex.1139.a"
		name = annex.1139.a
		trigger = {
			has_event_target = cernauti
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = event_target:cernauti }
		89 = { transfer_state_and_notify = yes } #Stanislawow
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1139 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		89 = { transfer_state_and_notify = yes } #Stanislawow
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1139 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		89 = { add_claim_of_ROOT = yes } #Stanislawow
		if = {
			limit = {
				any_owned_state = {
					has_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
				}
			}
			89 = {
				set_state_flag = ukraine_state
				add_resistance = -10
				add_compliance = 5
				add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
			}
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1139 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of South Tyrol
	id = annex.1140
	title = annexation_39
	desc = annexation_39_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					153 = { is_claim_or_core_of_ROOT = yes } #North Tyrol
					783 = { is_claim_or_core_of_ROOT = yes } #Trentino
				}
			}
			save_event_target_as = can_annex
			if = {
				limit = {
					is_italian_tag = yes
					NOT = { has_government = national_populist }
				}
				save_event_target_as = AI_dont_annex
			}
		}
		if = {
			limit = {
				153 = { #North Tyrol
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:153.owner = { save_event_target_as = tyrol }
		}
		if = {
			limit = {
				783 = { #Trentino
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:tyrol }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:783.owner = { save_event_target_as = trentino }
		}
	}

	option = { #Give to owner of North Tyrol
		log = "[GetLogInfo]: event annex.1140 option annex.europe.give_to_owner_of_tyrol"
		name = annex.europe.give_to_owner_of_tyrol
		trigger = {
			has_event_target = tyrol
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					is_italian_tag = no
					has_government = national_populist
				}
			}
			modifier = {
				factor = 0.1
				event_target:tyrol = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:tyrol }
		39 = { transfer_state_and_notify = yes } #South Tyrol
	}

	option = { #Give to owner of Trentino
		log = "[GetLogInfo]: event annex.1140 option annex.1140.a"
		name = annex.1140.a
		trigger = {
			has_event_target = trentino
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				annexations_can_annex = yes
				OR = {
					is_italian_tag = no
					has_government = national_populist
				}
			}
			modifier = {
				factor = 0
				OR = {
					NOT = { is_ally_with = event_target:trentino }
					NOT = { event_target:trentino = { has_government = national_populist } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:trentino = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:trentino }
		39 = { transfer_state_and_notify = yes } #South Tyrol
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1140 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		39 = { transfer_state_and_notify = yes } #South Tyrol
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1140 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		ai_chance = {
			base = 100
			modifier = { #Non-NatPop Italy doesn't want South Tyrol
				factor = 0
				is_italian_tag = yes
				NOT = { has_government = national_populist }
			}
		}
		39 = { add_claim_of_ROOT = yes } #South Tyrol
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1140 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Silistria
	id = annex.1141
	title = annexation_77
	desc = annexation_77_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					46 = { is_claim_or_core_of_ROOT = yes } #Muntenia
					771 = { is_claim_or_core_of_ROOT = yes } #Varna
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				772 = { #Constantza
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:772.owner = { save_event_target_as = constantza }
		}
		if = {
			limit = {
				771 = { #Varna
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:constantza }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:771.owner = { save_event_target_as = varna }
		}
	}

	option = { #Give to owner of Constantza
		log = "[GetLogInfo]: event annex.1141 option annex.1141.a"
		name = annex.1141.a
		trigger = {
			has_event_target = constantza
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:constantza }
				is_ally_with = event_target:varna
				OR = {
					NOT = {
						original_tag = AUS
						original_tag = HUN
					}
					NOT = { event_target:varna = { original_tag = SER } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:constantza = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:constantza }
		77 = { transfer_state_and_notify = yes } #Silistria
	}

	option = { #Give to owner of Varna
		log = "[GetLogInfo]: event annex.1141 option annex.europe.give_to_owner_of_varna"
		name = annex.europe.give_to_owner_of_varna
		trigger = {
			has_event_target = varna
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:varna }
				is_ally_with = event_target:constantza
				OR = {
					NOT = {
						original_tag = AUS
						original_tag = HUN
					}
					NOT = { event_target:constantza = { original_tag = ROM } }
				}
			}
			modifier = {
				factor = 0.1
				event_target:varna = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:varna }
		77 = { transfer_state_and_notify = yes } #Silistria
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annex.1141 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		77 = { transfer_state_and_notify = yes } #Silistria
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1141 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		77 = { add_claim_of_ROOT = yes } #Silistria
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1141 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Adrianople
	id = annex.1142
	title = annexation_341
	desc = annexation_341_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					773 = { is_claim_or_core_of_ROOT = yes } #Constantinople
					184 = { is_claim_or_core_of_ROOT = yes } #Komotini
					AND = {
						731 = { is_claim_or_core_of_ROOT = yes } #Florina
						owns_state = 184 #Komotini
						owns_state = 769 #Serres
						owns_state = 989 #Chalcidice
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				773 = { #Constantinople
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:773.owner = { save_event_target_as = constantinople }
		}
		if = {
			limit = {
				184 = { #Komotini
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:constantinople }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:184.owner = { save_event_target_as = komotini }
		}
		else_if = {
			limit = {
				731 = { #Florina
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:constantinople }
						184 = { annexations_required_state_is_owned_by_either_side = yes } #Komotini
						769 = { annexations_required_state_is_owned_by_either_side = yes } #Serres
						989 = { annexations_required_state_is_owned_by_either_side = yes } #Chalcidice
						ROOT_can_grant_land = yes
					}
				}
			}
			var:731.owner = { save_event_target_as = florina }
		}
	}

	option = { #Give to owner of Constantinople
		log = "[GetLogInfo]: event annex.1142 option annex.1142.a"
		name = annex.1142.a
		trigger = {
			has_event_target = constantinople
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:constantinople }
				OR = {
					is_ally_with = event_target:komotini
					is_ally_with = event_target:florina
				}
			}
			modifier = {
				factor = 0.1
				event_target:constantinople = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:constantinople }
		341 = { transfer_state_and_notify = yes } #Adrianople
	}

	option = { #Give to owner of Komotini
		log = "[GetLogInfo]: event annex.1142 option annex.1142.b"
		name = annex.1142.b
		trigger = {
			has_event_target = komotini
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:komotini }
				OR = {
					is_ally_with = event_target:constantinople
					is_ally_with = event_target:florina
				}
			}
			modifier = {
				factor = 0.1
				event_target:komotini = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:komotini }
		341 = { transfer_state_and_notify = yes } #Adrianople
	}

	option = { #Give to owner of Florina
		log = "[GetLogInfo]: event annex.1142 option annex.1142.c"
		name = annex.1142.c
		trigger = {
			has_event_target = florina
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:florina }
				OR = {
					is_ally_with = event_target:constantinople
					is_ally_with = event_target:komotini
				}
			}
			modifier = {
				factor = 0.1
				event_target:florina = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:florina }
		184 = { transfer_if_owned = yes } #Komotini
		341 = { transfer_state_and_notify = yes } #Adrianople
		769 = { transfer_if_owned = yes } #Serres
		989 = { transfer_if_owned = yes } #Chalcidice
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1142 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		341 = { transfer_state_and_notify = yes } #Adrianople
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1142 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		if = {
			limit = { 989 = { is_claim_or_core_of_ROOT = yes } } #Chalcidice
			184 = { add_claim_of_ROOT = yes } #Komotini
			341 = { add_claim_of_ROOT = yes } #Adrianople
			769 = { add_claim_of_ROOT = yes } #Serres
		}
		else = {
			341 = { add_claim_of_ROOT = yes } #Adrianople
		}
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1142 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Northern Ireland
	id = annex.1143
	title = annexation_119
	desc = annexation_119_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = IRE
					AND = {
						annexations_britain_can_annex_overseas = yes
						owns_state = 133 #Lanark
					}
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = { IRE = { ROOT_can_grant_land_ignore_ideology = yes } }
			IRE = { save_event_target_as = ireland }
		}
		if = {
			limit = {
				126 = { #Greater London
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:ireland }
						owns_state = 133 #Lanark
						has_socialist_government = no
						ROOT_can_grant_land = yes
					}
				}
			}
			var:126.owner = { save_event_target_as = britain }
		}
	}

	option = { #Give to Ireland
		log = "[GetLogInfo]: event annex.1143 option annex.europe.give_to_ireland"
		name = annex.europe.give_to_ireland
		trigger = {
			has_event_target = ireland
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:ireland }
				is_ally_with = event_target:britain
				annexations_AI_will_consider_returning_colonies = yes
			}
			modifier = {
				factor = 0.1
				event_target:ireland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:ireland }
		119 = { transfer_state_and_notify = yes } #Northern Ireland
	}

	option = { #Give to Britain
		log = "[GetLogInfo]: event annex.1143 option annex.give_to_britain"
		name = annex.give_to_britain
		trigger = {
			has_event_target = britain
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				annexations_AI_will_consider_returning_colonies = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:britain }
				OR = {
					is_major = yes
					is_ally_with = event_target:ireland
				}
			}
			modifier = {
				factor = 0.1
				event_target:britain = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:britain }
		119 = { transfer_state_and_notify = yes } #Northern Ireland
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1143 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		119 = { transfer_state_and_notify = yes } #Northern Ireland
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1143 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		119 = { add_claim_of_ROOT = yes } #Northern Ireland
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1143 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}

country_event = { #Fate of Vorarlberg
	id = annex.1144
	title = annexation_942
	desc = annexation_942_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					151 = { is_claim_or_core_of_ROOT = yes } #Eastern Switzerland
					153 = { is_claim_or_core_of_ROOT = yes } #Tyrol
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				151 = { #Eastern Switzerland
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:151.owner = { save_event_target_as = switzerland }
		}
		if = {
			limit = {
				153 = { #Tyrol
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						NOT = { tag = event_target:switzerland }
						ROOT_can_grant_land = yes
					}
				}
			}
			var:153.owner = { save_event_target_as = austria }
		}
	}

	option = { #Give to owner of Eastern Switzerland
		log = "[GetLogInfo]: event annex.1144 option annex.europe.give_to_switzerland"
		name = annex.europe.give_to_switzerland
		trigger = {
			has_event_target = switzerland
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:switzerland }
				is_ally_with = event_target:austria
			}
			modifier = {
				factor = 0.1
				event_target:switzerland = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:switzerland }
		942 = { transfer_if_owned = yes } #Vorarlberg
	}

	option = { #Give to owner of Tyrol
		log = "[GetLogInfo]: event annex.1144 option annex.europe.give_to_austria"
		name = annex.europe.give_to_austria
		trigger = {
			has_event_target = austria
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:austria }
				is_ally_with = event_target:switzerland
			}
			modifier = {
				factor = 0.1
				event_target:austria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		942 = { transfer_if_owned = yes } #Vorarlberg
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1144 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		942 = { transfer_if_owned = yes } #Vorarlberg
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1144 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		942 = { add_claim_of_ROOT = yes } #Vorarlberg
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1144 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
	}

	after = {
		recheck_annexations = yes
	}
}
