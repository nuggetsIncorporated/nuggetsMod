###########################
# Shared Chinese Events
###########################

add_namespace = china_events

###########################
### ATTACK NOTIFICATION ###
###########################

country_event = { #Generic war notification
	id = china_events.0
	title = {
		text = china_events.0.t.target
		trigger = {
			NOT = { FROM = { is_ally_with = ROOT } }
		}
	}
	title = {
		text = china_events.0.t.ally_of_target
		trigger = {
			FROM = { is_ally_with = ROOT }
		}
	}

	desc = {
		text = china_events.0.d.target
		trigger = {
			NOT = { FROM = { is_ally_with = ROOT } }
		}
	}
	desc = {
		text = china_events.0.d.ally_of_target
		trigger = {
			FROM = { is_ally_with = ROOT }
		}
	}

	picture = GFX_report_event_CHI_intelligence

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.0 option china_events.0.a"
		name = china_events.0.a
		if = {
			limit = { NOT = { FROM = { is_ally_with = ROOT } } }
			every_other_country = {
				limit = {
					is_ally_with = ROOT
					is_ai = no
				}
				country_event = china_events.0
			}
		}
	}
}

#########################
### DEMAND SUBMISSION ###
#########################

country_event = { #FROM demands ROOT submit
	id = china_events.1
	title = china_events.1.t
	desc = china_events.1.d
	picture = GFX_report_event_QIE_soldiers_planning

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.1 option china_events.1.a"
		name = china_events.1.a #Yes
		trigger = {
			china_is_potential_government = no
			OR = {
				china_is_unaligned = yes
				AND = {
					FROM = { tag = NPA }
					OR = {
						has_country_leader = { character = HNN_tang_shengzhi }
						has_country_leader = { character = GXC_chen_lianbo }
						has_country_leader = { character = GXC_ma_ji }
					}
				}
				AND = {
					FROM = {
						tag = SHX
						has_country_leader = { character = SHX_yan_xishan }
						has_country_flag = SHX_yan_victory_over_gmj
					}
					has_country_leader = { character = HNN_tang_xiangming }
					OR = {
						QIE = { china_is_aligned_with_zhili = no }
						QIE = { exists = no }
					}
					OR = {
						SZC = { china_is_aligned_with_zhili = no }
						SZC = { exists = no }
					}
					LEP = { exists = no }
				}
			}
			is_subject = no
			if = {
				limit = {
					original_tag = ANQ
				}
				FROM = {
					china_alignment_left_kuomintang = no
					china_alignment_right_kuomintang = no
					china_alignment_manchu_qing = no
				}
			}
			if = {
				limit = {
					original_tag = SHD
				}
				FROM = {
					NOT = { tag = QIE }
					china_is_aligned_with_republicans = no
					china_is_aligned_with_zhili = no
				}
			}
			FROM = { china_is_aligned_with_manchu = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				###check for ANQ rules
				tag = ANQ
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = no }
					}
					AND = { #check for FNG
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = no }
					}
					AND = { #check for NPA
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_NPA }
						FROM = { NOT = { tag = NPA } }
					}
					AND = { #check for QIE
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_QIE }
						FROM = { NOT = { tag = QIE } }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = no }
					}
					#outright refuse if independent
					has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ANQ }
				}
			}
			modifier = {
				factor = 0
				###check if they are GXC and have a non-fitting forpol rule set
				tag = GXC
				NOT = { has_game_rule = { rule = GXC_forpol option = DEFAULT } }
				OR = {
					AND = { #check for FNG
						has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = no }
					}
					AND = { #check for LKMT
						has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_LKMT }
						FROM = { china_is_aligned_with_left_kmt = no }
					}
					AND = { #check for NPA
						OR = {
							has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_FORM_NPA }
							has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_NPA }
						}
						FROM = { NOT = { tag = NPA } }
					}
					AND = { #check for QIE
						has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_QIE }
						FROM = { NOT = { tag = QIE } }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = no }
					}
					#outright refuse if independent
					has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_GXC }
				}
			}
			modifier = {
				factor = 0
				###check if they are LEP and have a non-fitting forpol rule set
				tag = LEP
				NOT = { has_game_rule = { rule = LEP_forpol option = DEFAULT } }
				OR = {
					AND = { #check for QIE
						has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_QIE }
						FROM = { NOT = { tag = QIE } }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = no }
					}
					#outright refuse if independent
					has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_LEP }
				}
			}
			modifier = {
				factor = 0
				###check if they are SHX and have a non-fitting forpol rule set
				tag = SHX
				NOT = { has_game_rule = { rule = SHX_forpol option = DEFAULT } }
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = no }
					}
					AND = { #check for FNG
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = no }
					}
					AND = { #check for RKMT
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_RKMT }
						FROM = { china_is_aligned_with_right_kmt = no }
					}
					AND = { #check for LKMT
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_LKMT }
						FROM = { china_is_aligned_with_left_kmt = no }
					}
					AND = { #check for NPA
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_NPA }
						FROM = { NOT = { tag = NPA } }
					}
					AND = { #check for QIE
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_QIE }
						FROM = { NOT = { tag = QIE } }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = no }
					}
					#outright refuse if independent
					has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_SHX }
				}
			}
			modifier = {
				factor = 0
				###check for SHD rules
				tag = SHD
				OR = {
					AND = { #check for FNG
						has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = no }
					}
					AND = { #check for NPA
						has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_NPA }
						FROM = { NOT = { tag = NPA } }
					}
					#outright refuse if independent
					has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_SHD }
				}
			}
			modifier = {
				factor = 0
				###check if they are SZC and have a non-fitting forpol rule set
				tag = SZC
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = no }
					}
					AND = { #check for FNG
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = no }
					}
					AND = { #check for RKMT
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_RKMT }
						FROM = { china_is_aligned_with_right_kmt = no }
					}
					AND = { #check for LKMT
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_LKMT }
						FROM = { china_is_aligned_with_left_kmt = no }
					}
					AND = { #check for NPA
						OR = {
							has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FORM_NPA }
							has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_NPA }
						}
						FROM = { NOT = { tag = NPA } }
					}
					AND = { #check for QIE
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_QIE }
						FROM = { NOT = { tag = QIE } }
					}
					#outright refuse if independent
					has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_SZC }
				}
			}
			modifier = {
				factor = 0
				###check if they are YUN and have a non-fitting forpol rule set
				tag = YUN
				NOT = { has_game_rule = { rule = YUN_forpol option = DEFAULT } }
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = no }
					}
					AND = { #check for FNG
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = no }
					}
					AND = { #check for RKMT
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_RKMT }
						FROM = { china_is_aligned_with_right_kmt = no }
					}
					AND = { #check for LKMT
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_LKMT }
						FROM = { china_is_aligned_with_left_kmt = no }
					}
					AND = { #check for NPA
						OR = {
							has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FORM_NPA }
							has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_NPA }
						}
						FROM = { NOT = { tag = NPA } }
					}
					AND = { #check for QIE
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_QIE }
						FROM = { NOT = { tag = QIE } }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = no }
					}
				}
			}
			modifier = {
				factor = 0
				#Guominjun Shanxi never submits to QIE - traitors to Zhili and hates Monarchy
				tag = SHX
				has_country_flag = SHX_feng_victory_over_yan
				FROM = { tag = QIE }
			}
			modifier = {
				factor = 0
				china_is_unaligned = no
				china_compatible_alignment_to_FROM = no
			}
			modifier = {
				factor = 2
				has_opinion = { target = FROM value > 99 }
			}
			modifier = {
				factor = 1.2
				strength_ratio = { tag = FROM ratio < 1 }
			}
			modifier = {
				factor = 2
				strength_ratio = { tag = FROM ratio < 0.75 }
			}
		}
		FROM = {
			effect_tooltip = { china_puppet_ROOT_effect = yes }
			country_event = { id = china_events.2 hours = 8 }
		}
		if = {
			limit = {
				tag = SHX
				FROM = { tag = QIE }
				NOT = { has_completed_focus = SHX_recognise_gov }
			}
			if = {
				limit = { has_completed_focus = SHX_destiny }
				uncomplete_national_focus = {
					focus = SHX_out_of_beijing
					uncomplete_children = yes
				}
			}
			unlock_national_focus = SHX_out_of_beijing
			complete_national_focus = SHX_recognise_gov
		}
		if = {
			limit = {
				FROM = { is_in_faction_with = JAP }
				JAP = { is_faction_leader = yes }
			}
			set_country_flag = FNG_collaborated_with_japan
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.1 option china_events.1.b"
		name = china_events.1.b #No
		trigger = {
			china_is_potential_government = no
			OR = {
				china_is_unaligned = yes
				AND = {
					FROM = { tag = NPA }
					OR = {
						has_country_leader = { character = HNN_tang_shengzhi }
						has_country_leader = { character = GXC_chen_lianbo }
						has_country_leader = { character = GXC_ma_ji }
					}
				}
				AND = {
					FROM = {
						tag = SHX
						has_country_leader = { character = SHX_yan_xishan }
						has_country_flag = SHX_yan_victory_over_gmj
					}
					has_country_leader = { character = HNN_tang_xiangming }
					OR = {
						QIE = { china_is_aligned_with_zhili = no }
						QIE = { exists = no }
					}
					OR = {
						SZC = { china_is_aligned_with_zhili = no }
						SZC = { exists = no }
					}
					LEP = { exists = no }
				}
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				###check if they are ANQ and have a non-fitting forpol rule set
				tag = ANQ
				NOT = { has_game_rule = { rule = ANQ_forpol option = DEFAULT } }
				NOT = { has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ANQ } }
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = yes }
					}
					AND = { #check for FNG
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = yes }
					}
					AND = { #check for NPA
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_NPA }
						FROM = { tag = NPA }
					}
					AND = { #check for QIE
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_QIE }
						FROM = { tag = QIE }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = yes }
					}
				}
			}
			modifier = {
				factor = 0
				###check if they are LEP and have a non-fitting forpol rule set
				tag = LEP
				NOT = { has_game_rule = { rule = LEP_forpol option = DEFAULT } }
				NOT = { has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_LEP } }
				OR = {
					AND = { #check for QIE
						has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_QIE }
						FROM = { tag = QIE }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = yes }
					}
				}
			}
			modifier = {
				factor = 0
				###check if they are SHX and have a non-fitting forpol rule set
				tag = SHX
				NOT = { has_game_rule = { rule = SHX_forpol option = DEFAULT } }
				NOT = { has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_SHX } }
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = yes }
					}
					AND = { #check for FNG
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = yes }
					}
					AND = { #check for RKMT
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_RKMT }
						FROM = { china_is_aligned_with_right_kmt = yes }
					}
					AND = { #check for LKMT
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_LKMT }
						FROM = { china_is_aligned_with_left_kmt = yes }
					}
					AND = { #check for NPA
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_NPA }
						FROM = { tag = NPA }
					}
					AND = { #check for QIE
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_QIE }
						FROM = { tag = QIE }
						FROM = { china_is_aligned_with_manchu = no }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = yes }
					}
				}
			}
			modifier = {
				factor = 0
				###check if they are SHD and have a non-fitting forpol rule set
				tag = SHD
				NOT = { has_game_rule = { rule = SHD_forpol option = DEFAULT } }
				NOT = { has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_SHD } }
				OR = {
					AND = { #check for FNG
						has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = yes }
					}
					AND = { #check for NPA
						has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_NPA }
						FROM = { tag = NPA }
					}
				}
			}
			modifier = {
				factor = 0
				###check if they are SZC and have a non-fitting forpol rule set
				tag = SZC
				NOT = { has_game_rule = { rule = SZC_forpol option = DEFAULT } }
				NOT = { has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_SZC } }
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = yes }
					}
					AND = { #check for FNG
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = yes }
					}
					AND = { #check for RKMT
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_RKMT }
						FROM = { china_is_aligned_with_right_kmt = yes }
					}
					AND = { #check for LKMT
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_LKMT }
						FROM = { china_is_aligned_with_left_kmt = yes }
					}
					AND = { #check for NPA
						OR = {
							has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FORM_NPA }
							has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_NPA }
						}
						FROM = { tag = NPA }
					}
					AND = { #check for QIE
						has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_QIE }
						FROM = { tag = QIE }
						FROM = { china_is_aligned_with_manchu = no }
					}
				}
			}
			modifier = {
				factor = 0
				###check if they are YUN and have a non-fitting forpol rule set
				tag = YUN
				NOT = { has_game_rule = { rule = YUN_forpol option = DEFAULT } }
				OR = {
					AND = { #check for Feds
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FEDS }
						FROM = { china_is_aligned_with_federalists = yes }
					}
					AND = { #check for FNG
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FNG }
						FROM = { china_is_aligned_with_fengtian = yes }
					}
					AND = { #check for RKMT
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_RKMT }
						FROM = { china_is_aligned_with_right_kmt = yes }
					}
					AND = { #check for LKMT
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_LKMT }
						FROM = { china_is_aligned_with_left_kmt = yes }
					}
					AND = { #check for NPA
						OR = {
							has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FORM_NPA }
							has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_NPA }
						}
						FROM = { tag = NPA }
					}
					AND = { #check for QIE
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_QIE }
						FROM = { tag = QIE }
						FROM = { china_is_aligned_with_manchu = no }
					}
					AND = { #check for Zhili Exiles
						has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_ZHL }
						FROM = { china_is_aligned_with_zhili = yes }
					}
				}
			}
			modifier = {
				factor = 0.01 #so there will be a chance to pick this if path set
				FROM = { enemies_strength_ratio < 1 }
				strength_ratio = { tag = FROM ratio < 0.5 }
			}
			modifier = {
				factor = 0
				FROM = {
					tag = SHX
					has_country_leader = { character = SHX_yan_xishan }
					has_country_flag = SHX_yan_victory_over_gmj
				}
				has_country_leader = { character = HNN_tang_xiangming }
				OR = {
					QIE = { china_is_aligned_with_zhili = no }
					QIE = { exists = no }
				}
				OR = {
					SZC = { china_is_aligned_with_zhili = no }
					SZC = { exists = no }
				}
				LEP = { exists = no }
			}
			modifier = {
				factor = 0
				FROM = { china_is_the_unifier_of_china_trigger = yes }
			}
			modifier = {
				factor = 0
				is_in_faction_with = FROM
			}
			modifier = {
				factor = 1.2
				strength_ratio = { tag = ROOT ratio > 1 }
			}
			modifier = {
				factor = 2
				strength_ratio = { tag = ROOT ratio > 1.5 }
			}
			modifier = {
				factor = 10
				strength_ratio = { tag = ROOT ratio > 2 }
			}
			modifier = {
				factor = 0.5
				has_opinion = { target = FROM value > 199 }
			}
			modifier = {
				factor = 0.75
				has_opinion = { target = FROM value > 149 }
			}
			modifier = {
				factor = 0.75
				has_opinion = { target = FROM value > 49 }
			}
		}
		if = {
			limit = { is_in_faction_with = FROM }
			leave_faction = yes
		}
		custom_effect_tooltip = may_lead_to_war_with_FROM
		FROM = {
			country_event = { id = china_events.3 hours = 8 }
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.1 option china_events.1.c"
		name = china_events.1.c #They are delusional, surely
		trigger = {
			OR = {
				china_is_potential_government = yes
				AND = {
					china_is_unaligned = no
					NOT = {
						AND = {
							FROM = { tag = NPA }
							OR = {
								has_country_leader = { character = HNN_tang_shengzhi }
								has_country_leader = { character = GXC_chen_lianbo }
								has_country_leader = { character = GXC_ma_ji }
							}
						}
						AND = {
							FROM = {
								tag = SHX
								has_country_leader = { character = SHX_yan_xishan }
								has_country_flag = SHX_yan_victory_over_gmj
							}
							has_country_leader = { character = HNN_tang_xiangming }
							OR = {
								QIE = { china_is_aligned_with_zhili = no }
								QIE = { exists = no }
							}
							OR = {
								SZC = { china_is_aligned_with_zhili = no }
								SZC = { exists = no }
							}
							LEP = { exists = no }
						}
					}
				}
			}
		}
		if = {
			limit = { is_in_faction_with = FROM }
			leave_faction = yes
		}
		custom_effect_tooltip = may_lead_to_war_with_FROM
		FROM = {
			country_event = { id = china_events.3 hours = 8 }
		}
	}
}

country_event = { #FROM submits to ROOT
	id = china_events.2
	title = china_events.2.t
	desc = china_events.2.d
	picture = GFX_report_event_CHI_speech

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.2 option china_events.2.a"
		name = china_events.2.a
		china_puppet_FROM_effect = yes
		clear_decision_attack_AI = yes
		CHI_subject_accceptance_influence_effect = yes
	}
}

country_event = { #FROM refuses to submit to ROOT
	id = china_events.3
	title = china_events.3.t
	desc = china_events.3.d
	picture = GFX_report_event_CHI_warlord_cavalry

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.3 option china_events.3.a"
		name = china_events.3.a #Later
		ai_chance = { base = 0 }
		add_ai_strategy = {
			type = antagonize
			id = FROM
			value = 200
		}
		activate_targeted_decision = { decision = china_attack_decision target = FROM }
		clear_decision_attack_AI = yes
		CHI_subject_rejection_influence_effect = yes
	}

	option = {
		log = "[GetLogInfo]: event china_events.3 option china_events.3.b"
		name = china_events.3.b #Attack
		ai_chance = {
			base = 1
			modifier = {
				factor = 0
				country_is_in_dangerous_war = yes
			}
			modifier = {
				factor = 0
				FROM = { default_attack_AI_trigger = yes }
			}
		}
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
		clear_decision_attack_AI = yes
		CHI_subject_rejection_influence_effect = yes
	}
}

#####################
### JOINT STRIKES ###
#####################

country_event = { #event for either seeking alliance to other tags
	id = china_events.3000
	title = china_events.3000.t
	desc = china_events.3000.d

	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = { #We agree
		log = "[GetLogInfo]: event china_events.3000 option china_events.3000.a"
		name = china_events.3000.a
		activate_mission = china_joint_strike_GXC_attack_mission
		set_country_flag = { flag = china_attack_decision_one_month_cooldown days = 30 value = 1 }
		FROM = { country_event = { id = china_events.3001 } }
	}
	option = { #We refuse
		log = "[GetLogInfo]: event china_events.3000 option china_events.3000.b"
		name = china_events.3000.b
		ai_chance = { base = 0 }
		FROM = { country_event = { id = china_events.3002 } }
	}
}

country_event = { #return event for sucesseful agreement
	id = china_events.3001
	title = china_events.3001.t
	desc = china_events.3001.d

	picture = GFX_report_event_CHI_warlord_cavalry

	is_triggered_only = yes

	option = { #We prepare for the war
		log = "[GetLogInfo]: event china_events.3001 option china_events.3001.a"
		name = china_events.3001.a
	}
}

country_event = { #return event for denied agreement
	id = china_events.3002
	title = china_events.3002.t
	desc = china_events.3002.d

	picture = GFX_report_event_CHI_warlord_cavalry

	is_triggered_only = yes

	immediate = {
		hidden_effect = { remove_targeted_decision = { target = FROM decision = china_joint_strike_GXC_decision } }
	}

	option = { #cowards
		log = "[GetLogInfo]: event china_events.3002 option china_events.3002.a"
		name = china_events.3002.a
		clr_country_flag = china_sent_strike_offer
		activate_targeted_decision = { target = GXC decision = china_attack_decision }
	}
}

country_event = { #event for ROOT about FROM chickening out
	id = china_events.3003
	title = china_events.3003.t
	desc = china_events.3003.d

	picture = GFX_report_event_generic_diplomacy3
	is_triggered_only = yes

	trigger = {
		is_subject = no
	}

	immediate = {
		hidden_effect = { remove_targeted_decision = { target = FROM decision = china_joint_strike_GXC_decision } }
	}

	option = { #Well do it anyway
		log = "[GetLogInfo]: event china_events.3003 option china_events.3003.a"
		name = china_events.3003.a
		clr_country_flag = china_sent_strike_offer
		var:592.owner = {
			ROOT = {
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
				GXC = { setup_decision_attack_AI = yes }
			}
		}
	}
	option = { #Not happening
		log = "[GetLogInfo]: event china_events.3003 option china_events.3003.b"
		name = china_events.3003.b
		ai_chance = { base = 0 }
		clr_country_flag = china_sent_strike_offer
	}
}
country_event = { #Event for GXC to notice them of attacking faction
	id = china_events.3004
	title = china_events.3004.t
	desc = china_events.3004.d
	picture = GFX_report_event_CHI_warlord_cavalry
	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.3004 option china_events.3004.a"
		name = china_events.3004.a #We must prepare quickly!
		setup_decision_attack_AI = yes
	}
}

#################
### ALLIANCES ###
#################

country_event = { #FROM wants alliance with ROOT (THIS IS FROM POV OF THE POTENTIAL MASTER)
	id = china_events.4
	title = china_events.4.t
	desc = china_events.4.d
	picture = GFX_report_event_generic_diplomacy1

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.4 option china_events.4.a"
		name = china_events.4.a #Yes
		trigger = {
			FROM = { is_subject = no }
		}
		effect_tooltip = { china_puppet_FROM_effect = yes }
		CHI_subject_accceptance_influence_effect = yes
		FROM = {
			country_event = { id = china_events.5 hours = 8 }
		}
		if = {
			limit = {
				is_in_faction_with = JAP
				JAP = { is_faction_leader = yes }
			}
			FROM = { set_country_flag = FNG_collaborated_with_japan }
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.4 option china_events.4.b"
		name = china_events.4.b #No
		ai_chance = { base = 0 }
		if = {
			limit = { is_in_faction_with = FROM }
			leave_faction = yes
		}
		set_country_flag = china_refused_alliance_@FROM
		CHI_subject_rejection_influence_effect = yes
		FROM = {
			#if = {
			#	limit = { china_same_alignment_as_PREV = yes }
			#	var:country_leader = { china_set_character_alignment_unaligned = yes }
			#}
			if = {
				limit = { is_in_array = { china_possible_allies_array = ROOT } }
				remove_from_array = { china_possible_allies_array = ROOT }
			}
			if = {
				limit = { is_in_array = { china_possible_allies_array_northwest = ROOT } }
				remove_from_array = { china_possible_allies_array_northwest = ROOT }
			}
			set_country_flag = china_refused_alliance_@ROOT
			effect_tooltip = {
				add_opinion_modifier = {
					target = FROM
					modifier = KR_displeased
				}
			}
			country_event = { id = china_events.6 hours = 8 }
		}
	}
}

country_event = { #FROM accepts alliance with ROOT
	id = china_events.5
	title = china_events.5.t
	desc = china_events.5.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.5 option china_events.5.a"
		name = china_events.5.a
		FROM = { china_puppet_ROOT_effect = yes }
	}
}

country_event = { #FROM refuses alliance with ROOT
	id = china_events.6
	title = china_events.6.t
	desc = china_events.6.d
	picture = GFX_report_event_QIE_wtf

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.6 option china_events.6.a"
		name = china_events.6.a
		add_opinion_modifier = {
			target = FROM
			modifier = KR_displeased
		}
		add_ai_strategy = {
			type = contain
			id = FROM
			value = 100
		}
		add_ai_strategy = {
			type = antagonize
			id = FROM
			value = 100
		}
	}
}

country_event = { #FROM invites ROOT to alliance - THIS IS FROM THE POV OF THE POTENTIAL SUBJECT
	id = china_events.7
	title = china_events.7.t
	desc = china_events.7.d
	picture = GFX_report_event_QIE_cardgame

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.7 option china_events.7.a"
		name = china_events.7.a #Yes
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				#Will always say no if there is another faction out there with an identical alignment
				factor = 0
				CHN_no_aligned_unifier_exists_trigger = no
				china_same_alignment_as_FROM = no
				NOT = { china_alignment_southern_zhili = yes } #Handled seprately because of Ma Ji
			}
			modifier = {
				#Fixes edge case caused by Ma Ji
				factor = 0
				china_alignment_southern_zhili = yes
				SZH = {
					china_is_potential_government = yes
					exists = yes
					is_subject = no
				}
				china_same_alignment_as_FROM = no
			}
			modifier = {
				factor = 2
				#If potential leader is owning major cities, will swing odds of alignment
				FROM = {
					owns_any_state_of = {
						592 #Guangzhou
						608 #Beijing
						613 #Nanjing
						1048 #Wuhan
					}
				}
			}
			modifier = {
				factor = 1.5
				strength_ratio = { tag = FROM ratio < 0.8 }
			}
			modifier = { #Makes it a 3:12.5 ratio which comes out to approximately 25% chance to accept 75% chance to decline if Chen was supported in the League Collapse War
				factor = 0.02
				tag = LEP
				FROM = { has_country_flag = QIE_wu_backs_chen }
			}
			modifier = { #Makes it a 12:12.5 ratio which comes out to approximately 50% chance to accept 50% chance to decline if nobody was supported in the League Collapse War
				factor = 0.08
				tag = LEP
				OR = {
					FROM = {
						tag = QIE
						NOT = { has_country_flag = QIE_wu_backs_chen }
						NOT = { has_country_flag = QIE_wu_backs_qi }
					}
					FROM = { tag = SZC }
				}
			}
			modifier = {
				factor = 0
				tag = SZC
				OR = {
					FROM = { china_alignment_right_kuomintang = yes } #Will not join the Right Kuomintang
					AND = { #Lu Chao will not join the Federalists if CHI exists
						has_country_leader = { character = SZC_lu_chao }
						FROM = { china_alignment_federalists = yes }
						CHI = { exists = yes }
					}
					AND = {
						OR = { #Xiong Kewu, Liu Wenhui, and Deng Xihou will not join the LKMT if Chen Jiongming is still around
							has_country_leader = { character = SZC_xiong_kewu }
							has_country_leader = { character = SZC_liu_wenhui }
							has_country_leader = { character = SZC_deng_xihou }
						}
						FROM = { china_alignment_left_kuomintang = yes }
						event_target:original_liangguang = { GXC_chen_jiongming = { is_dead = no } }
					}
				}
			}
			modifier = {
				factor = 0
				china_same_alignment_as_FROM = no #Same alignment tags are supposed to ally each other no matter what forpol rule was set
				OR = {
					###check for ANQ rules
					AND = {
						tag = ANQ
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = no }
							}
							AND = { #check for FNG
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = no }
							}
							AND = { #check for NPA
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_NPA }
								FROM = { NOT = { tag = NPA } }
							}
							AND = { #check for QIE
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_QIE }
								FROM = { NOT = { tag = QIE } }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = no }
							}
							#outright refuse if independent
							has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ANQ }
						}
					}
					###check if they are GXC and have a non-fitting forpol rule set
					AND = {
						tag = GXC
						NOT = { has_game_rule = { rule = GXC_forpol option = DEFAULT } }
						OR = {
							AND = { #check for FNG
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = no }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = no }
							}
							AND = { #check for NPA
								OR = {
									has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_FORM_NPA }
									has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_NPA }
								}
								FROM = { NOT = { tag = NPA } }
							}
							AND = { #check for QIE
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_QIE }
								FROM = { NOT = { tag = QIE } }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = no }
							}
							#outright refuse if independent
							has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_GXC }
						}
					}
					###check if they are LEP and have a non-fitting forpol rule set
					AND = {
						tag = LEP
						NOT = { FROM = { has_country_flag = QIE_wu_backs_qi } } #LEP should always ally QIE if supported no matter what forpol rule was set
						NOT = { has_game_rule = { rule = LEP_forpol option = DEFAULT } }
						OR = {
							AND = { #check for QIE
								has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_QIE }
								FROM = { NOT = { tag = QIE } }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = no }
							}
							#outright refuse if independent
							has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_LEP }
						}
					}
					###check if they are SHX and have a non-fitting forpol rule set
					AND = {
						tag = SHX
						NOT = { has_game_rule = { rule = SHX_forpol option = DEFAULT } }
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = no }
							}
							AND = { #check for FNG
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = no }
							}
							AND = { #check for RKMT
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_RKMT }
								FROM = { china_is_aligned_with_right_kmt = no }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = no }
							}
							AND = { #check for NPA
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_NPA }
								FROM = { NOT = { tag = NPA } }
							}
							AND = { #check for QIE
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_QIE }
								FROM = { NOT = { tag = QIE } }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = no }
							}
							#outright refuse if independent
							has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_SHX }
						}
					}
					###check for SHD rules
					AND = {
						tag = SHD
						OR = {
							AND = { #check for FNG
								has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = no }
							}
							AND = { #check for NPA
								has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_NPA }
								FROM = { NOT = { tag = NPA } }
							}
							#outright refuse if independent
							has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_SHD }
						}
					}
					###check if they are SZC and have a non-fitting forpol rule set
					AND = {
						tag = SZC
						NOT = { #Ignore forpol rules under the following conditions to prevent the player from doing stuff they're not supposed to
							AND = { #Lu Chao is leader and LKMT are FROM
								has_country_leader = { character = SZC_lu_chao }
								FROM = { china_alignment_left_kuomintang = yes }
							}
							AND = { #Lu Chao is leader, Feds are FROM, and LKMT are dead
								has_country_leader = { character = SZC_lu_chao }
								FROM = { china_alignment_federalists = yes }
								CHI = { exists = no }
							}
							AND = { #Xiong Kewu, Liu Wenhui, or Deng Xihou are leader and Feds are FROM
								OR = {
									has_country_leader = { character = SZC_xiong_kewu }
									has_country_leader = { character = SZC_liu_wenhui }
									has_country_leader = { character = SZC_deng_xihou }
								}
								FROM = { china_alignment_federalists = yes }
							}
							AND = { #Xiong Kewu, Liu Wenhui, or Deng Xihou are leader and LKMT are FROM AND Chen Jiongming is not around
								OR = {
									has_country_leader = { character = SZC_xiong_kewu }
									has_country_leader = { character = SZC_liu_wenhui }
									has_country_leader = { character = SZC_deng_xihou }
								}
								FROM = { china_alignment_left_kuomintang = yes }
								event_target:original_liangguang = { GXC_chen_jiongming = { is_dead = yes } }
							}
						}
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = no }
							}
							AND = { #check for FNG
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = no }
							}
							AND = { #check for RKMT
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_RKMT }
								FROM = { china_is_aligned_with_right_kmt = no }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = no }
							}
							AND = { #check for NPA
								OR = {
									has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FORM_NPA }
									has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_NPA }
								}
								FROM = { NOT = { tag = NPA } }
							}
							AND = { #check for QIE
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_QIE }
								FROM = { NOT = { tag = QIE } }
							}
							#outright refuse if independent
							has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_SZC }
						}
					}
					###check if they are YUN and have a non-fitting forpol rule set
					AND = {
						tag = YUN
						NOT = { has_game_rule = { rule = YUN_forpol option = DEFAULT } }
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = no }
							}
							AND = { #check for FNG
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = no }
							}
							AND = { #check for RKMT
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_RKMT }
								FROM = { china_is_aligned_with_right_kmt = no }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = no }
							}
							AND = { #check for NPA
								OR = {
									has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FORM_NPA }
									has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_NPA }
								}
								FROM = { NOT = { tag = NPA } }
							}
							AND = { #check for QIE
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_QIE }
								FROM = { NOT = { tag = QIE } }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = no }
							}
						}
					}
				}
			}
		}
		FROM = {
			effect_tooltip = { china_puppet_ROOT_effect = yes }
			country_event = { id = china_events.8 hours = 8 }
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.7 option china_events.7.b"
		name = china_events.7.b #No
		ai_chance = {
			base = 50
			modifier = {
				#Will always say yes if you have identical alignments.
				factor = 0
				china_same_alignment_as_FROM = yes
			}
			modifier = {
				factor = 0.5
				#Tags that own a major city are less likely to naturally align.
				owns_any_state_of = {
					592 #Guangzhou
					608 #Beijing
					613 #Nanjing
					1048 #Wuhan
				}
			}
			modifier = {
				#If they out number you by over 2x, then will always align.
				factor = 0.5
				strength_ratio = { tag = FROM ratio < 0.5 }
			}
			modifier = {
				factor = 0
				tag = LEP
				FROM = { has_country_flag = QIE_wu_backs_qi }
			}
			modifier = {
				#Hunan should always accept alliance under the following conditions
				factor = 0
				tag = HNN
				OR = {
					AND = { #Zhao Hengti is leader, FROM are the Northern Zhili in Beijing, the other federalists aren't around
						china_alignment_federalists = yes
						FROM = {
							tag = QIE
							china_alignment_northern_zhili = yes
						}
						NOT = { GXC = { has_country_leader = { character = GXC_chen_jiongming } } }
						NOT = { SZC = { has_country_leader = { character = GXC_chen_jiongming } } }
						NOT = { YUN = { has_country_leader = { character = YUN_tang_jiyao } } }
					}
					AND = { #Tang Shengzhi is leader and
						china_alignment_left_kuomintang = yes
						OR = {
							AND = { #FROM are the RKMT and the LKMT don't exist
								NOT = { country_exists = LKT }
								FROM = { china_alignment_right_kuomintang = yes }
							}
							AND = { #FROM are the Federalists and both the LKMT and RKMT don't exist
								NOT = { country_exists = LKT }
								NOT = { country_exists = RKT }
								FROM = { china_alignment_federalists = yes }
							}
						}
					}
					AND = { #Cheng Qian is leader, FROM are the LKMT, and the RKMT don't exist
						china_alignment_right_kuomintang = yes
						NOT = { country_exists = RKT }
						FROM = {
							china_alignment_left_kuomintang = yes
						}
					}
					AND = { #Tang Xiangming is leader, FROM are the Southern Zhili, and the Northern Zhili don't exist
						china_alignment_northern_zhili = yes
						NOT = { country_exists = NZH }
						FROM = {
							china_alignment_southern_zhili = yes
						}
					}
				}
			}
			modifier = {
				#Sichuan should always accept alliance under the following conditions
				factor = 0
				tag = SZC
				OR = {
					AND = { #Lu Chao is leader and LKMT are FROM
						has_country_leader = { character = SZC_lu_chao }
						FROM = { china_alignment_left_kuomintang = yes }
					}
					AND = { #Lu Chao is leader, Feds are FROM, and LKMT are dead
						has_country_leader = { character = SZC_lu_chao }
						FROM = { china_alignment_federalists = yes }
						CHI = { exists = no }
					}
					AND = { #Xiong Kewu, Liu Wenhui, or Deng Xihou are leader and Feds are FROM
						OR = {
							has_country_leader = { character = SZC_xiong_kewu }
							has_country_leader = { character = SZC_liu_wenhui }
							has_country_leader = { character = SZC_deng_xihou }
						}
						FROM = { china_alignment_federalists = yes }
					}
					AND = { #Xiong Kewu, Liu Wenhui, or Deng Xihou are leader and LKMT are FROM AND Chen Jiongming is not around
						OR = {
							has_country_leader = { character = SZC_xiong_kewu }
							has_country_leader = { character = SZC_liu_wenhui }
							has_country_leader = { character = SZC_deng_xihou }
						}
						FROM = { china_alignment_left_kuomintang = yes }
						event_target:original_liangguang = { GXC_chen_jiongming = { is_dead = yes } }
					}
				}
			}
			modifier = {
				factor = 0
				CHN_no_aligned_unifier_exists_trigger = yes #Tags are supposed to always say no if theres a same alignment unifier no matter what forpol rule was set
				OR = {
					###check for ANQ rules
					AND = {
						tag = ANQ
						NOT = { has_game_rule = { rule = ANQ_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ANQ } }
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = yes }
							}
							AND = { #check for FNG
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = yes }
							}
							AND = { #check for NPA
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_NPA }
								FROM = { tag = NPA }
							}
							AND = { #check for QIE
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_QIE }
								FROM = { tag = QIE }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = ANQ_forpol option = ANQ_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = yes }
							}
						}
					}
					###check if they are GXC and have a non-fitting forpol rule set
					AND = {
						tag = GXC
						NOT = { has_game_rule = { rule = GXC_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_GXC } }
						OR = {
							AND = { #check for FNG
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = yes }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = yes }
							}
							AND = { #check for NPA
								OR = {
									has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_FORM_NPA }
									has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_NPA }
								}
								FROM = { tag = NPA }
							}
							AND = { #check for QIE
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_QIE }
								FROM = { tag = QIE }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = GXC_forpol option = GXC_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = yes }
							}
						}
					}
					###check if they are LEP and have a non-fitting forpol rule set
					AND = {
						tag = LEP
						NOT = { has_game_rule = { rule = LEP_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_LEP } }
						OR = {
							AND = { #check for QIE
								has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_QIE }
								FROM = { tag = QIE }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = LEP_forpol option = LEP_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = yes }
							}
						}
					}
					###check if they are SHX and have a non-fitting forpol rule set
					AND = {
						tag = SHX
						NOT = { has_game_rule = { rule = SHX_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_SHX } }
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = yes }
							}
							AND = { #check for FNG
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = yes }
							}
							AND = { #check for RKMT
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_RKMT }
								FROM = { china_is_aligned_with_right_kmt = yes }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = yes }
							}
							AND = { #check for NPA
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_NPA }
								FROM = { tag = NPA }
							}
							AND = { #check for QIE
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_QIE }
								FROM = { tag = QIE }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = SHX_forpol option = SHX_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = yes }
							}
						}
					}
					###check for SHD rules
					AND = {
						tag = SHD
						NOT = { has_game_rule = { rule = SHD_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_SHD } }
						OR = {
							AND = { #check for FNG
								has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = yes }
							}
							AND = { #check for NPA
								has_game_rule = { rule = SHD_forpol option = SHD_FORPOL_NPA }
								FROM = { tag = NPA }
							}
						}
					}
					###check if they are SZC and have a non-fitting forpol rule set
					AND = {
						tag = SZC
						NOT = {
							FROM = { china_alignment_right_kuomintang = yes } #Will not join the Right Kuomintang no matter what rule is set
							AND = { #Lu Chao will not join the Federalists if CHI exists no matter what rule is set
								has_country_leader = { character = SZC_lu_chao }
								FROM = { china_alignment_federalists = yes }
								CHI = { exists = yes }
							}
							AND = {
								OR = { #Xiong Kewu, Liu Wenhui, and Deng Xihou will not join the LKMT if Chen Jiongming is still around no matter what rule is set
									has_country_leader = { character = SZC_xiong_kewu }
									has_country_leader = { character = SZC_liu_wenhui }
									has_country_leader = { character = SZC_deng_xihou }
								}
								FROM = { china_alignment_left_kuomintang = yes }
								event_target:original_liangguang = { GXC_chen_jiongming = { is_dead = no } }
							}
						}
						NOT = { has_game_rule = { rule = SZC_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_SZC } }
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = yes }
							}
							AND = { #check for FNG
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = yes }
							}
							AND = { #check for RKMT
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_RKMT }
								FROM = { china_is_aligned_with_right_kmt = yes }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = yes }
							}
							AND = { #check for NPA
								OR = {
									has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_FORM_NPA }
									has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_NPA }
								}
								FROM = { tag = NPA }
							}
							AND = { #check for QIE
								has_game_rule = { rule = SZC_forpol option = SZC_FORPOL_QIE }
								FROM = { tag = QIE }
							}
						}
					}
					###check if they are YUN and have a non-fitting forpol rule set
					AND = {
						tag = YUN
						NOT = { has_game_rule = { rule = YUN_forpol option = DEFAULT } }
						OR = {
							AND = { #check for Feds
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FEDS }
								FROM = { china_is_aligned_with_federalists = yes }
							}
							AND = { #check for FNG
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FNG }
								FROM = { china_is_aligned_with_fengtian = yes }
							}
							AND = { #check for RKMT
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_RKMT }
								FROM = { china_is_aligned_with_right_kmt = yes }
							}
							AND = { #check for LKMT
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_LKMT }
								FROM = { china_is_aligned_with_left_kmt = yes }
							}
							AND = { #check for NPA
								OR = {
									has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_FORM_NPA }
									has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_NPA }
								}
								FROM = { tag = NPA }
							}
							AND = { #check for QIE
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_QIE }
								FROM = { tag = QIE }
							}
							AND = { #check for Zhili Exiles
								has_game_rule = { rule = YUN_forpol option = YUN_FORPOL_ZHL }
								FROM = { china_is_aligned_with_zhili = yes }
							}
						}
					}
				}
			}
			modifier = {
				#Will always say yes if FROM has already united China
				factor = 0
				FROM = { china_is_the_unifier_of_china_trigger = yes }
			}
		}
		set_country_flag = china_refused_alliance_@FROM
		#if = {
		#	limit = { china_same_alignment_as_FROM = yes }
		#	var:country_leader = { china_set_character_alignment_unaligned = yes }
		#}
		if = {
			limit = { is_in_array = { china_possible_allies_array = FROM } }
			remove_from_array = { china_possible_allies_array = FROM }
		}
		if = {
			limit = { is_in_array = { china_possible_allies_array_northwest = FROM } }
			remove_from_array = { china_possible_allies_array_northwest = FROM }
		}
		if = {
			limit = {
				OR = {
					tag = ANQ
					tag = LEP
				}
				has_cosmetic_tag = LSEP_QIE
				FROM = { has_cosmetic_tag = QIE_government_qing }
			}
			set_cosmetic_tag = LSEP_REP
		}
		else_if = {
			limit = {
				tag = LEP
				has_cosmetic_tag = LEP_LEP
				FROM = { has_cosmetic_tag = QIE_government_qing }
			}
			set_cosmetic_tag = LEP_LEP_REP
		}
		else_if = {
			limit = {
				tag = SHD
				has_country_leader = { character = SHD_qu_yingguang }
				FROM = { has_cosmetic_tag = QIE_government_qing }
			}
			set_cosmetic_tag = SHD_REP
		}
		else_if = {
			limit = {
				tag = HNN
				has_cosmetic_tag = HNN_zhili_monarchy
				FROM = { has_cosmetic_tag = QIE_government_qing }
			}
			set_cosmetic_tag = HNN_zhili_republic
		}
		FROM = {
			set_country_flag = china_refused_alliance_@ROOT
			effect_tooltip = {
				add_opinion_modifier = {
					target = FROM
					modifier = KR_displeased
				}
			}
			country_event = { id = china_events.9 hours = 8 }
		}
	}
}

country_event = { #FROM accepts alliance with ROOT
	id = china_events.8
	title = china_events.8.t
	desc = china_events.8.d
	picture = GFX_report_event_YUN_KMT_march

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.8 option china_events.8.a"
		name = china_events.8.a
		china_puppet_FROM_effect = yes
		CHI_subject_accceptance_influence_effect = yes
	}
}

country_event = { #FROM refuses alliance with ROOT
	id = china_events.9
	title = china_events.9.t
	desc = china_events.9.d
	picture = GFX_report_event_YUN_army

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.9 option china_events.9.a"
		name = china_events.9.a
		activate_targeted_decision = { target = FROM decision = china_attack_decision }
		add_opinion_modifier = {
			target = FROM
			modifier = KR_displeased
		}
		add_ai_strategy = {
			type = antagonize
			id = FROM
			value = 200
		}
		CHI_subject_rejection_influence_effect = yes
	}
}

##########################
### PUPPET INTEGRATION ###
##########################

country_event = { #FROM requests our integration
	id = china_events.10
	title = china_events.10.t

	desc = {
		text = china_events.10.d.integration_level_1
		trigger = {
			NOT = { has_autonomy_state = autonomous_governorate }
			NOT = { has_autonomy_state = governorate }
			NOT = { has_autonomy_state = integrated_governorate }
		}
	}
	desc = {
		text = china_events.10.d.integration_level_2
		trigger = { has_autonomy_state = autonomous_governorate }
	}
	desc = {
		text = china_events.10.d.integration_level_3
		trigger = { has_autonomy_state = governorate }
	}
	desc = {
		text = china_events.10.d.integration_final
		trigger = { has_autonomy_state = integrated_governorate }
	}

	picture = GFX_report_event_CHI_riot_police

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.10 option china_events.10.a"
		name = china_events.10.a
		ai_chance = {
			base = 0
			modifier = {
				FROM = { ROOT = { set_temp_variable = { acceptance = mtth:china_integration_acceptance_chance } } }
				always = yes
				add = var:acceptance
			}
		}
		effect_tooltip = { activate_mission = china_integration_timer }
	}

	option = {
		log = "[GetLogInfo]: event china_events.10 option china_events.10.b"
		name = china_events.10.b
		ai_chance = {
			base = 0
			modifier = {
				FROM = { ROOT = { set_temp_variable = { refusal = mtth:china_integration_refusal_chance } } }
				always = yes
				add = var:refusal
			}
		}
		hidden_effect = { remove_mission = china_integration_timer }
		if = {
			limit = { china_compatible_alignment_to_FROM = yes }
			add_stability = -0.15
			add_political_power = -100
			#if = {
			#	limit = { china_same_alignment_as_FROM = yes }
			#	var:country_leader = { china_set_character_alignment_unaligned = yes }
			#}
		}
		set_country_flag = china_revolted_against_@FROM
		create_wargoal = {
			target = FROM
			type = topple_government
		}
		china_break_puppet_effect = yes
		FROM = {
			if = {
				limit = { is_in_array = { china_possible_allies_array = ROOT } }
				remove_from_array = { china_possible_allies_array = ROOT }
			}
			if = {
				limit = { is_in_array = { china_possible_allies_array_northwest = ROOT } }
				remove_from_array = { china_possible_allies_array_northwest = ROOT }
			}
			effect_tooltip = {
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
			if = {
				limit = { NOT = { any_other_country = { has_country_flag = china_revolted_against_@FROM } } }
				country_event = { id = china_events.13 hours = 8 }
			}
			else = {
				country_event = { id = china_events.15 hours = 8 }
			}
		}
	}
}

country_event = { #Overlord increases integration
	id = china_events.11
	title = china_events.11.t

	desc = {
		text = china_events.11.d.integration_level_1
		trigger = {
			NOT = { has_autonomy_state = autonomous_governorate }
			NOT = { has_autonomy_state = governorate }
			NOT = { has_autonomy_state = integrated_governorate }
		}
	}
	desc = {
		text = china_events.11.d.integration_level_2
		trigger = { has_autonomy_state = autonomous_governorate }
	}
	desc = {
		text = china_events.11.d.integration_level_3
		trigger = { has_autonomy_state = governorate }
	}
	desc = {
		text = china_events.11.d.integration_final
		trigger = { has_autonomy_state = integrated_governorate }
	}

	picture = GFX_report_event_YUN_inspection

	is_triggered_only = yes

	immediate = {
		save_event_target_as = target
	}

	option = {
		log = "[GetLogInfo]: event china_events.11 option china_events.11.a"
		name = china_events.11.a
		hidden_effect = { overlord = { country_event = china_events.12 } }
		effect_tooltip = {
			if = {
				limit = { has_autonomy_state = integrated_governorate }
				overlord = {
					add_collaboration = { target = ROOT value = 0.05 }
					china_integrate_TARGET_effect = yes
				}
			}
			else_if = {
				limit = { has_autonomy_state = governorate }
				overlord = {
					add_collaboration = { target = ROOT value = 0.05 }
					set_autonomy = {
						target = event_target:target
						autonomy_state = integrated_governorate
						end_wars = no
					}
				}
			}
			else_if = {
				limit = { has_autonomy_state = autonomous_governorate }
				overlord = {
					add_collaboration = { target = ROOT value = 0.05 }
					set_autonomy = {
						target = event_target:target
						autonomy_state = governorate
						end_wars = no
					}
				}
			}
			else = {
				overlord = {
					add_collaboration = { target = ROOT value = 0.05 }
					set_autonomy = {
						target = event_target:target
						autonomy_state = autonomous_governorate
						end_wars = no
					}
				}
			}
		}
	}
}

country_event = { #Increased Integration of FROM
	id = china_events.12
	title = china_events.12.t

	desc = {
		text = china_events.12.d.integration_level_1
		trigger = {
			FROM = {
				NOT = { has_autonomy_state = autonomous_governorate }
				NOT = { has_autonomy_state = governorate }
				NOT = { has_autonomy_state = integrated_governorate }
			}
		}
	}
	desc = {
		text = china_events.12.d.integration_level_2
		trigger = { FROM = { has_autonomy_state = autonomous_governorate } }
	}
	desc = {
		text = china_events.12.d.integration_level_3
		trigger = { FROM = { has_autonomy_state = governorate } }
	}
	desc = {
		text = china_events.12.d.integration_final
		trigger = { FROM = { has_autonomy_state = integrated_governorate } }
	}

	picture = GFX_report_event_YUN_inspection

	is_triggered_only = yes

	immediate = {
		FROM = { save_event_target_as = target }
	}

	option = {
		log = "[GetLogInfo]: event china_events.12 option china_events.12.a"
		name = china_events.12.a
		add_collaboration = { target = FROM value = 0.05 }
		if = {
			limit = { FROM = { has_autonomy_state = integrated_governorate } }
			china_integrate_TARGET_effect = yes
		}
		else = {
			FROM = { get_current_government_type = yes }
			if = {
				limit = { FROM = { has_autonomy_state = governorate } }
				set_autonomy = {
					target = FROM
					autonomy_state = integrated_governorate
					end_wars = no
				}
			}
			else_if = {
				limit = { FROM = { has_autonomy_state = autonomous_governorate } }
				set_autonomy = {
					target = FROM
					autonomy_state = governorate
					end_wars = no
				}
			}
			else = {
				set_autonomy = {
					target = FROM
					autonomy_state = autonomous_governorate
					end_wars = no
				}
			}
			FROM = { restore_previous_government_type = yes }
		}
	}
}

country_event = { #Clique refused integration
	id = china_events.13
	title = china_events.13.t
	desc = china_events.13.d
	picture = GFX_report_event_SHX_feng_advisors

	is_triggered_only = yes

	immediate = {
		set_country_flag = { flag = china_central_plains_war_might_happen days = 30 value = 1 }
	}

	option = {
		log = "[GetLogInfo]: event china_events.13 option china_events.13.a"
		name = china_events.13.a #Attack
		effect_tooltip = {
			FROM = { china_break_puppet_effect = yes }
		}
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
		every_subject_country = {
			limit = {
				OR = {
					has_autonomy_state = associated_governorate
					has_autonomy_state = autonomous_governorate
					has_autonomy_state = governorate
					has_autonomy_state = integrated_governorate
				}
			}
			country_event = { id = china_events.14 days = 1 random_days = 2 }
		}
	}
}

country_event = { #FROM.FROM Revolts against FROM
	id = china_events.14
	title = china_events.14.t
	desc = china_events.14.d
	picture = GFX_report_event_SHX_feng_soldiers

	is_triggered_only = yes

	immediate = { FROM = { save_event_target_as = previous_overlord } }

	option = {
		log = "[GetLogInfo]: event china_events.14 option china_events.14.a"
		name = china_events.14.a #Side with FROM.FROM
		ai_chance = {
			base = 0
			modifier = {
				FROM = { ROOT = { set_temp_variable = { refusal = mtth:china_integration_refusal_chance } } }
				always = yes
				add = var:refusal
			}
			modifier = {
				factor = 0
				FROM.FROM = { china_compatible_alignment_to_PREV = no }
				FROM = { china_same_alignment_as_PREV = yes }
			}
		}
		china_break_puppet_effect = yes
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
		FROM = {
			if = {
				limit = { is_in_array = { china_possible_allies_array = ROOT } }
				remove_from_array = { china_possible_allies_array = ROOT }
			}
			if = {
				limit = { is_in_array = { china_possible_allies_array_northwest = ROOT } }
				remove_from_array = { china_possible_allies_array_northwest = ROOT }
			}
			effect_tooltip = {
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
			country_event = china_events.15
		}
		FROM.FROM = {
			country_event = china_events.16
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.14 option china_events.14.b"
		name = china_events.14.b #Side with FROM
		ai_chance = {
			base = 20
			modifier = {
				FROM = { ROOT = { set_temp_variable = { refusal = mtth:china_integration_acceptance_chance } } }
				always = yes
				add = var:acceptance
			}
			modifier = {
				factor = 0
				FROM.FROM = { china_same_alignment_as_PREV = yes }
				FROM = { china_compatible_alignment_to_PREV = no }
			}
		}
	}
}

country_event = { #Clique sides with revolter
	id = china_events.15
	title = china_events.15.t
	desc = china_events.15.d
	picture = GFX_report_event_SHX_feng_looking_in_telescope

	immediate = {
		modify_country_flag = { flag = china_central_plains_war_might_happen value = 1 }
		if = {
			limit = {
				has_country_flag = { flag = china_central_plains_war_might_happen value > 2 }
				NOT = { has_country_flag = china_central_plains_war_happened }
			}
			set_country_flag = china_central_plains_war_happened
			hidden_effect = { news_event = { id = china_events.17 days = 4 } }
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.15 option china_events.15.a"
		name = china_events.15.a #Attack
		FROM = {
			effect_tooltip = {
				china_break_puppet_effect = yes
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
		}
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
	}
}

country_event = { #Clique sides with us
	id = china_events.16
	title = china_events.16.t
	desc = china_events.16.d
	picture = GFX_report_event_QIE_warlord_soldiers

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.16 option china_events.16.a"
		name = china_events.16.a #Attack
		china_puppet_FROM_effect = yes
	}
}

news_event = { #Central Plains War
	id = china_events.17
	immediate = { log = "[GetLogInfo]: event china_events.17" }
	title = china_events.17.t
	desc = china_events.17.d #text set by scripted loc
	picture = GFX_news_event_SIK_western_china

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.17.a #text set by scripted loc
	}
}

####################
### UNITED FRONT ###
####################
country_event = { #United Front ends
	id = china_events.23
	title = china_events.23.t
	desc = china_events.23.d
	picture = GFX_report_event_CHI_infiltration

	trigger = {
		tag = CUF
		is_faction_leader = yes
		NOT = {
			any_enemy_country = {
				is_major = yes
				num_of_controlled_factories > 50
				is_chinese_tag = no
			}
		}
	}

	immediate = {
		clear_global_event_target = china_united_front_leader
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.23 option china_events.23.a"
		name = china_events.23.a
		clear_rule = { can_not_declare_war = yes }
		dismantle_faction = yes
		every_other_country = {
			limit = { has_country_flag = was_in_united_front }
			set_truce = { target = FROM days = 120 }
			hidden_effect = {
				every_other_country = {
					limit = { has_country_flag = was_in_united_front }
					set_truce = { target = PREV days = 120 }
				}
			}
		}
		every_other_country = {
			limit = {
				OR = {
					has_country_flag = was_in_united_front
					has_variable = china_was_at_war_with_before_joining_front^num
				}
			}
			country_event = china_events.24
		}
		every_other_country = {
			limit = {
				is_in_array = { ROOT.china_was_at_war_with_before_joining_front = THIS }
				NOT = { is_subject_of = ROOT }
			}
			ROOT = {
				create_wargoal = {
					target = PREV
					type = annex_everything
				}
			}
		}
		clr_country_flag = was_in_united_front
		clear_array = china_was_at_war_with_before_joining_front
	}
}

country_event = { #United Front disbanded
	id = china_events.24
	title = china_events.24.t
	desc = china_events.24.d
	picture = GFX_report_event_FNG_army1

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { has_country_flag = was_in_united_front }
				clear_rule = { can_not_declare_war = yes }
			}
			every_possible_country = {
				limit = { has_country_flag = china_united_front_can_join_factions }
				clr_country_flag = china_united_front_can_join_factions
				clear_rule = { can_join_factions = yes }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.24 option china_events.24.a"
		name = china_events.24.a
		if = {
			limit = { has_country_flag = was_in_united_front }
			effect_tooltip = { clear_rule = { can_not_declare_war = yes } }
			clr_country_flag = was_in_united_front
		}
		every_other_country = {
			limit = {
				is_in_array = { ROOT.china_was_at_war_with_before_joining_front = THIS }
				NOT = { is_subject_of = ROOT }
			}
			ROOT = {
				create_wargoal = {
					target = PREV
					type = annex_everything
				}
			}
		}
		clear_array = china_was_at_war_with_before_joining_front
	}
}

country_event = { #United Front formed
	id = china_events.25
	title = china_events.25.t
	desc = china_events.25.d
	picture = GFX_report_event_QIE_youth_league

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.25 option china_events.25.a"
		name = china_events.25.a
		effect_tooltip = { set_rule = { can_join_factions = yes } }
		add_ideas = CHN_calls_for_a_united_front_idea
	}
}

news_event = { #United Front news event
	id = china_events.26
	immediate = { log = "[GetLogInfo]: event china_events.26" }
	title = china_events.26.t
	desc = china_events.26.d
	picture = GFX_news_event_chinese_soldiers_march

	is_triggered_only = yes

	option = {
		name = china_events.26.a
	}
}

country_event = { #Chinese tag: clique offers ceasefire
	id = china_events.27
	title = china_events.27.t
	desc = china_events.27.d
	picture = GFX_report_event_CHI_machinegun_fighting

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.27 option china_events.27.a"
		name = china_events.27.a #Accept
		if = {
			limit = { has_offensive_war_with = FROM }
			add_to_array = { china_was_at_war_with_before_joining_front = FROM }
		}
		else = {
			add_to_array = { FROM.china_was_at_war_with_before_joining_front = ROOT }
		}
		effect_tooltip = {
			every_subject_country = {
				limit = {
					has_capitulated = yes
					capital_scope = { controller = { is_ally_with = FROM } }
				}
				remove_puppet_and_leave_faction = yes
			}
			every_controlled_state = {
				limit = { owner = { is_ally_with = FROM } }
				transfer_state_to = ROOT
			}
		}
		FROM = {
			effect_tooltip = {
				every_subject_country = {
					limit = {
						has_capitulated = yes
						capital_scope = { controller = { is_ally_with = ROOT } }
					}
					remove_puppet_and_leave_faction = yes
				}
				every_controlled_state = {
					limit = { owner = { is_ally_with = ROOT } }
					transfer_state_to = FROM
				}
			}
			country_event = { id = china_events.28 hours = 8 }
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.27 option china_events.27.b"
		name = china_events.27.b #Refuse
		ai_chance = { base = 0 }
		set_country_flag = china_refused_ceasefire
	}
}

country_event = { #Chinese tag: FROM accepts ceasefire
	id = china_events.28
	title = china_events.28.t
	desc = china_events.28.d
	picture = GFX_report_event_CHI_warlords

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.28 option china_events.28.a"
		name = china_events.28.a
		every_subject_country = {
			limit = {
				has_capitulated = yes
				capital_scope = { controller = { is_ally_with = FROM } }
			}
			remove_puppet_and_leave_faction = yes
		}
		FROM = {
			every_subject_country = {
				limit = {
					has_capitulated = yes
					capital_scope = { controller = { is_ally_with = ROOT } }
				}
				remove_puppet_and_leave_faction = yes
			}
		}
		every_subject_country = {
			every_controlled_state = {
				limit = { owner = { is_ally_with = FROM } }
				if = {
					limit = {
						OR = {
							is_core_of = PREV
							is_claimed_by = PREV
						}
					}
					transfer_state_to = PREV
				}
				else = {
					transfer_state_to = ROOT
				}
			}
		}
		every_controlled_state = {
			limit = { owner = { is_ally_with = FROM } }
			transfer_state_to = ROOT
		}
		FROM = {
			every_subject_country = {
				every_controlled_state = {
					limit = { owner = { is_ally_with = ROOT } }
					if = {
						limit = {
							OR = {
								is_core_of = PREV
								is_claimed_by = PREV
							}
						}
						transfer_state_to = PREV
					}
					else = {
						transfer_state_to = FROM
					}
				}
			}
			every_controlled_state = {
				limit = { owner = { is_ally_with = ROOT } }
				transfer_state_to = FROM
			}
			white_peace_with_ROOT = yes
			if = {
				limit = {
					OR = {
						FROM = { tag = GXC }
						ROOT = { tag = GXC }
					}
				}
				log = "KR_Event_Logging;GXC CIVIL WAR WINNER - United Front Ceasefire"
			}
		}

		#clean up isolated states
		hidden_effect = {
			every_owned_state = {
				limit = {
					owner = { is_ally_with = ROOT }
					all_neighbor_state = { owner = { is_ally_with = FROM } }
				}
				transfer_state_to = FROM
			}
			every_subject_country = {
				every_owned_state = {
					limit = {
						owner = { is_ally_with = ROOT }
						all_neighbor_state = { owner = { is_ally_with = FROM } }
					}
					transfer_state_to = FROM
				}
			}
			FROM = {
				every_owned_state = {
					limit = {
						owner = { is_ally_with = ROOT }
						all_neighbor_state = { owner = { is_ally_with = FROM } }
					}
					transfer_state_to = FROM
				}
				every_subject_country = {
					every_owned_state = {
						limit = {
							owner = { is_ally_with = ROOT }
							all_neighbor_state = { owner = { is_ally_with = FROM } }
						}
						transfer_state_to = FROM
					}
				}
			}
		}
	}
}

country_event = { #FROM refuses ceasefire
	id = china_events.29
	title = china_events.29.t
	desc = china_events.29.d
	picture = GFX_report_event_CHI_warlord_observer

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.29 option china_events.29.a"
		name = china_events.29.a
		add_to_faction = FROM.FROM
	}

	option = {
		log = "[GetLogInfo]: event china_events.29 option china_events.29.a"
		name = china_events.29.a
		ai_chance = { base = 0 }
		FROM.FROM = {
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_outraged
			}
		}
	}
}

country_event = { #The Northeastern Gambit
	id = china_events.30
	title = china_events.30.t
	desc = china_events.30.d
	picture = GFX_report_event_QIE_youth_league

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.30 option china_events.30.a"
		name = china_events.30.a
		effect_tooltip = { set_rule = { can_join_factions = yes } }
		add_ideas = CHN_calls_for_a_united_front_idea
	}
}

news_event = { #China Enters the Pacific War
	id = china_events.31
	immediate = { log = "[GetLogInfo]: event china_events.31" }
	title = china_events.31.t
	desc = china_events.31.d
	picture = GFX_news_event_chinese_soldiers_march

	is_triggered_only = yes

	option = {
		name = china_events.31.a
	}
}

###################
### ARMY REFORM ###
###################

country_event = { #Army Reform Progresses
	id = china_events.40

	title = {
		text = china_events.40.t.first_step
		trigger = {
			OR = {
				has_idea = china_poor_army_3_officers
				has_idea = china_poor_army_3
			}
		}
	}
	title = {
		text = china_events.40.t.second_step
		trigger = {
			OR = {
				has_idea = china_poor_army_2_officers
				has_idea = china_poor_army_2
			}
		}
	}
	title = {
		text = china_events.40.t.third_step_officers
		trigger = {
			has_idea = china_poor_army_1_officers
		}
	}
	title = {
		text = china_events.40.t.third_step_finished
		trigger = {
			has_idea = china_poor_army_1
		}
	}

	desc = {
		text = china_events.40.d.first_step
		trigger = {
			OR = {
				has_idea = china_poor_army_3_officers
				has_idea = china_poor_army_3
			}
		}
	}
	desc = {
		text = china_events.40.d.second_step
		trigger = {
			OR = {
				has_idea = china_poor_army_2_officers
				has_idea = china_poor_army_2
			}
		}
	}
	desc = {
		text = china_events.40.d.third_step_officers
		trigger = {
			has_idea = china_poor_army_1_officers
		}
	}
	desc = {
		text = china_events.40.d.third_step_finished
		trigger = {
			has_idea = china_poor_army_1
		}
	}

	picture = GFX_report_event_CHI_beijing_beiyang_flag

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.40 option china_events.40.a"
		name = china_events.40.a
		china_army_reform_increase_step = yes
	}
}

country_event = { #A New Officer Corps
	id = china_events.41

	title = {
		text = china_events.41.t.army_reform_ongoing
		trigger = { NOT = { has_idea = china_poor_army_0 } }
	}
	title = {
		text = china_events.41.t.army_reform_finished
		trigger = { has_idea = china_poor_army_0 }
	}

	desc = {
		text = china_events.41.d.army_reform_ongoing
		trigger = { NOT = { has_idea = china_poor_army_0 } }
	}
	desc = {
		text = china_events.41.d.army_reform_finished
		trigger = { has_idea = china_poor_army_0 }
	}

	picture = GFX_report_event_CHI_beijing_beiyang_flag

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.41 option china_events.40.a"
		name = china_events.40.a
		china_army_reform_remove_officer_penalty = yes
	}
}

########################
### POST UNIFICATION ###
########################

country_event = { #Choice of capital
	id = china_events.50
	title = china_events.50.t
	desc = china_events.50.d

	picture = GFX_report_event_CHI_beijing_beiyang_flag

	is_triggered_only = yes

	immediate = {
		set_country_flag = CHN_has_chosen_a_capital_flag
		if = {
			limit = { 608 = { has_state_flag = CHN_is_capital_of_china_flag } }
			608 = {
				clr_state_flag = CHN_is_capital_of_china_flag
				add_victory_points = {
					province = 9843 #Beijing
					value = -10
				}
			}
		}
		else_if = {
			limit = { 613 = { has_state_flag = CHN_is_capital_of_china_flag } }
			613 = {
				clr_state_flag = CHN_is_capital_of_china_flag
				add_victory_points = {
					province = 11913 #Nanjing
					value = -10
				}
			}
		}
		else_if = {
			limit = { 1048 = { has_state_flag = CHN_is_capital_of_china_flag } }
			1048 = {
				clr_state_flag = CHN_is_capital_of_china_flag
				china_splits_wuhan = yes #This will automatically reset it back to 40 total
			}
		}
		else_if = {
			limit = { 592 = { has_state_flag = CHN_is_capital_of_china_flag } }
			592 = {
				clr_state_flag = CHN_is_capital_of_china_flag
				add_victory_points = {
					province = 1047 #Guangzhou
					value = -10
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.50 option china_events.50.a"
		name = china_events.50.a #Beijing
		ai_chance = {
			base = 35
			modifier = {
				add = 3
				OR = {
					tag = QIE
					tag = FNG
					tag = SHX
					tag = SHD
				}
			}
		}
		set_capital = { state = 608 remember_old_capital = no }
		if = { #If dropped Beijing for Beiping, switch back to Beijing as a new capital
			limit = { 608 = { has_state_flag = beiping_rename_flag } }
			set_province_name = { id = 9843 name = VICTORY_POINTS_9843 }
			608 = { clr_state_flag = beiping_rename_flag }
		}
		608 = {
			set_state_flag = CHN_is_capital_of_china_flag
			add_victory_points = {
				province = 9843 #Beijing
				value = 10
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.50 option china_events.50.b"
		name = china_events.50.b #Nanjing
		ai_chance = {
			base = 20
			modifier = {
				add = 3
				OR = {
					tag = LEP
					tag = CHI
					tag = ANQ
					tag = SHD
				}
			}
		}
		set_capital = { state = 613 remember_old_capital = no }
		613 = {
			set_state_flag = CHN_is_capital_of_china_flag
			add_victory_points = {
				province = 11913 #Nanjing
				value = 10
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.50 option china_events.50.c"
		name = china_events.50.c #Wuhan
		ai_chance = {
			base = 20
			modifier = {
				add = 2
				china_is_aligned_with_republicans = yes
			}
		}
		set_capital = { state = 1048 remember_old_capital = no }
		china_merges_wuhan = yes # Merges the tri-cities
		1048 = {
			set_state_flag = CHN_is_capital_of_china_flag
			add_victory_points = {
				province = 4619 #Wuhan
				value = 10
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.50 option china_events.50.e"
		name = china_events.50.e #Guangzhou
		ai_chance = { base = 10 }
		set_capital = { state = 592 remember_old_capital = no }
		592 = {
			set_state_flag = CHN_is_capital_of_china_flag
			add_victory_points = {
				province = 1047 #Guangzhou
				value = 10
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.50 option china_events.50.f"
		name = china_events.50.f #Keep current
		ai_chance = { base = 15 }
		trigger = {
			NOT = {
				capital_scope = { state = 608 } #Beijing
				capital_scope = { state = 613 } #Nanjing
				capital_scope = { state = 1048 } #Wuhan
				capital_scope = { state = 592 } #Guangzhou
			}
		}
	}
}

country_event = { #[ROOT.Capital.GetCapitalVictoryPointName]'s Growing Renown
	id = china_events.51
	title = china_events.51.t
	desc = china_events.51.d

	picture = GFX_report_event_generic_beijing_map

	is_triggered_only = yes #Triggered by EFFECT: find_next_chinese_target

	option = {
		log = "[GetLogInfo]: event china_events.51 option china_events.51.a"
		name = china_events.51.a
		custom_effect_tooltip = china_becomes_CHN_tt
	}
}

########################
### Demanding Cities ###
########################
country_event = { #The Central Government Demands Beijing
	id = china_events.60
	title = china_events.60.t
	desc = china_events.60.d

	picture = GFX_report_event_generic_beijing_map

	is_triggered_only = yes #Triggered by decision CHN_demand_control_of_beijing

	trigger = { NOT = { var:608.owner = { tag = FROM } } }

	option = {
		log = "[GetLogInfo]: event china_events.60 option china_events.60.a"
		name = china_events.60.a #So be it, we yield.
		ai_chance = {
			base = 75
			modifier = {
				factor = 2
				strength_ratio = {
					tag = FROM
					ratio < 0.25
				}
			}
			modifier = {
				factor = 2
				ic_ratio = {
					tag = FROM
					ratio < 0.3
				}
			}
			modifier = {
				factor = 10
				has_opinion_modifier = KR_approves_of_govt #Yeah there's plenty of room for cheese but it's whatever
			}
		}
		event_option_tooltip = china_events.61.a
		FROM = { country_event = china_events.61 } #[FROM.GetNameDefCap] Yields Beijing
	}
	option = {
		log = "[GetLogInfo]: event china_events.60 option china_events.60.b"
		name = china_events.60.b #Perhaps it is our moment to shine...
		ai_chance = {
			base = 25
			modifier = {
				factor = 2
				strength_ratio = {
					tag = FROM
					ratio > 0.75
				}
			}
			modifier = {
				factor = 2
				ic_ratio = {
					tag = FROM
					ratio > 0.8
				}
			}
			modifier = {
				factor = 0.1
				has_opinion_modifier = KR_approves_of_govt
			}
			modifier = {
				factor = 0
				FROM = { tag = CHI }
				has_game_rule = { rule = CHI_ally_betrayal option = CHI_ALLY_BETRAYAL_NEVER }
			}
		}
		if = {
			limit = { china_compatible_alignment_to_FROM = yes }
			add_stability = -0.2
			add_political_power = -200
			#if = {
			#	limit = { china_same_alignment_as_FROM = yes }
			#	var:country_leader = { china_set_character_alignment_unaligned = yes }
			#}
		}
		set_country_flag = china_revolted_against_@FROM
		create_wargoal = {
			target = FROM
			type = topple_government
		}
		china_break_puppet_effect = yes
		FROM = {
			if = {
				limit = { is_in_array = { china_possible_allies_array = ROOT } }
				remove_from_array = { china_possible_allies_array = ROOT }
			}
			if = {
				limit = { is_in_array = { china_possible_allies_array_northwest = ROOT } }
				remove_from_array = { china_possible_allies_array_northwest = ROOT }
			}
			effect_tooltip = {
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
			if = {
				limit = { NOT = { any_other_country = { has_country_flag = china_revolted_against_@FROM } } }
				country_event = { id = china_events.13 hours = 8 }
			}
			else = {
				country_event = { id = china_events.15 hours = 8 }
			}
		}
	}
}

country_event = { #[FROM.GetNameDefCap] Yields Beijing
	id = china_events.61
	title = china_events.61.t
	desc = china_events.61.d

	picture = GFX_report_event_generic_beijing_map

	is_triggered_only = yes #Triggered by decision CHN_demand_control_of_beijing

	option = {
		log = "[GetLogInfo]: event china_events.61 option china_events.61.a"
		name = china_events.61.a #As it should be.
		transfer_state = 608
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = KR_outraged
		}
	}
}

##############################
### DEALING WITH OUTSKIRTS ###
##############################

country_event = { #MON/TIB/ETS: China demands our annexation
	id = china_events.100
	title = china_events.100.t

	desc = {
		text = china_events.100.d.independent
		trigger = {
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			NOT = { has_event_target = abandoned_by_overlord }
			NOT = { has_event_target = abandoned_by_allies }
		}
	}
	desc = {
		text = china_events.100.d.is_puppet
		trigger = {
			is_subject = yes
		}
	}
	desc = {
		text = china_events.100.d.was_puppet
		trigger = {
			has_event_target = abandoned_by_overlord
		}
	}
	desc = {
		text = china_events.100.d.is_in_faction
		trigger = {
			is_subject = no
			is_in_faction = yes
			is_faction_leader = no
		}
	}
	desc = {
		text = china_events.100.d.was_in_faction
		trigger = {
			has_event_target = abandoned_by_allies
		}
	}

	picture = GFX_report_event_FNG_dairen

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = target_country
			FROM = { save_event_target_as = china }
			if = {
				limit = { any_owned_state = { is_core_china = yes } }
				save_event_target_as = can_give_away_lands
			}
			if = {
				limit = {
					OR = {
						NOT = { country_exists = RUS }
						RUS = { is_subject = yes }
					}
					FER = { owns_state = 219 } #Moscow
				}
				FER = { save_event_target_as = russia }
			}
			else = {
				RUS = { save_event_target_as = russia }
			}
			if = {
				limit = {
					count_triggers = {
						amount = 2
						NOT = { country_exists = HND }
						NOT = { country_exists = PRF }
						NOT = { country_exists = RAJ }
					}
				}
				if = {
					limit = { is_neighbor_of = HND }
					HND = { save_event_target_as = india }
				}
				else_if = {
					limit = { is_neighbor_of = RAJ }
					RAJ = { save_event_target_as = india }
				}
				else_if = {
					limit = { is_neighbor_of = PRF }
					PRF = { save_event_target_as = india }
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.a"
		name = china_events.100.a #Accept
		trigger = {
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			NOT = { is_guaranteed_by = event_target:russia }
			NOT = { is_guaranteed_by = event_target:india }
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_event_target = abandoned_by_overlord #we give up
			}
		}
		FROM = { country_event = { id = china_events.101 days = 1 } } #China: FROM surrenders
		custom_effect_tooltip = GAME_OVER_TT
		effect_tooltip = {
			FROM = {
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.b"
		name = china_events.100.b #Autonomy in exchange
		trigger = {
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			NOT = { is_guaranteed_by = event_target:russia }
			NOT = { is_guaranteed_by = event_target:india }
		}
		FROM = { country_event = { id = china_events.102 days = 1 } } #China: FROM demands autonomy
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			every_subject_country = {
				FROM = { puppet = PREV }
			}
			FROM = {
				set_autonomy = {
					target = ROOT
					autonomy_state = chinese_suzerainty
					end_wars = no
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.c"
		name = china_events.100.c #Lands in exchange for independence
		trigger = {
			has_event_target = can_give_away_lands
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			NOT = { is_guaranteed_by = event_target:russia }
			NOT = { is_guaranteed_by = event_target:india }
		}
		FROM = { country_event = { id = china_events.107 days = 1 } } #China: FROM offers Han lands in exchange for independence
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			every_owned_state = {
				limit = { is_core_china = yes }
				transfer_state_to = FROM
			}
			set_truce = { target = FROM days = 1095 }
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.d"
		name = china_events.100.d #Ask Russia for protection
		trigger = {
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			has_event_target = russia
			OR = {
				china_russia_can_protect_country = yes
				is_guaranteed_by = event_target:russia
			}
		}
		event_target:russia = { country_event = { id = china_events.110 days = 1 } } #RUS/HND/RAJ/PRF: FROM asks for protection against China
		if = {
			limit = {
				has_socialist_government = no
				event_target:russia = { has_socialist_government = yes }
			}
			custom_effect_tooltip = china_country_may_demand_regime_change
		}
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			if = {
				limit = { event_target:russia = { is_in_faction = yes } }
				var:event_target:russia.faction_leader = { add_to_faction = ROOT }
			}
			else = {
				event_target:russia = {
					give_guarantee = FROM
					diplomatic_relation = {
						country = FROM
						relation = non_aggression_pact
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.e"
		name = china_events.100.e #Ask India for protection
		trigger = {
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			has_event_target = india
			OR = {
				china_india_can_protect_country = yes
				is_guaranteed_by = event_target:india
			}
		}
		event_target:india = { country_event = { id = china_events.110 days = 1 } } #RUS/HND/RAJ/PRF: FROM asks for protection against China
		if = {
			limit = {
				has_socialist_government = no
				event_target:india = { has_socialist_government = yes }
			}
			custom_effect_tooltip = china_country_may_demand_regime_change
		}
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			if = {
				limit = { event_target:india = { is_in_faction = yes } }
				var:event_target:india.faction_leader = { add_to_faction = ROOT }
			}
			else = {
				event_target:india = {
					give_guarantee = FROM
					diplomatic_relation = {
						country = FROM
						relation = non_aggression_pact
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.f"
		name = china_events.100.f #Refuse
		trigger = {
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			NOT = { is_guaranteed_by = event_target:russia }
			NOT = { is_guaranteed_by = event_target:india }
		}
		ai_chance = { base = 0 }
		FROM = {
			effect_tooltip = {
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
			country_event = china_events.118 #China: FROM refuses annexation
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.g"
		name = china_events.100.g #Ask overlord to intervene
		trigger = {
			is_subject = yes
		}
		overlord = { country_event = { id = china_events.119 days = 1 } } #Overlord/faction leader of MON/TIB/ETS: China demands annexation of FROM
	}

	option = {
		log = "[GetLogInfo]: event china_events.100 option china_events.100.h"
		name = china_events.100.h #Ask faction leader to intervene
		trigger = {
			is_subject = no
			is_in_faction = yes
			is_faction_leader = no
		}
		faction_leader = { country_event = { id = china_events.119 days = 1 } } #Overlord/faction leader of MON/TIB/ETS: China demands annexation of FROM
	}
}

country_event = { #China: FROM surrenders
	id = china_events.101
	title = china_events.101.t
	desc = china_events.101.d

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.101 option china_events.101.a"
		name = china_events.101.a
		annex_country = {
			target = FROM
			transfer_troops = no
		}
	}
}

country_event = { #China: FROM demands autonomy
	id = china_events.102
	title = china_events.102.t
	desc = china_events.102.d
	picture = GFX_report_event_MON_monastery

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.102 option china_events.102.a"
		name = china_events.102.a #Yes
		effect_tooltip = {
			FROM = {
				every_subject_country = { ROOT = { puppet = PREV } }
			}
			set_autonomy = {
				target = FROM
				autonomy_state = chinese_suzerainty
				end_wars = no
			}
		}
		FROM = { country_event = { id = china_events.103 days = 1 } } #MON/TIB/ETS: China accepts autonomy
	}

	option = {
		log = "[GetLogInfo]: event china_events.102 option china_events.102.b"
		name = china_events.102.b #Demand the return of Han lands in exchange
		trigger = {
			has_event_target = can_give_away_lands
		}
		FROM = { country_event = { id = china_events.104 days = 1 } } #MON/TIB/ETS: China wants Han lands
	}

	option = {
		log = "[GetLogInfo]: event china_events.102 option china_events.102.c"
		name = china_events.102.c #No
		save_event_target_as = refused_autonomy
		if = {
			limit = { has_event_target = refused_lands }
			FROM = { #MON/TIB/ETS: repeating event to exhaust option
				custom_effect_tooltip = {
					localization_key = EFFECT_COUNTRY_EVENT
					EVENT = china_events.109.t.from_china_refused_both
				}
			}
		}
		else = {
			FROM = { #MON/TIB/ETS: repeating event to exhaust options
				custom_effect_tooltip = {
					localization_key = EFFECT_COUNTRY_EVENT
					EVENT = china_events.109.t.from_china_refused_autonomy
				}
			}
		}
		hidden_effect = {
			FROM = { country_event = { id = china_events.109 days = 1 } } #MON/TIB/ETS: repeating event to exhaust options
		}
	}
}

country_event = { #MON/TIB/ETS: China accepts autonomy
	id = china_events.103
	title = china_events.103.t

	desc = {
		text = china_events.103.d.default
		trigger = { NOT = { has_event_target = refused_lands } }
	}
	desc = {
		text = china_events.103.d.kept_lands
		trigger = { has_event_target = refused_lands }
	}

	picture = GFX_report_event_TIB_army_3

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.103 option china_events.103.a"
		name = china_events.103.a
		hidden_effect = {
			every_subject_country = {
				get_current_government_type = yes
				FROM = {
					puppet = {
						target = PREV
						end_wars = no
					}
				}
				restore_previous_government_type = yes
			}
			get_current_government_type = yes
		}
		FROM = {
			set_autonomy = {
				target = PREV
				autonomy_state = chinese_suzerainty
				end_wars = no
			}
		}
		hidden_effect = { restore_previous_government_type = yes }
	}
}

country_event = { #MON/TIB/ETS: China wants Han lands
	id = china_events.104
	title = china_events.104.t
	desc = china_events.104.d
	picture = GFX_report_event_TIB_army

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.104 option china_events.104.a"
		name = china_events.104.a #Yes
		effect_tooltip = {
			every_owned_state = {
				limit = { is_core_china = yes }
				transfer_state_to = FROM
			}
		}
		FROM = {
			effect_tooltip = {
				set_autonomy = {
					target = PREV
					autonomy_state = chinese_suzerainty
					end_wars = no
				}
			}
			country_event = china_events.105 #China: FROM returns lands
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.104 option china_events.104.b"
		name = china_events.104.b #No
		save_event_target_as = refused_lands
		FROM = { country_event = { id = china_events.106 days = 1 } } #China: FROM refuses to return lands
	}
}

country_event = { #China: FROM returns lands
	id = china_events.105
	title = china_events.105.t
	desc = china_events.105.d
	picture = GFX_report_event_FNG_colonel

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.105 option china_events.105.a"
		name = china_events.105.a #Yes
		FROM = {
			every_owned_state = {
				limit = { is_core_china = yes }
				transfer_state_to = ROOT
			}
			hidden_effect = { get_current_government_type = yes }
		}
		set_autonomy = {
			target = FROM
			autonomy_state = chinese_suzerainty
			end_wars = no
		}
		hidden_effect = {
			FROM = { restore_previous_government_type = yes }
		}
	}
}

country_event = { #China: FROM refuses to return lands
	id = china_events.106
	title = china_events.106.t
	desc = china_events.106.d
	picture = GFX_report_event_FNG_kempeitai

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.106 option china_events.106.a"
		name = china_events.106.a #Agree to autonomy
		effect_tooltip = {
			FROM = { every_subject_country = { ROOT = { puppet = PREV } } }
			set_autonomy = {
				target = FROM
				autonomy_state = chinese_suzerainty
				end_wars = no
			}
		}
		FROM = { country_event = { id = china_events.103 days = 1 } } #MON/TIB/ETS: China accepts autonomy
	}

	option = {
		log = "[GetLogInfo]: event china_events.106 option china_events.106.b"
		name = china_events.106.b #Refuse
		if = {
			limit = {
				OR = {
					event_target:target_country = { china_russia_can_protect_country = yes }
					event_target:target_country = { china_india_can_protect_country = yes }
				}
			}
			custom_effect_tooltip = china_from_may_seek_foreign_protection
		}
		save_event_target_as = refused_lands
		save_event_target_as = refused_autonomy
		FROM = {
			custom_override_tooltip = {
				tooltip = {
					localization_key = EFFECT_COUNTRY_EVENT
					EVENT = china_events.109.t.from_china_refused_both
				}
				country_event = { id = china_events.109 days = 1 }
			}
		}
	}
}

country_event = { #China: FROM offers Han lands in exchange for independence
	id = china_events.107
	title = china_events.107.t
	desc = china_events.107.d
	picture = GFX_report_event_ETS_founding_nation

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.107 option china_events.107.a"
		name = china_events.107.a #Agree
		effect_tooltip = {
			FROM = {
				every_owned_state = {
					limit = { is_core_china = yes }
					transfer_state_to = ROOT
				}
			}
			set_truce = { target = ROOT days = 1095 }
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		FROM = { country_event = { id = china_events.108 days = 1 } } #MON/TIB/ETS: Lands for independence
	}

	option = {
		log = "[GetLogInfo]: event china_events.107 option china_events.107.b"
		name = china_events.107.b #Refuse
		if = {
			limit = {
				OR = {
					event_target:target_country = { china_russia_can_protect_country = yes }
					event_target:target_country = { china_india_can_protect_country = yes }
				}
			}
			custom_effect_tooltip = china_from_may_seek_foreign_protection
		}
		save_event_target_as = refused_lands
		if = {
			limit = { has_event_target = refused_autonomy }
			FROM = {
				custom_effect_tooltip = {
					localization_key = EFFECT_COUNTRY_EVENT
					EVENT = china_events.109.t.from_china_refused_both
				}
			}
		}
		else = {
			FROM = { #MON/TIB/ETS: repeating event to exhaust options
				custom_effect_tooltip = {
					localization_key = EFFECT_COUNTRY_EVENT
					EVENT = china_events.109.t.from_china_refused_lands
				}
			}
		}
		hidden_effect = {
			FROM = { country_event = { id = china_events.109 days = 1 } } #MON/TIB/ETS: repeating event to exhaust options
		}
	}
}

country_event = { #MON/TIB/ETS: Lands for independence
	id = china_events.108
	title = china_events.108.t
	desc = china_events.108.d
	picture = GFX_report_event_ETS_declaration

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.108 option china_events.108.a"
		name = china_events.108.a
		every_owned_state = {
			limit = { is_core_china = yes }
			transfer_state_to = FROM
		}
		set_truce = { target = ROOT days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
	}
}

country_event = { #MON/TIB/ETS: repeating event to exhaust options
	id = china_events.109

	title = {
		text = china_events.109.t.from_russia
		trigger = { FROM = { tag = event_target:russia } }
	}
	title = {
		text = china_events.109.t.from_india
		trigger = { FROM = { tag = event_target:india } }
	}
	title = {
		text = china_events.109.t.from_china_refused_autonomy
		trigger = {
			FROM = {
				NOT = { tag = event_target:russia }
				NOT = { tag = event_target:india }
			}
			has_event_target = refused_autonomy
			NOT = { has_event_target = refused_lands }
		}
	}
	title = {
		text = china_events.109.t.from_china_refused_lands
		trigger = {
			FROM = {
				NOT = { tag = event_target:russia }
				NOT = { tag = event_target:india }
			}
			has_event_target = refused_lands
			NOT = { has_event_target = refused_autonomy }
		}
	}
	title = {
		text = china_events.109.t.from_china_refused_both
		trigger = {
			FROM = {
				NOT = { tag = event_target:russia }
				NOT = { tag = event_target:india }
			}
			has_event_target = refused_autonomy
			has_event_target = refused_lands
		}
	}

	desc = {
		text = china_events.109.d.from_russia
		trigger = { FROM = { tag = event_target:russia } }
	}
	desc = {
		text = china_events.109.d.from_india
		trigger = { FROM = { tag = event_target:india } }
	}
	desc = {
		text = china_events.109.d.from_china_refused_autonomy
		trigger = {
			FROM = {
				NOT = { tag = event_target:russia }
				NOT = { tag = event_target:india }
			}
			has_event_target = refused_autonomy
			NOT = { has_event_target = refused_lands }
		}
	}
	desc = {
		text = china_events.109.d.from_china_refused_lands
		trigger = {
			FROM = {
				NOT = { tag = event_target:russia }
				NOT = { tag = event_target:india }
			}
			has_event_target = refused_lands
			NOT = { has_event_target = refused_autonomy }
		}
	}
	desc = {
		text = china_events.109.d.from_china_refused_both
		trigger = {
			FROM = {
				NOT = { tag = event_target:russia }
				NOT = { tag = event_target:india }
			}
			has_event_target = refused_autonomy
			has_event_target = refused_lands
		}
	}

	picture = GFX_report_event_MON_army2

	is_triggered_only = yes

	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	option = {
		log = "[GetLogInfo]: event china_events.109 option china_events.109.a"
		name = china_events.109.a #Surrender
		ai_chance = { base = 0 }
		event_target:china = { country_event = { id = china_events.101 days = 1 } } #China: FROM surrenders
		custom_effect_tooltip = GAME_OVER_TT
		effect_tooltip = {
			event_target:china = {
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.109 option china_events.109.b"
		name = china_events.109.b #Autonomy in exchange
		trigger = {
			NOT = { has_event_target = refused_autonomy }
		}
		event_target:china = { country_event = { id = china_events.102 days = 1 } } #China: FROM demands autonomy
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			every_subject_country = {
				event_target:china = { puppet = PREV }
			}
			event_target:china = {
				set_autonomy = {
					target = ROOT
					autonomy_state = chinese_suzerainty
					end_wars = no
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.109 option china_events.109.c"
		name = china_events.109.c #Lands in exchange for independence
		trigger = {
			has_event_target = can_give_away_lands
			NOT = { has_event_target = refused_lands }
		}
		event_target:china = { country_event = { id = china_events.107 days = 1 } } #China: FROM offers Han lands in exchange for independence
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			every_owned_state = {
				limit = { is_core_china = yes }
				transfer_state_to = event_target:china
			}
			set_truce = { target = event_target:china days = 1095 }
			diplomatic_relation = {
				country = event_target:china
				relation = non_aggression_pact
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.109 option china_events.109.d"
		name = china_events.109.d #Ask Russia for protection
		trigger = {
			NOT = { has_event_target = refused_russia }
			has_event_target = russia
			OR = {
				china_russia_can_protect_country = yes
				event_target:russia = { has_guaranteed = ROOT }
			}
		}
		event_target:russia = { country_event = { id = china_events.110 days = 1 } } #RUS/HND/RAJ/PRF: FROM asks for protection against China
		if = {
			limit = {
				has_socialist_government = no
				event_target:russia = { has_socialist_government = yes }
			}
			custom_effect_tooltip = china_country_may_demand_regime_change
		}
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			if = {
				limit = { event_target:russia = { is_in_faction = yes } }
				var:event_target:russia.faction_leader = { add_to_faction = ROOT }
			}
			else = {
				event_target:russia = {
					give_guarantee = ROOT
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.109 option china_events.109.e"
		name = china_events.109.e #Ask India for protection
		trigger = {
			NOT = { has_event_target = refused_india }
			has_event_target = india
			OR = {
				china_india_can_protect_country = yes
				event_target:india = { has_guaranteed = ROOT }
			}
		}
		event_target:india = { country_event = { id = china_events.110 days = 1 } } #RUS/HND/RAJ/PRF: FROM asks for protection against China
		if = {
			limit = {
				has_socialist_government = no
				event_target:russia = { has_socialist_government = yes }
			}
			custom_effect_tooltip = china_country_may_demand_regime_change
		}
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			if = {
				limit = { event_target:india = { is_in_faction = yes } }
				var:event_target:india.faction_leader = { add_to_faction = ROOT }
			}
			else = {
				event_target:india = {
					give_guarantee = ROOT
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.109 option china_events.109.f"
		name = china_events.109.f #Refuse
		event_target:china = {
			effect_tooltip = {
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
			country_event = china_events.118 #China: FROM refuses annexation
		}
	}
}

country_event = { #RUS/HND/RAJ/PRF: FROM asks for protection against China
	id = china_events.110
	title = china_events.110.t
	picture = GFX_report_event_SIK_uyghur_family
	desc = {
		text = china_events.110.d.russia_already_guaranteed
		trigger = {
			has_guaranteed = FROM
			is_russian_tag = yes
		}
	}
	desc = {
		text = china_events.110.d.russia
		trigger = {
			NOT = { has_guaranteed = FROM }
			is_russian_tag = yes
		}
	}
	desc = {
		text = china_events.110.d.india_already_guaranteed
		trigger = {
			has_guaranteed = FROM
			is_russian_tag = no
		}
	}
	desc = {
		text = china_events.110.d.india
		trigger = {
			NOT = { has_guaranteed = FROM }
			is_russian_tag = no
		}
	}

	trigger = {
		NOT = { has_war_with = FROM }
		NOT = { FROM = { has_war_with = event_target:china } }
	}

	is_triggered_only = yes

	option = { #Yes
		log = "[GetLogInfo]: event china_events.110 option china_events.110.a"
		name = china_events.110.a
		trigger = {
			NOT = {
				AND = {
					has_socialist_government = no
					FROM = { has_socialist_government = yes }
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_war_with_major = yes
					AND = {
						OR = {
							is_russian_tag = yes
							is_ally_with = RUS
							is_ally_with = INT
						}
						country_exists = GER
					}
					AND = {
						OR = {
							is_ally_with = ENT
							is_ally_with = GER
						}
						country_exists = INT
					}
				}
			}
		}
		effect_tooltip = {
			if = {
				limit = { is_in_faction = yes }
				faction_leader = { add_to_faction = FROM }
			}
			else = {
				give_guarantee = FROM
				diplomatic_relation = {
					country = FROM
					relation = non_aggression_pact
				}
			}
		}
		FROM = { country_event = { id = china_events.111 days = 1 } } #MON/TIB/ETS: FROM agrees to protect us against China
	}

	option = { #Demand regime change
		log = "[GetLogInfo]: event china_events.110 option china_events.110.b"
		name = china_events.110.b
		trigger = {
			has_socialist_government = yes
			FROM = { has_socialist_government = no }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_war_with_major = yes
					AND = {
						OR = {
							is_russian_tag = yes
							is_ally_with = RUS
							is_ally_with = INT
						}
						country_exists = GER
					}
					AND = {
						OR = {
							is_ally_with = ENT
							is_ally_with = GER
						}
						country_exists = INT
					}
				}
			}
		}
		FROM = { country_event = { id = china_events.115 days = 1 } } #MON/TIB/ETS: FROM wants regime change in exchange for protection
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = { puppet = FROM }
	}

	option = { #No
		log = "[GetLogInfo]: event china_events.110 option china_events.110.c"
		name = china_events.110.c
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					has_war_with_major = yes
					AND = {
						OR = {
							is_russian_tag = yes
							is_ally_with = RUS
							is_ally_with = INT
						}
						country_exists = GER
					}
					AND = {
						OR = {
							is_ally_with = ENT
							is_ally_with = GER
						}
						country_exists = INT
					}
				}
			}
		}
		if = {
			limit = { has_guaranteed = FROM }
			diplomatic_relation = {
				country = FROM
				relation = guarantee
				active = no
			}
		}
		if = {
			limit = { has_military_access_to = FROM }
			diplomatic_relation = {
				country = FROM
				relation = military_access
				active = no
			}
		}
		if = {
			limit = { is_russian_tag = yes }
			save_event_target_as = refused_russia
			FROM = {
				custom_effect_tooltip = {
					localization_key = EFFECT_COUNTRY_EVENT
					EVENT = china_events.109.t.from_russia
				}
			}
		}
		else = {
			save_event_target_as = refused_india
			FROM = {
				custom_effect_tooltip = {
					localization_key = EFFECT_COUNTRY_EVENT
					EVENT = china_events.109.t.from_india
				}
			}
		}
		hidden_effect = {
			FROM = { country_event = { id = china_events.109 days = 1 } } #MON/TIB/ETS: repeating event to exhaust options
		}
	}
}

country_event = { #MON/TIB/ETS: FROM agrees to protect us against China
	id = china_events.111
	title = china_events.111.t
	picture = GFX_report_event_SIK_mongols
	desc = {
		text = china_events.111.d.russia
		trigger = { FROM = { is_russian_tag = yes } }
	}
	desc = {
		text = china_events.111.d.india
		trigger = { FROM = { is_russian_tag = no } }
	}

	trigger = {
		NOT = { has_war_with = FROM }
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.111 option china_events.111.a"
		name = china_events.111.a #Yes
		FROM = {
			if = {
				limit = { is_in_faction = yes }
				faction_leader = { add_to_faction = ROOT }
			}
			else = {
				give_guarantee = ROOT
				diplomatic_relation = {
					country = ROOT
					relation = non_aggression_pact
				}
			}
		}
		event_target:china = { country_event = { id = china_events.112 days = 1 } } #China: Russia/India protects FROM
	}
}

country_event = { #China: Russia/India protects FROM
	id = china_events.112
	title = china_events.112.t
	picture = GFX_report_event_RUS_army4
	desc = {
		text = china_events.112.d.russia
		trigger = { FROM.FROM = { is_russian_tag = yes } }
	}
	desc = {
		text = china_events.112.d.india
		trigger = { FROM.FROM = { is_russian_tag = no } }
	}

	trigger = {
		NOT = { has_war_with = FROM }
		NOT = { has_war_with = FROM.FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.112 option china_events.112.a"
		name = china_events.112.a #Back down
		FROM = {
			effect_tooltip = {
				set_truce = { target = ROOT days = 1095 }
				diplomatic_relation = {
					country = ROOT
					relation = non_aggression_pact
				}
			}
			country_event = china_events.113 #MON/ETS/TIB/RUS/HND/RAJ/PRF: China backs down
		}
		FROM.FROM = {
			effect_tooltip = {
				set_truce = { target = ROOT days = 1095 }
				diplomatic_relation = {
					country = ROOT
					relation = non_aggression_pact
				}
			}
			country_event = china_events.113 #MON/ETS/TIB/RUS/HND/RAJ/PRF: China backs down
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.112 option china_events.112.b"
		name = china_events.112.b #War
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
		FROM = { country_event = { id = china_events.114 days = 1 } } #MON/ETS/TIB/RUS/HND/RAJ/PRF: China prepares for war
		FROM.FROM = { country_event = { id = china_events.114 days = 1 } } #MON/ETS/TIB/RUS/HND/RAJ/PRF: China prepares for war
	}
}

country_event = { #MON/ETS/TIB/RUS/HND/RAJ/PRF: China backs down
	id = china_events.113
	title = china_events.113.t
	desc = china_events.113.d
	picture = GFX_report_event_HND_soldiers
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.113 option china_events.113.a"
		name = china_events.113.a
		add_political_power = 25
		set_truce = { target = FROM days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
	}
}

country_event = { #MON/ETS/TIB/RUS/HND/RAJ/PRF: China prepares for war
	id = china_events.114
	title = china_events.114.t
	desc = china_events.114.d
	picture = GFX_report_event_QIE_imperial_guard
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.114 option china_events.114.a"
		name = china_events.114.a
		effect_tooltip = {
			event_target:china = {
				create_wargoal = {
					target = event_target:target_country
					type = annex_everything
				}
			}
		}
	}
}

country_event = { #MON/TIB/ETS: FROM wants regime change in exchange for protection
	id = china_events.115
	title = china_events.115.t
	picture = GFX_report_event_ETS_declaration
	desc = {
		text = china_events.115.d.russia
		trigger = { FROM = { is_russian_tag = yes } }
	}
	desc = {
		text = china_events.115.d.india
		trigger = { FROM = { is_russian_tag = no } }
	}

	trigger = {
		NOT = { has_war_with = FROM }
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.115 option china_events.115.a"
		name = china_events.115.a #Yes
		FROM = {
			puppet = {
				target = ROOT
				end_wars = no
			}
			country_event = china_events.116 #RUS/HND/RAJ/PRF: FROM accepts regime change
		}
		event_target:china = { country_event = { id = china_events.112 days = 1 } } #China: Russia/India protects FROM
	}

	option = {
		log = "[GetLogInfo]: event china_events.115 option china_events.115.b"
		name = china_events.115.b #No
		if = {
			limit = { FROM = { is_russian_tag = yes } }
			save_event_target_as = refused_russia
		}
		else = {
			save_event_target_as = refused_india
		}
		FROM = { country_event = { id = china_events.117 days = 1 } } #RUS/HND/RAJ/PRF: FROM refuses regime change
	}
}

country_event = { #RUS/HND/RAJ/PRF: FROM accepts regime change
	id = china_events.116
	title = china_events.116.t
	desc = china_events.116.d
	picture = GFX_report_event_SIK_town
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.116 option china_events.116.a"
		name = china_events.116.a
		effect_tooltip = { puppet = FROM }
	}
}

country_event = { #RUS/HND/RAJ/PRF: FROM refuses regime change
	id = china_events.117
	title = china_events.117.t
	desc = china_events.117.d
	picture = GFX_report_event_KUM_silk_gate
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.117 option china_events.117.a"
		name = china_events.117.a
		if = {
			limit = { is_russian_tag = yes }
			save_event_target_as = refused_russia
		}
		else = {
			save_event_target_as = refused_india
		}
		if = {
			limit = { has_guaranteed = FROM }
			diplomatic_relation = {
				country = FROM
				relation = guarantee
				active = no
			}
		}
		if = {
			limit = { has_military_access_to = FROM }
			diplomatic_relation = {
				country = FROM
				relation = military_access
				active = no
			}
		}
		FROM = { country_event = { id = china_events.109 days = 1 } } #MON/TIB/ETS: repeating event to exhaust options
	}
}

country_event = { #China: FROM refuses annexation
	id = china_events.118
	title = china_events.118.t
	desc = china_events.118.d
	picture = GFX_report_event_KUM_kumul_rebellion
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.118 option china_events.118.a"
		name = china_events.118.a
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
	}
}

country_event = { #Overlord/faction leader of MON/TIB/ETS: China demands annexation of FROM
	id = china_events.119
	title = china_events.119.t
	picture = GFX_report_event_QIE_american_merc_trainer
	desc = {
		text = china_events.119.d.faction_leader_can_give_lands
		trigger = {
			is_faction_leader = yes
			has_event_target = can_give_away_lands
		}
	}
	desc = {
		text = china_events.119.d.faction_leader_default
		trigger = {
			is_faction_leader = yes
			NOT = { has_event_target = can_give_away_lands }
		}
	}
	desc = {
		text = china_events.119.d.overlord_not_in_faction_can_give_lands
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
			has_event_target = can_give_away_lands
		}
	}
	desc = {
		text = china_events.119.d.overlord_not_in_faction
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
			NOT = { has_event_target = can_give_away_lands }
		}
	}
	desc = {
		text = china_events.119.d.overlord_in_faction_can_give_lands
		trigger = {
			is_in_faction = no
			has_event_target = can_give_away_lands
		}
	}
	desc = {
		text = china_events.119.d.overlord_in_faction
		trigger = {
			is_in_faction = no
			NOT = { has_event_target = can_give_away_lands }
		}
	}

	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.119 option china_events.119.a"
		name = china_events.119.a #Protect
		trigger = {
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
		FROM = { country_event = { id = china_events.120 days = 1 } } #MON/TIB/ETS: Faction leader protects us
	}

	option = {
		log = "[GetLogInfo]: event china_events.119 option china_events.119.b"
		name = china_events.119.b #Overlord in faction: ask faction leader for support
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
		}
		faction_leader = { country_event = { id = china_events.124 days = 1 } } #Faction leader of MON/ETS/TIB overlord: FROM asks for support
	}

	option = {
		log = "[GetLogInfo]: event china_events.119 option china_events.119.c"
		name = china_events.119.c #Compromise: lands for independence
		trigger = {
			has_event_target = can_give_away_lands
		}
		FROM = { country_event = { id = china_events.128 days = 1 } } #MON/ETS/TIB: Overlord/faction leader asks to compromise
	}

	option = {
		log = "[GetLogInfo]: event china_events.119 option china_events.119.d"
		name = china_events.119.d #Abandon
		FROM = {
			effect_tooltip = { remove_puppet_and_leave_faction = yes }
			country_event = china_events.135 #MON/TIB/ETS: Faction leader/overlord abandons country
		}
	}
}

country_event = { #MON/TIB/ETS: Faction leader protects us
	id = china_events.120
	title = china_events.120.t
	picture = GFX_report_event_RUS_speech
	desc = {
		text = china_events.120.d.default
		trigger = { NOT = { has_event_target = refused_lands } }
	}
	desc = {
		text = china_events.120.d.refused_lands
		trigger = { has_event_target = refused_lands }
	}

	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.120 option china_events.120.a"
		name = china_events.120.a
		event_target:china = { country_event = { id = china_events.121 days = 1 } } #China: Overlord/faction leader protects FROM
	}
}

country_event = { #China: Overlord/faction leader protects FROM
	id = china_events.121
	title = china_events.121.t
	picture = GFX_report_event_RUS_cossacks_3
	desc = {
		text = china_events.121.d.overlord
		trigger = {
			FROM = {
				is_subject = yes
				overlord = { is_in_faction = no }
			}
			NOT = { has_event_target = refused_to_protect_ally }
			NOT = { has_event_target = refused_lands }
		}
	}
	desc = {
		text = china_events.121.d.overlord_refused_lands
		trigger = {
			FROM = {
				is_subject = yes
				overlord = { is_in_faction = no }
			}
			NOT = { has_event_target = refused_to_protect_ally }
			has_event_target = refused_lands
		}
	}
	desc = {
		text = china_events.121.d.overlord_abandoned_by_allies
		trigger = {
			FROM = {
				is_subject = yes
				overlord = { is_in_faction = no }
			}
			has_event_target = refused_to_protect_ally
			NOT = { has_event_target = refused_lands }
		}
	}
	desc = {
		text = china_events.121.d.overlord_refused_lands_abandoned_by_allies
		trigger = {
			FROM = {
				is_subject = yes
				overlord = { is_in_faction = no }
			}
			has_event_target = refused_to_protect_ally
			has_event_target = refused_lands
		}
	}
	desc = {
		text = china_events.121.d.overlord_and_allies
		trigger = {
			FROM = {
				is_subject = yes
				overlord = { is_in_faction = yes }
			}
			NOT = { has_event_target = refused_lands }
		}
	}
	desc = {
		text = china_events.121.d.overlord_and_allies_refused_lands
		trigger = {
			FROM = {
				is_subject = yes
				overlord = { is_in_faction = yes }
			}
			has_event_target = refused_lands
		}
	}
	desc = {
		text = china_events.121.d.faction
		trigger = {
			FROM = { is_subject = no }
			NOT = { has_event_target = refused_lands }
		}
	}
	desc = {
		text = china_events.121.d.faction_refused_lands
		trigger = {
			FROM = { is_subject = no }
			NOT = { has_event_target = refused_lands }
		}
	}

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.121 option china_events.121.a"
		name = china_events.121.a #Back down
		FROM = {
			effect_tooltip = {
				set_truce = { target = ROOT days = 1095 }
				diplomatic_relation = {
					country = ROOT
					relation = non_aggression_pact
				}
			}
			country_event = china_events.122 #MON/ETS/TIB and allies: China backs down
		}
		if = {
			limit = {
				FROM = {
					is_subject = yes
					overlord = { is_faction_leader = no }
				}
			}
			var:FROM.overlord = {
				effect_tooltip = {
					set_truce = { target = ROOT days = 1095 }
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
				country_event = china_events.122 #MON/ETS/TIB and allies: China backs down
			}
		}
		if = {
			limit = { FROM = { is_in_faction = yes } }
			var:FROM.faction_leader = {
				effect_tooltip = {
					set_truce = { target = ROOT days = 1095 }
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
				country_event = china_events.122 #MON/ETS/TIB and allies: China backs down
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.121 option china_events.121.b"
		name = china_events.121.b #War
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
		every_other_country = {
			limit = { is_ally_with = FROM }
			country_event = china_events.123 #MON/ETS/TIB and allies: China prepares for war
		}
	}
}

country_event = { #MON/ETS/TIB and allies: China backs down
	id = china_events.122
	title = china_events.122.t
	desc = china_events.122.d
	picture = GFX_report_event_RUS_partisans2
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.122 option china_events.122.a"
		name = china_events.122.a
		add_political_power = 25
		set_truce = { target = FROM days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
	}
}

country_event = { #MON/ETS/TIB and allies: China prepares for war
	id = china_events.123
	title = china_events.123.t
	desc = china_events.123.d
	picture = GFX_report_event_CHI_interruption
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.123 option china_events.123.a"
		name = china_events.123.a
		effect_tooltip = {
			FROM = {
				create_wargoal = {
					target = FROM.FROM
					type = annex_everything
				}
			}
		}
	}
}

country_event = { #Faction leader of MON/ETS/TIB overlord: FROM asks for support
	id = china_events.124
	title = china_events.124.t
	desc = china_events.124.d
	picture = GFX_report_event_SIK_sheng_baby
	trigger = {
		NOT = { FROM = { has_war_with = event_target:china } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.124 option china_events.124.a"
		name = china_events.124.a #Yes
		FROM = { country_event = { id = china_events.125 days = 1 } } #Overlord of MON/ETS/TIB: FROM supports us
	}

	option = {
		log = "[GetLogInfo]: event china_events.124 option china_events.124.b"
		name = china_events.124.b #No
		save_event_target_as = refused_to_protect_ally
		FROM = { country_event = { id = china_events.126 days = 1 } } #Overlord of MON/ETS/TIB: FROM won't support us
	}
}

country_event = { #Overlord of MON/ETS/TIB: FROM supports us
	id = china_events.125
	title = china_events.125.t
	desc = china_events.125.d
	picture = GFX_report_event_HND_calcutta
	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.125 option china_events.125.a"
		name = china_events.125.a
		FROM.FROM = { country_event = { id = china_events.120 days = 1 } } #MON/TIB/ETS: Faction leader protects us
	}
}

country_event = { #Overlord of MON/ETS/TIB: FROM won't support us
	id = china_events.126
	title = china_events.126.t
	desc = china_events.126.d
	picture = GFX_report_event_FNG_kempeitai
	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.126 option china_events.126.a"
		name = china_events.126.a #Protect regardless
		faction_leader = { country_event = { id = china_events.127 days = 1 } } #Faction leader of MON/ETS/TIB overlord: FROM left faction over refusal to support them
		leave_faction = yes
		peace_out_non_neighbours_after_leaving_faction = yes
		event_target:target_country = { country_event = { id = china_events.120 days = 1 } } #MON/TIB/ETS: Faction leader protects us
	}

	option = {
		log = "[GetLogInfo]: event china_events.126 option china_events.126.b"
		name = china_events.126.b #Offer compromise
		trigger = {
			has_event_target = can_give_away_lands
		}
		event_target:target_country = { country_event = { id = china_events.128 days = 1 } } #MON/ETS/TIB: Overlord/faction leader asks to compromise
	}

	option = {
		log = "[GetLogInfo]: event china_events.126 option china_events.126.c"
		name = china_events.126.c #Abandon
		event_target:target_country = {
			effect_tooltip = { remove_puppet_and_leave_faction = yes }
			country_event = china_events.135 #MON/TIB/ETS: Faction leader/overlord abandons country
		}
	}
}

country_event = { #Faction leader of MON/ETS/TIB overlord: FROM left faction over refusal to support them
	id = china_events.127
	title = china_events.127.t
	desc = china_events.127.d
	picture = GFX_report_event_MON_mongols
	trigger = {
		NOT = { FROM = { has_war_with = event_target:china } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.127 option china_events.127.a"
		name = china_events.127.a
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = KR_outraged
		}
	}
}

country_event = { #MON/ETS/TIB: Overlord/faction leader asks to compromise
	id = china_events.128
	title = china_events.128.t
	picture = GFX_report_event_HND_leaders
	desc = {
		text = china_events.128.d.puppet
		trigger = { is_subject = yes }
	}
	desc = {
		text = china_events.128.d.not_puppet
		trigger = { is_subject = no }
	}

	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.128 option china_events.128.a"
		name = china_events.128.a #No choice
		trigger = { is_subject = yes }
		event_target:china = { country_event = { id = china_events.131 days = 1 } } #China: Allies of MON/TIB/ETS offer compromise
	}

	option = {
		log = "[GetLogInfo]: event china_events.128 option china_events.128.b"
		name = china_events.128.b #Yes
		trigger = { is_subject = no }
		FROM = { country_event = { id = china_events.129 days = 1 } } #Faction leader of MON/TIB/ETS: Country agrees to offer compromise
	}

	option = {
		log = "[GetLogInfo]: event china_events.128 option china_events.128.c"
		name = china_events.128.c #No
		trigger = { is_subject = no }
		FROM = { country_event = { id = china_events.130 days = 1 } } #Faction leader of MON/TIB/ETS: Country refuses to offer compromise
	}
}

country_event = { #Faction leader of MON/TIB/ETS: Country agrees to offer compromise
	id = china_events.129
	title = china_events.129.t
	desc = china_events.129.d
	picture = GFX_report_event_CHI_official_announcement
	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.129 option china_events.129.a"
		name = china_events.129.a
		event_target:china = { country_event = { id = china_events.131 days = 1 } } #China: Allies of MON/TIB/ETS offer compromise
	}
}

country_event = { #Faction leader of MON/TIB/ETS: Country refuses to offer compromise
	id = china_events.130
	title = china_events.130.t
	desc = china_events.130.d
	picture = GFX_report_event_CHI_riot
	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.130 option china_events.130.a"
		name = china_events.130.a #Protect
		FROM = { country_event = { id = china_events.120 days = 1 } } #MON/TIB/ETS: Faction leader protects us
	}

	option = {
		log = "[GetLogInfo]: event china_events.130 option china_events.130.b"
		name = china_events.130.b #Abandon
		effect_tooltip = { remove_from_faction = FROM }
		FROM = { country_event = { id = china_events.135 days = 1 } } #MON/TIB/ETS: Faction leader/overlord abandons country
	}
}

country_event = { #China: Allies of MON/TIB/ETS offer compromise
	id = china_events.131
	title = china_events.131.t
	picture = GFX_report_event_SIK_uyghurs
	desc = {
		text = china_events.131.d.puppet
		trigger = { event_target:target_country = { is_subject = yes } }
	}
	desc = {
		text = china_events.131.d.not_puppet
		trigger = { event_target:target_country = { is_subject = no } }
	}

	trigger = {
		NOT = { has_war_with = FROM }
		NOT = { has_war_with = event_target:target_country }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.131 option china_events.131.a"
		name = china_events.131.a #Agree
		event_target:target_country = {
			country_event = china_events.132 #MON/TIB/ETS and allies: China accepts compromise
			effect_tooltip = {
				every_owned_state = {
					limit = { is_core_china = yes }
					transfer_state_to = ROOT
				}
				set_truce = { target = ROOT days = 1095 }
				diplomatic_relation = {
					country = ROOT
					relation = non_aggression_pact
				}
			}
		}
		if = {
			limit = {
				event_target:target_country = {
					is_subject = yes
					overlord = { is_faction_leader = no }
				}
			}
			var:event_target:target_country.overlord = {
				country_event = china_events.132 #MON/TIB/ETS and allies: China accepts compromise
				effect_tooltip = {
					set_truce = { target = ROOT days = 1095 }
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
			}
		}
		if = {
			limit = {
				event_target:target_country = { is_in_faction = yes }
			}
			var:event_target:target_country.faction_leader = {
				country_event = china_events.132 #MON/TIB/ETS and allies: China accepts compromise
				effect_tooltip = {
					set_truce = { target = ROOT days = 1095 }
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.131 option china_events.131.b"
		name = china_events.131.b #Refuse
		save_event_target_as = refused_lands
		event_target:target_country = { country_event = { id = china_events.133 days = 1 } } #MON/TIB/ETS: China refuses compromise
		effect_tooltip = {
			if = {
				limit = { event_target:target_country = { is_subject = yes } }
				var:event_target:target_country.overlord = { country_event = { id = china_events.134 days = 1 } } #Faction leader/overlord of MON/TIB/ETS: China refuses compromise
			}
			else = {
				var:event_target:target_country.faction_leader = { country_event = { id = china_events.134 days = 1 } } #Faction leader/overlord of MON/TIB/ETS: China refuses compromise
			}
		}
	}
}

country_event = { #MON/TIB/ETS and allies: China accepts compromise
	id = china_events.132
	title = china_events.132.t
	picture = GFX_report_event_CHI_official_announcement
	desc = {
		text = china_events.132.d.target
		trigger = { tag = event_target:target_country }
	}
	desc = {
		text = china_events.132.d.faction_leader_abandoned_ally
		trigger = { tag = event_target:refused_to_protect_ally }
	}
	desc = {
		text = china_events.132.d.other_allies
		trigger = {
			NOT = { tag = event_target:target_country }
			NOT = { tag = event_target:refused_to_protect_ally }
		}
	}

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.132 option china_events.132.a"
		name = china_events.132.a
		trigger = { tag = event_target:target_country }
		every_owned_state = {
			limit = { is_core_china = yes }
			transfer_state_to = FROM
		}
		set_truce = { target = ROOT days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.132 option china_events.132.b"
		name = china_events.132.b
		trigger = { tag = event_target:refused_to_protect_ally }
		set_truce = { target = ROOT days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.132 option china_events.132.c"
		name = china_events.132.c
		trigger = {
			has_subject = event_target:target_country
			has_event_target = refused_to_protect_ally
		}
		set_truce = { target = ROOT days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.132 option china_events.132.d"
		name = china_events.132.d
		trigger = {
			NOT = {
				tag = event_target:target_country
				tag = event_target:refused_to_protect_ally
				AND = {
					has_subject = event_target:target_country
					has_event_target = refused_to_protect_ally
				}
			}
		}
		set_truce = { target = ROOT days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
	}
}

country_event = { #MON/TIB/ETS: China refuses compromise
	id = china_events.133
	title = china_events.133.t
	desc = china_events.133.d
	picture = GFX_report_event_CHI_interruption
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.133 option china_events.133.a"
		name = china_events.133.a
		if = {
			limit = { event_target:target_country = { is_subject = yes } }
			var:event_target:target_country.overlord = { country_event = { id = china_events.134 days = 1 } } #Faction leader/overlord of MON/TIB/ETS: China refuses compromise
		}
		else = {
			var:event_target:target_country.faction_leader = { country_event = { id = china_events.134 days = 1 } } #Faction leader/overlord of MON/TIB/ETS: China refuses compromise
		}
	}
}

country_event = { #Faction leader/overlord of MON/TIB/ETS: China refuses compromise
	id = china_events.134
	title = china_events.134.t
	picture = GFX_report_event_LEP_march
	desc = {
		text = china_events.134.d.overlord_in_faction
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
			NOT = { has_event_target = refused_to_protect_ally }
		}
	}
	desc = {
		text = china_events.134.d.overlord_refused_by_faction
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
			has_event_target = refused_to_protect_ally
		}
	}
	desc = {
		text = china_events.134.d.faction_leader
		trigger = {
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
	}

	trigger = {
		NOT = { has_war_with = event_target:china }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.134 option china_events.134.a"
		name = china_events.134.a #Ask faction leader for support
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
			NOT = { has_event_target = refused_to_protect_ally }
		}
		faction_leader = { country_event = { id = china_events.124 days = 1 } } #Faction leader of MON/ETS/TIB overlord: FROM asks for support
	}

	option = {
		log = "[GetLogInfo]: event china_events.134 option china_events.134.b"
		name = china_events.134.b #Protect regardless
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
			has_event_target = refused_to_protect_ally
		}
		faction_leader = { country_event = { id = china_events.127 days = 1 } } #Faction leader of MON/ETS/TIB overlord: FROM left faction over refusal to support them
		leave_faction = yes
		peace_out_non_neighbours_after_leaving_faction = yes
		event_target:target_country = { country_event = { id = china_events.120 days = 1 } } #China: Overlord/faction leader protects FROM
	}

	option = {
		log = "[GetLogInfo]: event china_events.134 option china_events.134.c"
		name = china_events.134.c #Protect
		trigger = {
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
		event_target:target_country = { country_event = { id = china_events.120 days = 1 } } #China: Overlord/faction leader protects FROM
	}

	option = {
		log = "[GetLogInfo]: event china_events.134 option china_events.134.d"
		name = china_events.134.d #Abandon
		event_target:target_country = { country_event = { id = china_events.135 days = 1 } } #MON/TIB/ETS: Faction leader/overlord abandons country
	}
}

country_event = { #MON/TIB/ETS: Faction leader/overlord abandons country
	id = china_events.135
	title = china_events.135.t
	picture = GFX_report_event_RUS_riders
	desc = {
		text = china_events.135.d.abandoned_by_allies
		trigger = { is_subject = no }
	}
	desc = {
		text = china_events.135.d.abandoned_by_overlord_allies
		trigger = {
			is_subject = yes
			has_event_target = refused_to_protect_ally
		}
	}
	desc = {
		text = china_events.135.d.abandoned_by_overlord
		trigger = {
			is_subject = yes
			NOT = { has_event_target = refused_to_protect_ally }
		}
	}

	trigger = {
		NOT = { has_war_with = event_target:target_country }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.135 option china_events.135.a"
		name = china_events.135.a
		if = {
			limit = { is_subject = yes }
			save_event_target_as = abandoned_by_overlord
		}
		else = {
			save_event_target_as = abandoned_by_allies
		}
		remove_puppet_and_leave_faction = yes
		event_target:china = { country_event = { id = china_events.136 days = 1 } } #China: MON/TIB/ETS abandoned by allies
	}
}

country_event = { #China: MON/TIB/ETS abandoned by allies
	id = china_events.136
	title = china_events.136.t
	desc = china_events.136.d
	picture = GFX_report_event_RUS_siberia1
	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.136 option china_events.136.a"
		name = china_events.136.a
		FROM = { country_event = { id = china_events.100 days = 1 } } #MON/TIB/ETS: China demands our annexation
	}
}

##########################
### Autonomous Regions ###
##########################

country_event = { #Establishing a Mongolian Administration
	id = china_events.150
	title = china_events.150.t
	desc = china_events.150.d
	picture = GFX_report_event_SIK_mongols

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.150 option china_events.150.a" #Authorise the creation of an Outer Mongolian Autonomous Region only.
		name = china_events.150.a
		every_owned_state = {
			limit = { region = 152 } #Outer Mongolia
			if = {
				limit = { has_resistance = yes }
				add_compliance = 15
			}
			add_dynamic_modifier = {
				modifier = CHN_autonomous_region_modifier
				scope = THIS
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					region = 222 #Inner Mongolia
					state = 610 #Rehe
					state = 715 #Liaobei
					state = 884 #Xing'an
				}
			}
			add_compliance = -5
			add_resistance = 5
		}
		hidden_effect = {
			every_state = {
				limit = {
					NOT = { is_owned_by = ROOT }
					OR = {
						region = 152 #Outer Mongolia
						region = 222 #Inner Mongolia
						state = 610 #Rehe
						state = 715 #Liaobei
						state = 884 #Xing'an
					}
				}
				ROOT = { activate_targeted_decision = { target = PREV decision = china_expand_autonomous_region } } #In case you acquire more territory. Broad in case you acquire inner Mongolia second.
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.150 option china_events.150.b" #Establish both an Inner and Outer Mongolian Autonomous Region.
		name = china_events.150.b
		trigger = {
			owns_any_state_of = {
				348 #Ningxia
				616 #Ordos
				621 #Suiyuan
				612 #Chahar
				610 #Rehe
				715 #Liaobei
				884 #Xing'an
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					is_mongolia = yes
					state = 610 #Rehe
					state = 715 #Liaobei
					state = 884 #Xing'an
				}
			}
			if = {
				limit = { has_resistance = yes }
				add_compliance = 20
			}
			add_dynamic_modifier = {
				modifier = CHN_autonomous_region_modifier
				scope = THIS
			}
			hidden_effect = {
				every_state = {
					limit = {
						OR = {
							region = 152 #Outer Mongolia
							region = 222 #Inner Mongolia
							state = 610 #Rehe
							state = 715 #Liaobei
							state = 884 #Xing'an
						}
					}
					ROOT = { activate_targeted_decision = { target = PREV decision = china_expand_autonomous_region } } #In case you acquire more territory.
				}
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.150 option china_events.150.c" #Mongolia shall be reorganised into ordinary provinces.
		name = china_events.150.c
		add_political_power = -35
		every_owned_state = {
			limit = {
				region = 152 #Outer Mongolia
				has_resistance = yes
			}
			add_compliance = -10
			add_resistance = 25
		}
		every_owned_state = {
			limit = {
				OR = {
					region = 222 #Inner Mongolia
					state = 610 #Rehe
					state = 715 #Liaobei
					state = 884 #Xing'an
				}
				has_resistance = yes
			}
			add_compliance = -10
			add_resistance = 10
		}
	}
}

country_event = { #Establishing a Xinjiang Administration
	id = china_events.151
	title = china_events.151.t
	desc = china_events.151.d
	picture = GFX_report_event_SIK_bughra_army

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.151 option china_events.151.a" #Authorise the creation of a Xinjiang Autonomous Region.
		name = china_events.151.a
		every_owned_state = {
			limit = { is_xinjiang = yes }
			#It's a little easier to bring Xinjiang under control
			if = {
				limit = { has_resistance = yes }
				add_compliance = 20
			}
			add_dynamic_modifier = {
				modifier = CHN_autonomous_region_modifier
				scope = THIS
			}
		}
		hidden_effect = {
			every_state = {
				limit = {
					NOT = { is_owned_by = ROOT }
					is_xinjiang = yes
				}
				ROOT = { activate_targeted_decision = { target = PREV decision = china_expand_autonomous_region } } #In case you acquire more territory.
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.151 option china_events.151.b" #Xinjiang shall remain a province.
		name = china_events.151.b
		add_political_power = -25
		every_owned_state = {
			limit = {
				is_xinjiang = yes
				has_resistance = yes
			}
			add_resistance = 20
		}
	}
}

country_event = { #Establishing a Tibetan Administration
	id = china_events.152
	title = china_events.152.t
	desc = china_events.152.d
	picture = GFX_report_event_TIB_potala

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.152 option china_events.152.a" #Authorise the creation of an \"Outer\" Tibet Autonomous Region only.
		name = china_events.152.a
		every_owned_state = {
			limit = {
				is_tibet = yes
				NOT = { state = 353 } #Yushu
			}
			if = {
				limit = { has_resistance = yes }
				add_compliance = 20
			}
			add_dynamic_modifier = {
				modifier = CHN_autonomous_region_modifier
				scope = THIS
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 353 #Yushu
					state = 604 #Xining
					state = 601 #Xikang
				}
				has_resistance = yes
			}
			add_compliance = -5
			add_resistance = 5
		}
		hidden_effect = {
			every_state = {
				limit = {
					NOT = { is_owned_by = ROOT }
					OR = {
						is_tibet = yes
						state = 604 #Xining
						state = 601 #Xikang
					}
				}
				ROOT = { activate_targeted_decision = { target = PREV decision = china_expand_autonomous_region } } #In case you acquire more territory. Broad in case you take inner Tibet and they are like "wait why don't I have an option to expand the autonomous zone?"
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.152 option china_events.152.b" #The Tibet Autonomous Region should be expanded to include \"Inner Tibet\".
		name = china_events.152.b
		trigger = {
			owns_any_state_of = {
				353 #Yushu
				604 #Xining
				601 #Xikang
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					is_tibet = yes
					state = 353 #Yushu
					state = 604 #Xining
					state = 601 #Xikang
				}
			}
			if = {
				limit = { has_resistance = yes }
				add_compliance = 10
			}
			add_dynamic_modifier = {
				modifier = CHN_autonomous_region_modifier
				scope = THIS
			}
		}
		hidden_effect = {
			every_state = {
				limit = {
					NOT = { is_owned_by = ROOT }
					OR = {
						is_tibet = yes
						state = 604 #Xining
						state = 601 #Xikang
					}
				}
				ROOT = { activate_targeted_decision = { target = PREV decision = china_expand_autonomous_region } } #In case you acquire more territory.
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.152 option china_events.152.c" #Tibet shall be administered as a province.
		name = china_events.152.c
		add_political_power = -35
		every_owned_state = {
			limit = {
				is_tibet = yes
				has_resistance = yes
			}
			add_compliance = -10
			add_resistance = 25
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 353 #Yushu
					state = 604 #Xining
					state = 601 #Xikang
				}
				has_resistance = yes
			}
			add_compliance = -10
			add_resistance = 10
		}
	}
}

country_event = { #The Sino-Phile Coup
	id = china_events.153
	title = china_events.153.t
	desc = china_events.153.d

	picture = GFX_report_event_SIK_xinjiang_troops

	is_triggered_only = yes #Triggered by decision china_orchestrate_sinophile_coup

	option = {
		log = "[GetLogInfo]: event china_events.153 option china_events.153.a"
		name = china_events.153.a #We can do little but accept the inevitable.
		ai_chance = { base = 100 }
		add_stability = -0.25
		add_war_support = -0.25
		FROM = {
			effect_tooltip = {
				if = {
					limit = { ROOT = { tag = TIB } }
					TIB_puppet_setup = yes
				}
				else_if = {
					limit = { ROOT = { tag = MON } }
					MON_puppet_setup = yes
				}
				else_if = {
					limit = { ROOT = { tag = ETS } }
					ETS_puppet_setup = yes
				}
				else = {
					#KUM
					KUM_puppet_setup = yes
				}
			}
			country_event = { id = china_events.154 days = 3 } #Bloodless Coup in [FROM.Capital.GetCapitalVictoryPointName]
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.153 option china_events.153.b"
		name = china_events.153.b #Perhaps it is our moment to shine...
		ai_chance = { base = 0 }
		FROM = {
			set_autonomy = {
				target = ROOT
				autonomy_state = autonomy_free
			}
			effect_tooltip = {
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
			country_event = { id = china_events.155 days = 3 } #Sinophile Coup in [FROM.Capital.GetCapitalVictoryPointName] Collapses
		}
	}
}

country_event = { #Bloodless Coup in [FROM.Capital.GetCapitalVictoryPointName]
	id = china_events.154
	title = china_events.154.t
	desc = china_events.154.d

	picture = GFX_report_event_generic_beijing_map

	is_triggered_only = yes #Triggered by [EVENT] china_events.153.a

	option = {
		log = "[GetLogInfo]: event china_events.154 option china_events.154.a"
		name = china_events.154.a #That settles the matter.
		FROM = {
			add_stability = -0.25
			add_war_support = -0.25
		}
		if = {
			limit = { FROM = { tag = TIB } }
			TIB_puppet_setup = yes
		}
		else_if = {
			limit = { FROM = { tag = MON } }
			MON_puppet_setup = yes
		}
		else_if = {
			limit = { FROM = { tag = ETS } }
			ETS_puppet_setup = yes
		}
		else = {
			#KUM
			KUM_puppet_setup = yes
		}
	}
}

country_event = { #Sinophile Coup in [FROM.Capital.GetCapitalVictoryPointName] Collapses
	id = china_events.155
	title = china_events.155.t
	desc = china_events.155.d

	picture = GFX_report_event_generic_beijing_map

	is_triggered_only = yes #Triggered by [EVENT] china_events.153.b

	option = {
		log = "[GetLogInfo]: event china_events.155 option china_events.155.a"
		name = china_events.155.a #It seems they would prefer to be a province after all...
		effect_tooltip = {
			set_autonomy = {
				target = FROM
				autonomy_state = autonomy_free
			}
		}
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
	}
}

################################
### DEALING WITH CONCESSIONS ###
################################

country_event = { #POR/AST/CAN/GEA/JAP: China wants return of concessions
	id = china_events.200
	title = china_events.200.t
	desc = china_events.200.desc
	picture = GFX_report_event_LEP_march

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { is_subject = no }
				set_variable = { china_concession_value = 50 }
				every_state = {
					limit = {
						is_possible_legation_cities_state = yes
						OR = {
							is_owned_by = ROOT
							owner = { is_subject_of = ROOT }
						}
					}
					add_to_variable = { ROOT.china_concession_value = 25 }
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.200 option china_events.200.a"
		name = china_events.200.a #Sure
		trigger = { is_subject = no }
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				original_tag = JAP
				is_major = yes
			}
			modifier = {
				factor = 0
				event_target:china = {
					is_in_faction = yes
					is_faction_leader = no
					NOT = { is_in_faction_with = CUF }
					NOT = { is_in_faction_with = ROOT }
				}
			}
			modifier = {
				factor = 0
				event_target:china = { both_socialist_or_both_not_socialist = no }
			}
			modifier = {
				factor = 5
				is_in_faction_with = event_target:china
			}
		}
		effect_tooltip = {
			set_temp_variable = { target = event_target:china }
			every_state = {
				limit = {
					OR = {
						AND = {
							is_owned_by = ROOT
							is_core_china = yes
						}
						AND = {
							OR = {
								is_owned_by = ROOT
								owner = { is_subject_of = ROOT }
							}
							is_possible_legation_cities_state = yes
						}
					}
				}
				transfer_state_during_war = yes
			}
		}
		event_target:china = { country_event = { id = china_events.201 days = 1 } }
		clear_variable = china_concession_value
	}

	option = {
		log = "[GetLogInfo]: event china_events.200 option china_events.200.b"
		name = china_events.200.b #Demand compensation
		trigger = { is_subject = no }
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				original_tag = JAP
				is_major = yes
			}
			modifier = {
				factor = 0
				has_socialist_government = yes
			}
			modifier = {
				factor = 0
				event_target:china = {
					is_in_faction = yes
					is_faction_leader = no
					NOT = { is_in_faction_with = CUF }
					NOT = { is_in_faction_with = ROOT }
				}
			}
			modifier = {
				factor = 0
				event_target:china = { both_socialist_or_both_not_socialist = no }
			}
		}
		event_target:china = { country_event = { id = china_events.202 days = 1 } }
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			add_political_power = var:ROOT.china_concession_value
			set_temp_variable = { target = event_target:china }
			every_state = {
				limit = {
					OR = {
						AND = {
							is_owned_by = ROOT
							is_core_china = yes
						}
						AND = {
							OR = {
								is_owned_by = ROOT
								owner = { is_subject_of = ROOT }
							}
							is_possible_legation_cities_state = yes
						}
					}
				}
				transfer_state_to = event_target:china
			}
			event_target:china = {
				if = {
					limit = { NOT = { ROOT = { tag = event_target:concession_holder } } }
					add_opinion_modifier = {
						target = event_target:concession_holder
						modifier = KR_approves_of_govt
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_approves_of_govt
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.200 option china_events.200.c"
		name = china_events.200.c #Never
		trigger = { is_subject = no }
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				has_socialist_government = yes
			}
			modifier = {
				factor = 0
				is_in_faction_with = event_target:china
			}
		}
		event_target:china = {
			country_event = { id = china_events.205 days = 1 }
			custom_effect_tooltip = tooltip_white_line
			effect_tooltip = {
				if = {
					limit = { NOT = { ROOT = { tag = event_target:concession_holder } } }
					add_opinion_modifier = {
						target = event_target:concession_holder
						modifier = KR_outraged
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_outraged
				}
				if = {
					limit = { can_declare_war_on = event_target:concession_holder }
					activate_targeted_decision = { decision = china_seize_concessions target = event_target:concession_holder }
				}
			}
		}
		clear_variable = china_concession_value
	}

	option = {
		log = "[GetLogInfo]: event china_events.200 option china_events.200.d"
		name = china_events.200.d #Notify overlord
		trigger = { is_subject = yes }
		overlord = { country_event = china_events.200 }
	}
}

country_event = { #China: FROM returns concessions
	id = china_events.201
	title = china_events.201.t
	desc = china_events.201.d
	picture = GFX_report_event_CHI_beijing_beiyang_flag

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.201 option china_events.201.a"
		name = china_events.201.a #Sure
		set_temp_variable = { target = ROOT }
		every_state = {
			limit = {
				OR = {
					AND = {
						is_owned_by = FROM
						is_core_china = yes
					}
					AND = {
						OR = {
							is_owned_by = FROM
							owner = { is_subject_of = FROM }
						}
						is_possible_legation_cities_state = yes
					}
				}
			}
			hidden_effect = {
				remove_claim_by = owner
				remove_claim_by = FROM
			}
			clear_variable = ambition_area_@var:owner
			clear_variable = ambition_area_@FROM
			transfer_state_during_war = yes
		}
		if = {
			limit = { NOT = { FROM = { tag = event_target:concession_holder } } }
			add_opinion_modifier = {
				target = event_target:concession_holder
				modifier = KR_approves_of_govt
			}
		}
		add_opinion_modifier = {
			target = FROM
			modifier = KR_approves_of_govt
		}
	}
}

country_event = { #China: FROM wants compensation for concessions
	id = china_events.202
	title = china_events.202.t
	desc = china_events.202.d
	picture = GFX_report_event_SHX_shanxi_provincal_bank

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_variable = { FROM.china_concession_value = 50 }
			every_state = {
				limit = {
					is_possible_legation_cities_state = yes
					OR = {
						is_owned_by = FROM
						owner = { is_subject_of = FROM }
					}
				}
				add_to_variable = { FROM.china_concession_value = 25 }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.202 option china_events.202.a"
		name = china_events.202.a #Sure
		set_temp_variable = { china_concession_cost = FROM.china_concession_value }
		multiply_temp_variable = { china_concession_cost = -1 }
		add_political_power = var:china_concession_cost

		custom_effect_tooltip = tooltip_white_line
		effect_tooltip = {
			every_state = {
				limit = {
					OR = {
						AND = {
							is_owned_by = FROM
							is_core_china = yes
						}
						AND = {
							OR = {
								is_owned_by = FROM
								owner = { is_subject_of = FROM }
							}
							is_possible_legation_cities_state = yes
						}
					}
				}
				transfer_state_to = ROOT
			}
		}
		FROM = { country_event = { id = china_events.203 days = 1 } }
	}

	option = {
		log = "[GetLogInfo]: event china_events.202 option china_events.202.b"
		name = china_events.202.b #What? No!
		if = {
			limit = { NOT = { FROM = { tag = event_target:concession_holder } } }
			add_opinion_modifier = {
				target = event_target:concession_holder
				modifier = KR_hates_govt
			}
		}
		add_opinion_modifier = {
			target = FROM
			modifier = KR_hates_govt
		}
		FROM = { country_event = { id = china_events.204 days = 1 } }
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { can_declare_war_on = event_target:concession_holder }
			activate_targeted_decision = { decision = china_seize_concessions target = event_target:concession_holder }
		}
		clear_variable = FROM.china_concession_value
	}
}

country_event = { #POR/AST/CAN/GEA/JAP: China accepts compensation for concessions
	id = china_events.203
	title = china_events.203.t
	desc = china_events.203.d
	picture = GFX_report_event_GEA_coltroops

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.203 option china_events.203.a"
		name = china_events.203.a #Pleasure doing business
		add_political_power = var:china_concession_value
		clear_variable = china_concession_value

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { target = FROM }
		every_state = {
			limit = {
				OR = {
					AND = {
						is_owned_by = ROOT
						is_core_china = yes
					}
					AND = {
						OR = {
							is_owned_by = ROOT
							owner = { is_subject_of = ROOT }
						}
						is_possible_legation_cities_state = yes
					}
				}
			}
			hidden_effect = {
				remove_claim_by = ROOT
				remove_claim_by = owner
			}
			clear_variable = ambition_area_@var:owner
			clear_variable = ambition_area_@ROOT
			transfer_state_during_war = yes
		}
	}
}

country_event = { #POR/AST/CAN/GEA/JAP: China refuses compensation for concessions
	id = china_events.204
	title = china_events.204.t
	desc = china_events.204.d
	picture = GFX_report_event_FNG_troops

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.204 option china_events.204.a"
		name = china_events.204.a
		effect_tooltip = {
			FROM = {
				if = {
					limit = { NOT = { ROOT = { tag = event_target:concession_holder } } }
					add_opinion_modifier = {
						target = event_target:concession_holder
						modifier = KR_hates_govt
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_hates_govt
				}
				if = {
					limit = { can_declare_war_on = event_target:concession_holder }
					activate_targeted_decision = { decision = china_seize_concessions target = event_target:concession_holder }
				}
			}
		}
	}
}

country_event = { #China: FROM refuses to return concessions
	id = china_events.205
	title = china_events.205.t
	desc = china_events.205.d
	picture = GFX_report_event_GXC_federalist_troops_atgun

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.205 option china_events.205.a"
		name = china_events.205.a
		if = {
			limit = { NOT = { FROM = { tag = event_target:concession_holder } } }
			add_opinion_modifier = {
				target = event_target:concession_holder
				modifier = KR_outraged
			}
		}
		add_opinion_modifier = {
			target = FROM
			modifier = KR_outraged
		}
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { can_declare_war_on = event_target:concession_holder }
			activate_targeted_decision = { decision = china_seize_concessions target = event_target:concession_holder }
		}
	}
}

country_event = { #POR/AST/CAN/GEA/JAP: China has occupied concessions
	id = china_events.210
	title = china_events.210.t
	desc = china_events.210.d
	picture = GFX_report_event_GXC_federalist_troops_rally

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.210 option china_events.210.a"
		name = china_events.210.a #Threaten war
		trigger = { is_subject = no }
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				country_is_in_dangerous_war = yes
			}
			modifier = {
				factor = 0
				event_target:china = { default_attack_AI_trigger = yes }
			}
		}
		event_target:china = { country_event = { id = china_events.212 days = 1 } }
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			every_country = {
				display_individual_scopes = yes
				limit = {
					OR = {
						tag = ROOT
						any_owned_state = { is_core_china = yes }
					}
					OR = {
						is_subject_of = ROOT
						any_owned_state = { is_possible_legation_cities_state = yes }
					}
				}
				set_truce = { target = event_target:china days = 1095 }
				diplomatic_relation = {
					country = event_target:china
					relation = non_aggression_pact
				}
			}
		}
		custom_effect_tooltip = if_they_refuse_tt
		effect_tooltip = {
			set_temp_variable = { target = event_target:china }
			every_state = {
				display_individual_scopes = yes
				limit = {
					OR = {
						AND = {
							is_owned_by = ROOT
							is_core_china = yes
						}
						AND = {
							OR = {
								is_owned_by = ROOT
								owner = { is_subject_of = ROOT }
							}
							is_possible_legation_cities_state = yes
						}
					}
				}
				transfer_state_to = event_target:china
			}
			create_wargoal = {
				target = event_target:china
				type = topple_government
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.210 option china_events.210.b"
		name = china_events.210.b #Back down
		trigger = { is_subject = no }
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				original_tag = JAP
				is_major = yes
			}
			modifier = {
				factor = 0.125
				country_is_in_dangerous_war = no
				event_target:china = { default_attack_AI_trigger = no }
			}
		}
		effect_tooltip = {
			set_temp_variable = { target = event_target:china }
			every_state = {
				display_individual_scopes = yes
				limit = {
					OR = {
						AND = {
							is_owned_by = ROOT
							is_core_china = yes
						}
						AND = {
							OR = {
								is_owned_by = ROOT
								owner = { is_subject_of = ROOT }
							}
							is_possible_legation_cities_state = yes
						}
					}
				}
				transfer_state_to = event_target:china
			}
		}
		event_target:china = { country_event = { id = china_events.211 days = 1 } }
	}

	option = {
		log = "[GetLogInfo]: event china_events.210 option china_events.210.c"
		name = china_events.210.c #Notify overlord
		trigger = { is_subject = yes }
		overlord = { country_event = china_events.210 }
	}
}

country_event = { #China: FROM backs down
	id = china_events.211
	title = china_events.211.t
	desc = china_events.211.d
	picture = GFX_report_event_LEC_shanghai_police_patrol

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.211 option china_events.211.a"
		name = china_events.211.a
		every_state = {
			display_individual_scopes = yes
			limit = {
				OR = {
					AND = {
						is_owned_by = FROM
						is_core_china = yes
					}
					AND = {
						OR = {
							is_owned_by = FROM
							owner = { is_subject_of = FROM }
						}
						is_possible_legation_cities_state = yes
					}
				}
			}
			transfer_state_to = ROOT
		}
		every_other_country = {
			display_individual_scopes = yes
			limit = {
				OR = {
					tag = FROM
					any_owned_state = { is_core_china = yes }
				}
				OR = {
					is_subject_of = FROM
					any_owned_state = { is_possible_legation_cities_state = yes }
				}
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_outraged
			}
		}
	}
}

country_event = { #China: FROM threatens war
	id = china_events.212
	title = china_events.212.t
	desc = china_events.212.d
	picture = GFX_report_event_GEA_carrier

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.212 option china_events.212.a"
		name = china_events.212.a
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				FROM = { country_is_in_dangerous_war = yes }
			}
		}
		add_war_support = -0.05
		every_other_country = {
			display_individual_scopes = yes
			limit = {
				OR = {
					tag = FROM
					any_owned_state = { is_core_china = yes }
				}
				OR = {
					is_subject_of = FROM
					any_owned_state = { is_possible_legation_cities_state = yes }
				}
			}
			set_truce = { target = ROOT days = 1095 }
			diplomatic_relation = {
				country = ROOT
				relation = non_aggression_pact
			}
			country_event = { id = china_events.213 days = 1 }
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.212 option china_events.212.b"
		name = china_events.212.b
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				OR = {
					country_is_in_dangerous_war = yes
					FROM = { default_attack_AI_trigger = yes }
				}
			}
		}
		every_state = {
			display_individual_scopes = yes
			limit = {
				OR = {
					AND = {
						is_owned_by = FROM
						is_core_china = yes
					}
					AND = {
						OR = {
							is_owned_by = FROM
							owner = { is_subject_of = FROM }
						}
						is_possible_legation_cities_state = yes
					}
				}
			}
			set_state_flag = china_state_was_seized_by_@ROOT
			transfer_state_to = ROOT
		}
		FROM = {
			effect_tooltip = {
				create_wargoal = {
					target = ROOT
					type = topple_government
				}
			}
			country_event = { id = china_events.214 days = 1 }
		}
	}
}

country_event = { #POR/AST/CAN/GEA/JAP: China backs down
	id = china_events.213
	title = china_events.213.t
	desc = china_events.213.d
	picture = GFX_report_event_FNG_troops

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.213 option china_events.213.a"
		name = china_events.213.a
		add_political_power = 25
		effect_tooltip = {
			set_truce = { target = FROM days = 1095 }
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
	}
}

country_event = { #POR/AST/CAN/GEA/JAP: China is defiant
	id = china_events.214
	title = china_events.214.t
	desc = china_events.214.d
	picture = GFX_report_event_SHX_feng_speech

	trigger = {
		NOT = { has_war_with = FROM }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.214 option china_events.214.a"
		name = china_events.214.a #Opium war time
		every_state = {
			display_individual_scopes = yes
			limit = { has_state_flag = china_state_was_seized_by_@FROM }
			clr_state_flag = china_state_was_seized_by_@FROM
			effect_tooltip = { transfer_state_to = FROM }
		}
		create_wargoal = {
			target = FROM
			type = topple_government
		}
	}
}

####################################
### LEGATION CITIES NEGOTIATIONS ###
####################################

country_event = { #LEC: China wants to negotiate annexation of LEC
	id = china_events.220
	title = china_events.220.t

	desc = {
		text = china_events.220.d.puppet
		trigger = {
			is_subject = yes
		}
	}
	desc = {
		text = china_events.220.d.in_faction
		trigger = {
			is_subject = no
			is_in_faction = yes
			is_faction_leader = no
		}
	}
	desc = {
		text = china_events.220.d.council
		trigger = {
			is_subject = no
			is_in_faction = no
			check_variable = { global.LEC_voters^num > 0 }
		}
	}
	desc = {
		text = china_events.220.d.independent
		trigger = {
			is_subject = no
			OR = {
				is_faction_leader = yes
				check_variable = { global.LEC_voters^num < 1 }
			}
		}
	}

	picture = GFX_report_event_QIE_wu_peifu_time_cover

	is_triggered_only = yes

	immediate = {
		FROM = { save_event_target_as = china }
	}

	option = {
		log = "[GetLogInfo]: event china_events.220 option china_events.220.a"
		name = china_events.220.a #Forward to overlord
		trigger = {
			is_subject = yes
		}
		overlord = { country_event = { id = china_events.223 days = 1 } }
	}

	option = {
		log = "[GetLogInfo]: event china_events.220 option china_events.220.b"
		name = china_events.220.b #Forward to faction leader, recommend disbanding
		trigger = {
			is_subject = no
			is_in_faction = yes
			is_faction_leader = no
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				has_government = paternal_autocrat
				FROM = { china_is_aligned_with_zhili = no }
			}
			modifier = {
				factor = 0
				has_government = national_populist
				OR = {
					FNG_JAP_hostile = yes
					FROM = { china_is_aligned_with_fengtian = no }
				}
			}
		}
		faction_leader = { country_event = { id = china_events.223 days = 1 } }
	}

	option = {
		log = "[GetLogInfo]: event china_events.220 option china_events.220.c"
		name = china_events.220.c #Forward to faction leader, recommend keeping
		trigger = {
			is_subject = no
			is_in_faction = yes
			is_faction_leader = no
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				has_government = social_conservative
				FROM = { has_socialist_government = no }
			}
		}
		save_event_target_as = china_commissioner_recommends_keeping_legations
		faction_leader = { country_event = { id = china_events.223 days = 1 } }
	}

	option = {
		log = "[GetLogInfo]: event china_events.220 option china_events.220.d"
		name = china_events.220.d #Forward to council, recommend disbanding
		trigger = {
			is_subject = no
			is_in_faction = no
			check_variable = { global.LEC_voters^num > 0 }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				has_government = paternal_autocrat
				FROM = { china_is_aligned_with_zhili = no }
			}
			modifier = {
				factor = 0
				has_government = national_populist
				OR = {
					FNG_JAP_hostile = yes
					FROM = { china_is_aligned_with_fengtian = no }
				}
			}
		}
		effect_tooltip = {
			every_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.227 days = 1 }
			}
		}
		hidden_effect = {
			random_other_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.227 days = 1 }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.220 option china_events.220.e"
		name = china_events.220.e #Forward to council, recommend keeping
		trigger = {
			is_subject = no
			is_in_faction = no
			check_variable = { global.LEC_voters^num > 0 }
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				has_government = social_conservative
				FROM = { has_socialist_government = no }
			}
		}
		save_event_target_as = china_commissioner_recommends_keeping_legations
		effect_tooltip = {
			every_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.227 days = 1 }
			}
		}
		hidden_effect = {
			random_other_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.227 days = 1 }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.220 option china_events.220.f"
		name = china_events.220.f #Agree to rejoin
		trigger = {
			is_subject = no
			OR = {
				is_faction_leader = yes
				check_variable = { global.LEC_voters^num < 1 }
			}
		}
		if = {
			limit = { is_faction_leader = yes }
			dismantle_faction = yes
		}
		FROM = { country_event = { id = china_events.221 days = 1 } }
		custom_effect_tooltip = GAME_OVER_TT
		effect_tooltip = {
			FROM = {
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.220 option china_events.220.g"
		name = china_events.220.g #Refuse
		trigger = {
			is_subject = no
			OR = {
				is_faction_leader = yes
				check_variable = { global.LEC_voters^num < 1 }
			}
		}
		FROM = { country_event = { id = china_events.222 days = 1 } }
		effect_tooltip = {
			FROM = {
				create_wargoal = {
					target = ROOT
					type = annex_everything
				}
			}
		}
	}
}

country_event = { #China: independent LEC rejoins China
	id = china_events.221
	title = china_events.221.t

	desc = {
		text = china_events.221.d.puppet
		trigger = {
			FROM = { is_subject = yes }
		}
	}
	desc = {
		text = china_events.221.d.in_faction
		trigger = {
			FROM = {
				is_subject = no
				is_in_faction = yes
				is_faction_leader = no
			}
		}
	}
	desc = {
		text = china_events.221.d.independent
		trigger = {
			FROM = {
				is_subject = no
				OR = {
					is_in_faction = no
					is_faction_leader = yes
				}
			}
		}
	}

	picture = GFX_report_event_QIE_soldiers_mobilize

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.221 option china_events.221.a"
		name = china_events.221.a
		annex_country = {
			target = FROM
			transfer_troops = no
		}
	}
}

country_event = { #China: independent LEC refuses to rejoin China
	id = china_events.222
	title = china_events.222.t
	desc = china_events.222.d
	picture = GFX_report_event_LEC_Canadian_Forces_in_Hong_Kong

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.222 option china_events.222.a"
		name = china_events.222.a #Back down
		ai_chance = { base = 0 }
		add_stability = -0.05
		add_war_support = -0.1
		effect_tooltip = {
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		FROM = { country_event = china_events.239 }
	}

	option = {
		log = "[GetLogInfo]: event china_events.222 option china_events.222.b"
		name = china_events.222.b #War
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				country_is_in_dangerous_war = yes
			}
			modifier = {
				factor = 0
				FROM = { default_attack_AI_trigger = yes }
			}
		}
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
	}
}

country_event = { #LEC faction leader/overlord: China wants to negotiate annexation of LEC
	id = china_events.223
	title = china_events.223.t
	picture = GFX_report_event_generic_beijing_map
	desc = {
		text = china_events.223.d.overlord
		trigger = { has_subject = LEC }
	}
	desc = {
		text = china_events.223.d.independent_suggests_disbanding
		trigger = {
			NOT = { has_subject = LEC }
			NOT = { has_event_target = china_commissioner_recommends_keeping_legations }
		}
	}
	desc = {
		text = china_events.223.d.independent_suggests_keeping
		trigger = {
			NOT = { has_subject = LEC }
			has_event_target = china_commissioner_recommends_keeping_legations
		}
	}

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.223 option china_events.223.a"
		name = china_events.223.a #Yes
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				original_tag = JAP
				is_faction_leader = yes
				NOT = { is_in_faction_with = event_target:china }
			}
			modifier = {
				factor = 0
				LEC = {
					is_ai = no
					OR = {
						is_subject = yes
						has_event_target = china_commissioner_recommends_keeping_legations
					}
				}
			}
			modifier = {
				factor = 0.33
				has_event_target = china_commissioner_recommends_keeping_legations
			}
		}
		FROM = { country_event = { id = china_events.224 days = 1 } }
		effect_tooltip = {
			event_target:china = {
				country_event = china_events.221
				annex_country = {
					target = LEC
					transfer_troops = no
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.223 option china_events.223.b"
		name = china_events.223.b #No
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_american_tag = yes #America will always withdraw from the Legation Cities
			}
			modifier = {
				factor = 0
				country_is_in_dangerous_war = yes
				NOT = { #Bypass so Japan will always refuse no matter what
					AND = {
						original_tag = JAP
						is_faction_leader = yes
						NOT = { is_in_faction_with = event_target:china }
					}
				}
			}
			modifier = {
				factor = 0
				is_in_faction_with = event_target:china
				OR = {
					is_faction_leader = yes
					NOT = { has_subject = LEC }
				}
			}
			modifier = {
				factor = 0
				strength_ratio = { tag = event_target:china ratio < 1 }
				NOT = { #Bypass so Japan will always refuse no matter what
					AND = {
						original_tag = JAP
						is_faction_leader = yes
						NOT = { is_in_faction_with = event_target:china }
					}
				}
			}
			modifier = {
				factor = 2
				has_event_target = china_commissioner_recommends_keeping_legations
			}
		}
		effect_tooltip = {
			if = {
				limit = { is_in_faction_with = event_target:china }
				event_target:china = { leave_faction = yes }
			}
		}
		FROM = { country_event = { id = china_events.225 days = 1 } }
	}
}

country_event = { #LEC: FROM accepts annexation of legations
	id = china_events.224
	title = china_events.224.t
	desc = china_events.224.d
	picture = GFX_report_event_GXC_shanghai_teahouse

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.224 option china_events.224.a"
		name = china_events.224.a
		event_target:china = { country_event = china_events.221 }
		custom_effect_tooltip = GAME_OVER_TT
		effect_tooltip = {
			event_target:china = {
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
			}
		}
	}
}

country_event = { #LEC: FROM refuses annexation of legations
	id = china_events.225
	title = china_events.225.t
	desc = china_events.225.d
	picture = GFX_report_event_JAP_parade_shanghai

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.225 option china_events.225.a"
		name = china_events.225.a #Well, that's that
		effect_tooltip = {
			if = {
				limit = { is_in_faction_with = event_target:china }
				event_target:china = { leave_faction = yes }
			}
		}
		event_target:china = { country_event = { id = china_events.226 days = 1 } }
	}
}

country_event = { #China: faction refuses to return the legations
	id = china_events.226
	title = china_events.226.t
	picture = GFX_report_event_JAP_parade_shanghai
	desc = {
		text = china_events.226.d.same_faction
		trigger = { is_in_faction_with = FROM }
	}
	desc = {
		text = china_events.226.d.not_same_faction
		trigger = { NOT = { is_in_faction_with = FROM } }
	}

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.226 option china_events.226.a"
		name = china_events.226.a #Back down
		ai_chance = { base = 0 }
		trigger = { NOT = { is_in_faction_with = FROM } }
	}

	option = {
		log = "[GetLogInfo]: event china_events.226 option china_events.226.b"
		name = china_events.226.b #Leave the alliance
		trigger = { is_in_faction_with = FROM }
		ai_chance = { base = 0 }
		if = {
			limit = { is_in_faction_with = FROM }
			leave_faction = yes
		}
		peace_out_non_neighbours_after_leaving_faction = yes
	}

	option = {
		log = "[GetLogInfo]: event china_events.226 option china_events.226.c"
		name = china_events.226.c #War
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				country_is_in_dangerous_war = yes
			}
			modifier = {
				factor = 0
				FROM = { default_attack_AI_trigger = yes }
			}
		}
		if = {
			limit = { is_in_faction_with = FROM }
			leave_faction = yes
		}
		peace_out_non_neighbours_after_leaving_faction = yes
		create_wargoal = {
			target = LEC
			type = annex_everything
		}
	}
}

country_event = { #Council members: China wants annexation of the legations
	id = china_events.227
	title = china_events.227.t
	desc = china_events.227.d
	picture = GFX_report_event_LEC_shanghai_police_patrol

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.227 option china_events.227.a"
		name = china_events.227.a #Sure
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_war_with = event_target:china
			}
			modifier = {
				factor = 0
				LEC = { is_ai = no }
				has_event_target = china_commissioner_recommends_keeping_legations
			}
			modifier = {
				factor = 0
				original_tag = JAP
				is_faction_leader = yes
			}
			modifier = {
				add = -40
				has_event_target = china_commissioner_recommends_keeping_legations
			}
			modifier = {
				factor = 0.5
				event_target:china = { has_socialist_government = yes }
			}
			modifier = {
				factor = 0.5
				OR = {
					has_idea = LEC_USA_open_door
					has_idea = LEC_GER_open_door
					has_idea = LEC_better_open_door
				}
			}
		}
		set_country_flag = china_disband_legations
		add_to_variable = { global.china_disband_legations = 1 }
		effect_tooltip = {
			LEC = { country_event = { id = china_events.228 days = 1 } }
		}
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_disband_legations }
						NOT = { has_country_flag = china_keep_legations }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_disband_legations }
						NOT = { has_country_flag = china_keep_legations }
					}
					country_event = china_events.227
				}
			}
			else = {
				LEC = { country_event = { id = china_events.228 days = 1 } }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.227 option china_events.227.b"
		name = china_events.227.b #No
		ai_chance = {
			base = 0
			modifier = {
				add = 40
				has_event_target = china_commissioner_recommends_keeping_legations
			}
			modifier = {
				add = 50
				event_target:china = { has_socialist_government = yes }
			}
			modifier = {
				add = 50
				OR = {
					has_idea = LEC_USA_open_door
					has_idea = LEC_GER_open_door
					has_idea = LEC_better_open_door
				}
			}
			modifier = {
				add = 100
				original_tag = JAP
				is_faction_leader = yes
			}
			modifier = {
				add = 100
				has_war_with = event_target:china
			}
			modifier = {
				factor = 0
				LEC_has_legation_council_vote = no
			}
			modifier = {
				factor = 0
				LEC = { is_ai = no }
				NOT = { has_event_target = china_commissioner_recommends_keeping_legations }
			}
			modifier = {
				factor = 0
				is_american_tag = yes
				event_target:china = { both_socialist_or_both_not_socialist = yes }
			}
			modifier = {
				factor = 0
				NOT = { has_war_with = event_target:china }
				country_is_in_dangerous_war = yes
			}
			modifier = {
				factor = 0
				NOT = { has_war_with = event_target:china }
				strength_ratio = { tag = event_target:china ratio < 1 }
			}
		}
		set_country_flag = china_keep_legations
		add_to_variable = { global.china_keep_legations = 1 }
		effect_tooltip = {
			LEC = { country_event = { id = china_events.228 days = 1 } }
		}
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_disband_legations }
						NOT = { has_country_flag = china_keep_legations }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_disband_legations }
						NOT = { has_country_flag = china_keep_legations }
					}
					country_event = china_events.227
				}
			}
			else = {
				LEC = { country_event = { id = china_events.228 days = 1 } }
			}
		}
	}
}

country_event = { #LEC: results of the vote
	id = china_events.228
	title = china_events.228.t
	picture = GFX_report_event_CHI_vote
	desc = {
		text = china_events.228.d.disband
		trigger = {
			check_variable = { global.china_disband_legations > global.china_keep_legations }
		}
	}
	desc = {
		text = china_events.228.d.keep
		trigger = {
			NOT = { check_variable = { global.china_disband_legations > global.china_keep_legations } }
		}
	}

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.228 option china_events.228.a"
		name = china_events.228.a
		trigger = {
			check_variable = { global.china_disband_legations > global.china_keep_legations }
		}
		effect_tooltip = {
			every_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.229 days = 1 }
			}
		}
		hidden_effect = {
			random_other_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.229 days = 1 }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.228 option china_events.228.b"
		name = china_events.228.b
		trigger = {
			NOT = { check_variable = { global.china_disband_legations > global.china_keep_legations } }
		}
		effect_tooltip = {
			every_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.232 days = 1 }
			}
		}
		hidden_effect = {
			random_other_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.232 days = 1 }
			}
		}
	}
}

country_event = { #Council members: council voted to disband the legations
	id = china_events.229
	title = china_events.229.t
	picture = GFX_report_event_GEA_falkenhausen
	desc = {
		text = china_events.229.d.voted_for
		trigger = {
			has_country_flag = china_disband_legations
		}
	}
	desc = {
		text = china_events.229.d.voted_against
		trigger = {
			NOT = { has_country_flag = china_disband_legations }
		}
	}

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.229 option china_events.229.a"
		name = china_events.229.a #Alright
		trigger = {
			has_country_flag = china_disband_legations
		}
		LEC_remove_from_legation_council = yes
		effect_tooltip = {
			LEC = { country_event = { id = china_events.230 days = 1 } }
			event_target:china = { country_event = { id = china_events.231 days = 1 } }
		}

		set_country_flag = china_received_legation_vote_notification
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
					country_event = china_events.229
				}
			}
			else = {
				LEC = { country_event = { id = china_events.230 days = 1 } }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.229 option china_events.229.b"
		name = china_events.229.b #Ah, whatever
		trigger = {
			NOT = { has_country_flag = china_disband_legations }
		}
		ai_chance = { base = 30 }
		LEC_remove_from_legation_council = yes
		effect_tooltip = {
			LEC = { country_event = { id = china_events.230 days = 1 } }
			event_target:china = { country_event = { id = china_events.231 days = 1 } }
		}

		set_country_flag = china_received_legation_vote_notification
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
					country_event = china_events.229
				}
			}
			else = {
				LEC = { country_event = { id = china_events.230 days = 1 } }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.229 option china_events.229.c"
		name = china_events.229.c #We will not accept this!
		trigger = {
			NOT = { has_country_flag = china_disband_legations }
			NOT = { has_war_with = event_target:china }
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 70
				original_tag = JAP
				is_faction_leader = yes
				has_socialist_government = no
			}
			modifier = {
				add = 70
				is_major = yes
				has_socialist_government = no
				FROM = { has_socialist_government = yes }
			}
			modifier = {
				factor = 0.5
				country_is_in_dangerous_war = yes
			}
			modifier = {
				factor = 0.5
				FROM = { default_attack_AI_trigger = yes }
			}
			modifier = {
				factor = 0
				surrender_progress > 0.1
			}
			modifier = {
				factor = 0
				has_war = yes
				is_in_faction = no
				enemies_strength_ratio > 1
			}
			modifier = {
				factor = 0
				has_war = yes
				is_in_faction = yes
				alliance_strength_ratio < 1
			}
		}
		LEC_remove_from_legation_council = yes
		effect_tooltip = {
			LEC = { country_event = { id = china_events.230 days = 1 } }
			event_target:china = { country_event = { id = china_events.231 days = 1 } }
		}

		custom_effect_tooltip = tooltip_white_line
		save_event_target_as = china_will_be_attacked_by_council_member
		create_wargoal = {
			target = event_target:china
			type = topple_government
		}

		set_country_flag = china_received_legation_vote_notification
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
					country_event = china_events.229
				}
			}
			else = {
				LEC = { country_event = { id = china_events.230 days = 1 } }
			}
		}
	}
}

country_event = { #LEC: council voted to disband the legations
	id = china_events.230
	title = china_events.230.t

	desc = {
		text = china_events.230.d.will_be_attacked
		trigger = { has_event_target = china_will_be_attacked_by_council_member }
	}
	desc = {
		text = china_events.230.d.peaceful_reunification
		trigger = { NOT = { has_event_target = china_will_be_attacked_by_council_member } }
	}

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	picture = GFX_report_event_GEA_falkenhausen

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.230 option china_events.230.a"
		name = china_events.230.a
		event_target:china = { country_event = china_events.231 }
		custom_effect_tooltip = GAME_OVER_TT
		effect_tooltip = {
			event_target:china = {
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
			}
		}
	}
}

country_event = { #China: legations will disband
	id = china_events.231
	title = china_events.231.t
	picture = GFX_report_event_GEA_falkenhausen
	desc = {
		text = china_events.231.d.will_be_attacked
		trigger = { has_event_target = china_will_be_attacked_by_council_member }
	}
	desc = {
		text = china_events.231.d.peaceful_reunification
		trigger = { NOT = { has_event_target = china_will_be_attacked_by_council_member } }
	}

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.231 option china_events.231.a"
		name = china_events.231.a
		trigger = { has_event_target = china_will_be_attacked_by_council_member }
		annex_country = {
			target = FROM
			transfer_troops = no
		}
		effect_tooltip = {
			every_other_country = {
				limit = { has_wargoal_against = { target = event_target:china type = topple_government } }
				create_wargoal = {
					target = event_target:china
					type = topple_government
				}
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.231 option china_events.231.b"
		name = china_events.231.b
		trigger = { NOT = { has_event_target = china_will_be_attacked_by_council_member } }
		annex_country = {
			target = FROM
			transfer_troops = no
		}
	}
}

country_event = { #Council members: council voted to keep the legations
	id = china_events.232
	title = china_events.232.t

	desc = {
		text = china_events.232.d.voted_for
		trigger = {
			has_country_flag = china_keep_legations
		}
	}
	desc = {
		text = china_events.232.d.voted_against
		trigger = {
			NOT = { has_country_flag = china_keep_legations }
		}
	}

	picture = GFX_report_event_JAP_battleship_kongo

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.232 option china_events.232.a"
		name = china_events.232.a #Alright
		trigger = {
			OR = {
				has_country_flag = china_keep_legations
				has_war_with = event_target:china
			}
		}
		set_country_flag = china_received_legation_vote_notification
		effect_tooltip = {
			event_target:china = { country_event = { id = china_events.233 days = 1 } }
		}
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
					country_event = china_events.232
				}
			}
			else = {
				event_target:china = { country_event = { id = china_events.233 days = 1 } }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.232 option china_events.232.b"
		name = china_events.232.b #China won't be happy about this...
		trigger = {
			NOT = { has_country_flag = china_keep_legations }
			NOT = { has_war_with = event_target:china }
		}
		set_country_flag = china_received_legation_vote_notification
		effect_tooltip = {
			event_target:china = { country_event = { id = china_events.233 days = 1 } }
		}
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_vote_notification }
					}
					country_event = china_events.232
				}
			}
			else = {
				event_target:china = { country_event = { id = china_events.233 days = 1 } }
			}
		}
	}
}

country_event = { #China: council voted to keep the legations
	id = china_events.233
	title = china_events.233.t
	desc = china_events.233.d
	picture = GFX_report_event_JAP_battleship_kongo

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.233 option china_events.233.a"
		name = china_events.233.a #The Legations end here - by force if need be
		effect_tooltip = {
			every_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.234 days = 1 }
			}
		}
		custom_effect_tooltip = if_they_accept_tt
		effect_tooltip = {
			annex_country = {
				target = LEC
				transfer_troops = no
			}
		}
		custom_effect_tooltip = if_they_refuse_tt
		effect_tooltip = {
			create_wargoal = {
				target = LEC
				type = annex_everything
			}
		}
		hidden_effect = {
			random_other_country = {
				limit = { LEC_is_legation_council_member = yes }
				country_event = { id = china_events.234 days = 1 }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.233 option china_events.233.b"
		name = china_events.233.b #There is nothing we can do
		add_stability = -0.05
		add_war_support = -0.1
		effect_tooltip = {
			diplomatic_relation = {
				country = LEC
				relation = non_aggression_pact
			}
		}
		LEC = { country_event = china_events.239 }
		every_country = {
			limit = { LEC_is_legation_council_member = yes }
			country_event = china_events.240
		}
	}
}

country_event = { #Council members: China threatens war over LEC
	id = china_events.234
	title = china_events.234.t
	desc = china_events.234.d
	picture = GFX_report_event_CHI_warlord_cavalry

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.234 option china_events.234.a"
		name = china_events.234.a #Screw this, they can have them
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				NOT = { has_guaranteed = LEC }
			}
			modifier = {
				factor = 0
				has_war_with = event_target:china
			}
		}
		LEC_remove_from_legation_council = yes

		set_country_flag = china_received_legation_war_notification
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_war_notification }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_war_notification }
					}
					country_event = china_events.234
				}
			}
			else_if = {
				limit = { any_other_country = { has_guaranteed = LEC } }
				LEC = { country_event = { id = china_events.235 days = 1 } }
			}
			else = {
				LEC = { country_event = { id = china_events.237 days = 1 } }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.234 option china_events.234.b"
		name = china_events.234.b #Let them come, if they dare
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				NOT = { has_war_with = event_target:china }
				country_is_in_dangerous_war = yes
			}
		}
		if = {
			limit = { NOT = { has_guaranteed = LEC } }
			give_guarantee = LEC
		}
		effect_tooltip = {
			event_target:china = {
				create_wargoal = {
					target = LEC
					type = annex_everything
				}
			}
		}
		set_country_flag = china_received_legation_war_notification
		hidden_effect = {
			if = {
				limit = {
					any_other_country = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_war_notification }
					}
				}
				random_other_country = {
					limit = {
						LEC_is_legation_council_member = yes
						NOT = { has_country_flag = china_received_legation_war_notification }
					}
					country_event = china_events.234
				}
			}
			else_if = {
				limit = { any_other_country = { has_guaranteed = LEC } }
				LEC = { country_event = { id = china_events.235 days = 1 } }
			}
			else = {
				LEC = { country_event = { id = china_events.237 days = 1 } }
			}
		}
	}
}

country_event = { #LEC: council members stand by LEC
	id = china_events.235
	title = china_events.235.t
	desc = china_events.235.d
	picture = GFX_report_event_GER_ship

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.235 option china_events.235.a"
		name = china_events.235.a
		event_target:china = { country_event = china_events.236 }
	}
}

country_event = { #China: war with LEC
	id = china_events.236
	title = china_events.236.t
	desc = china_events.236.d
	picture = GFX_report_event_generic_east_china_map

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.236 option china_events.236.a"
		name = china_events.236.a #Back down
		ai_chance = { base = 0 }
		add_stability = -0.05
		add_war_support = -0.1
		effect_tooltip = {
			diplomatic_relation = {
				country = LEC
				relation = non_aggression_pact
			}
		}
		LEC = { country_event = china_events.239 }
		every_country = {
			limit = { LEC_is_legation_council_member = yes }
			country_event = china_events.240
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.236 option china_events.236.b"
		name = china_events.236.b #War
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				country_is_in_dangerous_war = yes
				any_other_country = {
					has_guaranteed = LEC
					NOT = { has_war_with = ROOT }
				}
			}
			modifier = {
				factor = 0
				FROM = { default_attack_AI_trigger = yes }
			}
		}
		create_wargoal = {
			target = FROM
			type = annex_everything
		}
	}
}

country_event = { #LEC: council abandons LEC after threats
	id = china_events.237
	title = china_events.237.t
	desc = china_events.237.d
	picture = GFX_report_event_CHI_radio

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.237 option china_events.237.a"
		name = china_events.237.a
		event_target:china = { country_event = china_events.238 }
		custom_effect_tooltip = GAME_OVER_TT
		effect_tooltip = {
			event_target:china = {
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
			}
		}
	}
}

country_event = { #China: council abandons LEC after threats
	id = china_events.238
	title = china_events.238.t
	desc = china_events.238.d
	picture = GFX_report_event_CHI_radio

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.238 option china_events.238.a"
		name = china_events.238.a
		annex_country = {
			target = FROM
			transfer_troops = no
		}
	}
}

country_event = { #LEC: China backs down
	id = china_events.239
	title = china_events.239.t
	desc = china_events.239.d
	picture = GFX_report_event_CHI_chen_gongbo

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.239 option china_events.239.a"
		name = china_events.239.a
		set_truce = { target = FROM days = 1095 }
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
		add_opinion_modifier = {
			target = FROM
			modifier = KR_approves_of_govt
		}
	}
}

country_event = { #Council members: China backs down
	id = china_events.240
	title = china_events.240.t
	desc = china_events.240.d
	picture = GFX_report_event_CHI_chen_gongbo

	trigger = {
		NOT = { event_target:china = { has_war_with = LEC } }
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.240 option china_events.240.a"
		name = china_events.240.a
		add_opinion_modifier = {
			target = FROM
			modifier = KR_approves_of_govt
		}
	}
}

###################
### NEWS EVENTS ###
###################

news_event = { #Manchu Qing unites China
	id = china_events.300
	immediate = { log = "[GetLogInfo]: event china_events.300" }
	title = china_events.300.t
	desc = china_events.300.d
	picture = GFX_news_event_QIE_manchu_unification

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.300.a
	}
}
news_event = { #Zhili Qing unites China
	id = china_events.301
	immediate = { log = "[GetLogInfo]: event china_events.301" }
	title = china_events.301.t
	desc = china_events.301.d
	picture = GFX_news_event_QIE_cao_kun_dragon

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.301.a
	}
}
news_event = { #Zhili Republic unites China
	id = china_events.302
	immediate = { log = "[GetLogInfo]: event china_events.302" }
	title = china_events.302.t
	desc = china_events.302.d
	picture = GFX_news_event_china_unified_beiyang

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.301.a
	}
}
news_event = { #Fengtian unites China
	id = china_events.303
	immediate = { log = "[GetLogInfo]: event china_events.303" }
	title = china_events.303.t
	desc = china_events.303.d
	picture = GFX_news_event_FNG_fengtian_unification

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.303.a
	}
}
news_event = { #RNGROC unites China
	id = china_events.304
	immediate = { log = "[GetLogInfo]: event china_events.304" }
	title = china_events.304.t
	desc = china_events.304.d
	picture = GFX_news_event_japanese_parade

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.304.a
	}
}
news_event = { #Yan Xishan unites China
	id = china_events.305
	immediate = { log = "[GetLogInfo]: event china_events.305" }
	title = china_events.305.t
	desc = china_events.305.d
	picture = GFX_news_event_SHX_yan_unification

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.305.a
	}
}
news_event = { #Feng Yuxiang unites China
	id = china_events.306
	immediate = { log = "[GetLogInfo]: event china_events.306" }
	title = china_events.306.t
	desc = china_events.306.d
	picture = GFX_news_event_SHX_feng_unification

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.306.a
	}
}
news_event = { #Yiguandao unites China
	id = china_events.307
	immediate = { log = "[GetLogInfo]: event china_events.307" }
	title = china_events.307.t
	desc = china_events.307.d
	picture = GFX_news_event_SHD_yiguandao

	trigger = {
		wants_world_news = yes
	}
	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.307.a
	}
}
news_event = { #Left KMT unites China
	id = china_events.308
	immediate = { log = "[GetLogInfo]: event china_events.308" }
	title = china_events.308.t
	desc = {
		text = china_events.308.d.LCS
		trigger = { FROM = { has_government = syndicalist } }
	}
	desc = {
		text = china_events.308.d.KMT
		trigger = { FROM = { NOT = { has_government = syndicalist } } }
	}
	picture = GFX_news_event_CHI_kmt_victor

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.308.a
		trigger = {
			OR = {
				has_socialist_government = yes
				is_subject_of = LKT
			}
		}
	}

	option = {
		name = china_events.308.c
		trigger = {
			NOT = { is_subject_of = LKT }
			has_elected_government = yes
			NOT = { original_tag = JAP }
			NOT = { original_tag = TIB }
			NOT = { original_tag = INC }
		}
	}

	option = {
		name = china_events.308.b
		trigger = {
			NOT = { is_subject_of = LKT }
			has_socialist_government = no
			OR = {
				has_elected_government = no
				original_tag = JAP
				original_tag = TIB
				original_tag = INC
			}
		}
	}
}
news_event = { #Right KMT unites China
	id = china_events.309
	immediate = { log = "[GetLogInfo]: event china_events.309" }
	title = china_events.309.t
	desc = china_events.309.d
	picture = GFX_news_event_CHI_kmt_victor

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.309.a
	}
}
news_event = { #Federalists unite China
	id = china_events.310
	immediate = { log = "[GetLogInfo]: event china_events.310" }
	title = china_events.310.t
	desc = china_events.310.d
	picture = GFX_news_event_GXC_federalist_unification

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.310.a
		trigger = {
			OR = {
				has_elected_government = yes
				is_subject_of = UPC
			}
		}
	}

	option = {
		name = china_events.310.b
		trigger = {
			has_elected_government = no
			NOT = { is_subject_of = UPC }
		}
	}
}
news_event = { #Zhili Sichuan unites China
	id = china_events.311
	immediate = { log = "[GetLogInfo]: event china_events.311" }
	title = china_events.311.t
	desc = china_events.311.d
	picture = GFX_news_event_china_unified_beiyang

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.311.a
	}
}
news_event = { #Federalist Sichuan unites China
	id = china_events.312
	immediate = { log = "[GetLogInfo]: event china_events.312" }
	title = china_events.312.t
	desc = china_events.312.d
	picture = GFX_news_event_GXC_federalist_government

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.312.a
	}
}
news_event = { #Liu Xiang unites China
	id = china_events.313
	immediate = { log = "[GetLogInfo]: event china_events.313" }
	title = china_events.313.t
	desc = china_events.313.d
	picture = GFX_news_event_china_unified_liu_xiang

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.313.a
	}
}
news_event = { #Minor clique unites China
	id = china_events.314
	immediate = { log = "[GetLogInfo]: event china_events.314" }
	title = china_events.314.t
	desc = china_events.314.d
	picture = GFX_news_event_china_unified

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.314.a
	}
}
news_event = { #LEP Unites China
	id = china_events.315
	immediate = { log = "[GetLogInfo]: event china_events.315" }
	title = china_events.315.t
	desc = china_events.315.d
	picture = GFX_news_event_LEP_qi_victory

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.315.a
	}
}
news_event = { #Anti-Concessionist Zhili Qing Unites China
	id = china_events.316
	immediate = { log = "[GetLogInfo]: event china_events.316" }
	title = china_events.316.t
	desc = china_events.316.d
	picture = GFX_news_event_QIE_wu_peifu_overcoat

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.316.a
	}
}
news_event = { #Wang Jingwei Holds On
	id = china_events.340
	immediate = { log = "[GetLogInfo]: event china_events.340" }
	title = china_events.340.t
	desc = china_events.340.d
	picture = GFX_news_event_CHI_wang_victory

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.308.a
	}
}
news_event = { #Song Qingling
	id = china_events.341
	immediate = { log = "[GetLogInfo]: event china_events.341" }
	title = china_events.341.t
	desc = china_events.341.d
	picture = GFX_news_event_CHI_pac_victory

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.341.a
	}
}
news_event = { #Chen Gongbo
	id = china_events.342
	immediate = { log = "[GetLogInfo]: event china_events.342" }
	title = china_events.342.t
	desc = china_events.342.d
	picture = GFX_news_event_CHI_chen_gongbo_victory

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.342.a
	}
}
news_event = { #Hu Zongnan
	id = china_events.343
	immediate = { log = "[GetLogInfo]: event china_events.343" }
	title = china_events.343.t
	desc = china_events.343.d
	picture = GFX_news_event_CHI_hu_victory

	trigger = {
		wants_world_news = yes
	}

	is_triggered_only = yes

	major = yes
	fire_for_sender = yes
	show_major = {
		regional_asia_news = yes
	}

	option = {
		name = china_events.343.a
	}
}

### Faction Joining Events
country_event = {
	id = china_events.401 #China seeks to join the Internationale
	title = china_events.401.t
	desc = china_events.401.d
	picture = GFX_report_event_CHI_french_army

	is_triggered_only = yes #Fired from decision

	trigger = {
		FROM = { is_in_faction = no }
	}

	option = {
		log = "[GetLogInfo]: event china_events.401 option china_events.401.a"
		name = china_events.401.a #Together we shall free the world!
		ai_chance = { base = 100 }
		add_to_faction = FROM
		FROM = { country_event = china_events.402 }
	}

	option = {
		log = "[GetLogInfo]: event china_events.401 option china_events.401.b"
		name = china_events.401.b #They are far too unorthodox for our taste.
		ai_chance = { base = 0 }
		FROM = { country_event = china_events.403 }
	}
}

country_event = {
	id = china_events.402 #China Joins the Internationale!
	title = china_events.402.t
	desc = china_events.402.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.402 option china_events.402.a"
		name = china_events.402.a #Together we complete the world revolution!
		if = {
			limit = { has_global_flag = allow_sound_events_flag }
			hidden_effect = { scoped_play_song = syn_the_internationale }
		}
	}
}

country_event = {
	id = china_events.403 #Our Application Declined.
	title = china_events.403.t
	desc = china_events.403.d
	picture = GFX_report_event_CHI_official_announcement

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.403 option china_events.403.a"
		name = china_events.403.a #Imperialists can never truly shed their roots.
		add_opinion_modifier = {
			target = FROM
			modifier = KR_disapproves_of_govt
		}
	}
}

country_event = {
	id = china_events.404 #China seeks to join the Reichspakt
	title = china_events.404.t
	desc = china_events.404.d
	picture = GFX_report_event_LEP_march

	is_triggered_only = yes #Fired from decision

	trigger = {
		FROM = { is_in_faction = no }
	}

	option = {
		log = "[GetLogInfo]: event china_events.404 option china_events.404.a"
		name = china_events.404.a #Yes
		ai_chance = { base = 100 }
		faction_leader = { add_to_faction = FROM }
		FROM = { country_event = china_events.405 }
	}

	option = {
		log = "[GetLogInfo]: event china_events.404 option china_events.404.b"
		name = china_events.404.b #No
		ai_chance = { base = 0 }
		FROM = { country_event = china_events.406 }
	}
}

country_event = {
	id = china_events.405 #China Joins the Reichspakt!
	title = china_events.405.t
	desc = china_events.405.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.405 option china_events.405.a"
		name = china_events.405.a #Yay
	}
}

country_event = {
	id = china_events.406 #Our Application Declined.
	title = china_events.406.t
	desc = china_events.406.d
	picture = GFX_report_event_CHI_official_announcement

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.406 option china_events.406.a"
		name = china_events.406.a #Boo
		add_opinion_modifier = {
			target = FROM
			modifier = KR_disapproves_of_govt
		}
	}
}
country_event = {
	id = china_events.407 #China seeks to join the Moscow Accord
	title = china_events.407.t
	desc = china_events.407.d
	picture = GFX_report_event_RUS_army4

	is_triggered_only = yes #Fired from decision

	trigger = {
		FROM = { is_in_faction = no }
	}

	option = {
		log = "[GetLogInfo]: event china_events.407 option china_events.407.a"
		name = china_events.407.a #Yes
		ai_chance = { base = 100 }
		faction_leader = { add_to_faction = FROM }
		FROM = { country_event = china_events.408 }
	}

	option = {
		log = "[GetLogInfo]: event china_events.407 option china_events.407.b"
		name = china_events.407.b #No
		ai_chance = { base = 0 }
		FROM = { country_event = china_events.409 }
	}
}

country_event = {
	id = china_events.408 #China Joins the Moscow Accord
	title = china_events.408.t
	desc = china_events.408.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.408 option china_events.408.a"
		name = china_events.408.a #Yay
	}
}

country_event = {
	id = china_events.409 #Our Application Declined.
	title = china_events.409.t
	desc = china_events.409.d
	picture = GFX_report_event_CHI_official_announcement

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.409 option china_events.409.a"
		name = china_events.409.a #Boo
		add_opinion_modifier = {
			target = FROM
			modifier = KR_disapproves_of_govt
		}
	}
}
country_event = {
	id = china_events.410 #China seeks to join the Co-Prosperity Sphere
	title = china_events.410.t
	desc = china_events.410.d
	picture = GFX_report_event_JAP_parade_shanghai

	is_triggered_only = yes #Fired from decision

	trigger = {
		FROM = { is_in_faction = no }
	}

	option = {
		log = "[GetLogInfo]: event china_events.410 option china_events.410.a"
		name = china_events.410.a #Yes
		ai_chance = { base = 100 }
		faction_leader = { add_to_faction = FROM }
		FROM = { country_event = china_events.411 }
	}

	option = {
		log = "[GetLogInfo]: event china_events.410 option china_events.410.b"
		name = china_events.410.b #No
		ai_chance = { base = 0 }
		FROM = { country_event = china_events.412 }
	}
}
country_event = {
	id = china_events.411 #China Joins the Co-Prosperity Sphere
	title = china_events.411.t
	desc = china_events.411.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.411 option china_events.411.a"
		name = china_events.411.a #Yay
	}
}

country_event = {
	id = china_events.412 #Our Application Declined.
	title = china_events.412.t
	desc = china_events.412.d
	picture = GFX_report_event_CHI_official_announcement

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.412 option china_events.412.a"
		name = china_events.412.a #Boo
		add_opinion_modifier = {
			target = FROM
			modifier = KR_disapproves_of_govt
		}
	}
}

country_event = {
	id = china_events.422 #[FROM.GetName] seeks to join the [ROOT.GetFaction]
	title = china_events.422.t
	desc = china_events.422.d
	picture = GFX_report_event_CHI_french_army

	is_triggered_only = yes #Fired from decision

	trigger = {
		FROM = {
			is_in_faction = no
		}
	}

	option = {
		log = "[GetLogInfo]: event china_events.422 option china_events.422.a"
		name = china_events.422.a #Yes
		ai_chance = {
			base = 100
			modifier = {
				factor = 0 #Won't agree if you have any claims or cores China has
				FROM = {
					OR = {
						any_owned_state = { china_is_chinese_core_or_claim_trigger = yes }
						any_subject_country = { any_owned_state = { china_is_chinese_core_or_claim_trigger = yes } }
					}
				}
			}
		}
		faction_leader = { add_to_faction = FROM }
		FROM = { country_event = china_events.423 }
	}

	option = {
		log = "[GetLogInfo]: event china_events.422 option china_events.422.b"
		name = china_events.422.b #No
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				FROM = {
					OR = {
						surrender_progress > 0.3
						any_enemy_country = { strength_ratio = { tag = ROOT ratio > 1 } }
					}
					any_enemy_country = { at_war_with_or_justifying_wargoal_against_ROOT = no }
				}
			}

			#Game Rules
			modifier = {
				factor = 0
				FROM = {
					tag = INC
					has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI }
				}
			}
			modifier = {
				factor = 0
				FROM = {
					tag = INS
					has_game_rule = { rule = INS_forpol option = INS_FORPOL_CHI }
				}
			}
			modifier = {
				factor = 0
				FROM = {
					tag = SIA
					has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI }
				}
			}
		}
		FROM = { country_event = china_events.424 }
	}
}

country_event = {
	id = china_events.423 #[ROOT.GetName] Joins the [FROM.GetFaction]!
	title = china_events.423.t
	desc = china_events.423.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.423 option china_events.423.a"
		name = china_events.423.a #Yay
	}
}

country_event = {
	id = china_events.424 #Our Application Denied.
	title = china_events.424.t
	desc = china_events.424.d
	picture = GFX_report_event_CHI_official_announcement

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.424 option china_events.424.a"
		name = china_events.424.a #Boo
		add_opinion_modifier = {
			target = FROM
			modifier = KR_disapproves_of_govt
		}
	}
}

country_event = { #invite from CHN
	id = china_events.425
	title = china_events.425.t
	desc = china_events.425.d
	picture = GFX_report_event_generic_diplomacy3
	is_triggered_only = yes
	option = {
		log = "[GetLogInfo]: event china_events.425 option china_events.425.a"
		name = china_events.425.a #Together for peace!
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				has_opinion = {
					target = FROM
					value < 25
				}
			}
			modifier = {
				add = 100
				JAP = { is_subject_of = FROM } #Add a bunch of bonus reasons to join if China fully defeated JAP
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = FROM
					value < 0
				}
				NOT = { #Bypass the opinion requirement if a CHI forpol gamerule is set. This basically applies to Feng Yuxiang only since these paths are for socialists.
					AND = {
						tag = ARM
						has_game_rule = { rule = ARM_forpol option = ARM_FORPOL_PER }
						PER = { is_in_faction_with = CHI }
					}
					AND = {
						tag = BRM
						has_game_rule = { rule = BRM_forpol option = BRM_FORPOL_CHI }
					}
					AND = {
						tag = HAW
						has_game_rule = { rule = HAW_forpol option = HAW_FORPOL_CHI }
					}
					AND = {
						tag = HND
						has_game_rule = { rule = HND_forpol option = HND_FORPOL_CHI }
					}
					AND = {
						tag = INC
						has_game_rule = { rule = INC_forpol option = INC_FORPOL_CHI }
					}
					AND = {
						tag = INS
						has_game_rule = { rule = INS_forpol option = INS_FORPOL_CHI }
					}
					AND = {
						tag = PER
						has_game_rule = { rule = PER_path option = PER_PATH_RADSOC_CHI }
					}
					AND = {
						tag = PHI
						has_game_rule = { rule = PHI_forpol option = PHI_FORPOL_CHI }
					}
					AND = {
						tag = SIA
						has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI }
					}
					AND = {
						tag = TUR
						has_game_rule = { rule = TUR_forpol option = TUR_FORPOL_CHI }
					}
				}
			}
			modifier = {
				add = 100 #Add a bunch of bonus reasons to join if a CHI forpol gamerule is set
				OR = {
					AND = {
						tag = ARM
						has_game_rule = { rule = ARM_forpol option = ARM_FORPOL_PER }
						PER = { is_in_faction_with = CHI }
					}
					AND = {
						tag = BRM
						has_game_rule = { rule = BRM_forpol option = BRM_FORPOL_CHI }
					}
					AND = {
						tag = HAW
						has_game_rule = { rule = HAW_forpol option = HAW_FORPOL_CHI }
					}
					AND = {
						tag = HND
						has_game_rule = { rule = HND_forpol option = HND_FORPOL_CHI }
						NOT = { has_government = radical_socialist } #The Radsocs in HND are isolationists
					}
					AND = {
						tag = INC
						has_game_rule = { rule = INC_forpol option = INC_FORPOL_CHI }
					}
					AND = {
						tag = INS
						has_game_rule = { rule = INS_forpol option = INS_FORPOL_CHI }
					}
					AND = {
						tag = PER
						has_game_rule = { rule = PER_path option = PER_PATH_RADSOC_CHI }
					}
					AND = {
						tag = PHI
						has_game_rule = { rule = PHI_forpol option = PHI_FORPOL_CHI }
					}
					AND = {
						tag = SIA
						has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI }
					}
					AND = {
						tag = TUR
						has_game_rule = { rule = TUR_forpol option = TUR_FORPOL_CHI }
					}
				}
			}
			modifier = {
				factor = 0 #Give 0 reason to join if a tag has a non CHI forpol gamerule set
				OR = {
					AND = {
						tag = ARM
						NOT = { has_game_rule = { rule = ARM_forpol option = DEFAULT } }
						NOT = {
							AND = {
								has_game_rule = { rule = ARM_forpol option = ARM_FORPOL_PER }
								PER = { is_in_faction_with = CHI }
							}
						}
					}
					AND = {
						tag = BRM
						NOT = { has_game_rule = { rule = BRM_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = BRM_forpol option = BRM_FORPOL_CHI } }
					}
					AND = {
						tag = HAW
						NOT = { has_game_rule = { rule = HAW_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = HAW_forpol option = HAW_FORPOL_CHI } }
					}
					AND = {
						tag = HND
						NOT = { has_game_rule = { rule = HND_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = HND_forpol option = HND_FORPOL_CHI } }
					}
					AND = {
						tag = INC
						NOT = { has_game_rule = { rule = INC_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = INC_forpol option = INC_FORPOL_CHI } }
					}
					AND = {
						tag = INS
						NOT = { has_game_rule = { rule = INS_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = INS_forpol option = INS_FORPOL_CHI } }
					}
					AND = {
						tag = PER
						NOT = { has_game_rule = { rule = PER_path option = DEFAULT } }
						NOT = { has_game_rule = { rule = PER_path option = PER_PATH_RADSOC_CHI } }
					}
					AND = {
						tag = PHI
						NOT = { has_game_rule = { rule = PHI_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = PHI_forpol option = PHI_FORPOL_CHI } }
					}
					AND = {
						tag = SIA
						NOT = { has_game_rule = { rule = SIA_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI } }
					}
					AND = {
						tag = TUR
						NOT = { has_game_rule = { rule = TUR_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = TUR_forpol option = TUR_FORPOL_CHI } }
					}
				}
			}
		}
		FROM = {
			country_event = { id = china_events.426 } #FROM joins us
		}
	}
	option = {
		log = "[GetLogInfo]: event china_events.425 option china_events.425.b"
		name = china_events.425.b #No, we have nothing to gain from this
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				has_opinion = {
					target = FROM
					value > 75
				}
			}
			modifier = {
				factor = 0
				JAP = { is_subject_of = FROM } #Give 0 reason to join if China fully defeated JAP
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = FROM
					value > 95
				}
				NOT = { #Bypass +95 opinion making joining guaranteed if a non CHI forpol gamerule is set
					AND = {
						tag = ARM
						NOT = { has_game_rule = { rule = ARM_forpol option = DEFAULT } }
						NOT = {
							AND = {
								has_game_rule = { rule = ARM_forpol option = ARM_FORPOL_PER }
								PER = { is_in_faction_with = CHI }
							}
						}
					}
					AND = {
						tag = BRM
						NOT = { has_game_rule = { rule = BRM_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = BRM_forpol option = BRM_FORPOL_CHI } }
					}
					AND = {
						tag = HAW
						NOT = { has_game_rule = { rule = HAW_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = HAW_forpol option = HAW_FORPOL_CHI } }
					}
					AND = {
						tag = HND
						NOT = { has_game_rule = { rule = HND_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = HND_forpol option = HND_FORPOL_CHI } }
					}
					AND = {
						tag = INC
						NOT = { has_game_rule = { rule = INC_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = INC_forpol option = INC_FORPOL_CHI } }
					}
					AND = {
						tag = INS
						NOT = { has_game_rule = { rule = INS_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = INS_forpol option = INS_FORPOL_CHI } }
					}
					AND = {
						tag = PER
						NOT = { has_game_rule = { rule = PER_path option = DEFAULT } }
						NOT = { has_game_rule = { rule = PER_path option = PER_PATH_RADSOC_CHI } }
					}
					AND = {
						tag = PHI
						NOT = { has_game_rule = { rule = PHI_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = PHI_forpol option = PHI_FORPOL_CHI } }
					}
					AND = {
						tag = SIA
						NOT = { has_game_rule = { rule = SIA_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI } }
					}
					AND = {
						tag = TUR
						NOT = { has_game_rule = { rule = TUR_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = TUR_forpol option = TUR_FORPOL_CHI } }
					}
				}
			}
			modifier = {
				add = 100 #Add a bunch of bonus reasons to deny if a non CHI forpol gamerule is set
				OR = {
					AND = {
						tag = ARM
						NOT = { has_game_rule = { rule = ARM_forpol option = DEFAULT } }
						NOT = {
							AND = {
								has_game_rule = { rule = ARM_forpol option = ARM_FORPOL_PER }
								PER = { is_in_faction_with = CHI }
							}
						}
					}
					AND = {
						tag = BRM
						NOT = { has_game_rule = { rule = BRM_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = BRM_forpol option = BRM_FORPOL_CHI } }
					}
					AND = {
						tag = HAW
						NOT = { has_game_rule = { rule = HAW_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = HAW_forpol option = HAW_FORPOL_CHI } }
					}
					AND = {
						tag = HND
						NOT = { has_game_rule = { rule = HND_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = HND_forpol option = HND_FORPOL_CHI } }
					}
					AND = {
						tag = INC
						NOT = { has_game_rule = { rule = INC_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = INC_forpol option = INC_FORPOL_CHI } }
					}
					AND = {
						tag = INS
						NOT = { has_game_rule = { rule = INS_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = INS_forpol option = INS_FORPOL_CHI } }
					}
					AND = {
						tag = PER
						NOT = { has_game_rule = { rule = PER_path option = DEFAULT } }
						NOT = { has_game_rule = { rule = PER_path option = PER_PATH_RADSOC_CHI } }
					}
					AND = {
						tag = PHI
						NOT = { has_game_rule = { rule = PHI_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = PHI_forpol option = PHI_FORPOL_CHI } }
					}
					AND = {
						tag = SIA
						NOT = { has_game_rule = { rule = SIA_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI } }
					}
					AND = {
						tag = TUR
						NOT = { has_game_rule = { rule = TUR_forpol option = DEFAULT } }
						NOT = { has_game_rule = { rule = TUR_forpol option = TUR_FORPOL_CHI } }
					}
				}
			}
			modifier = {
				factor = 0 #Give them 0 reason to deny if they have a pro CHI forpol gamerule
				OR = {
					AND = {
						tag = ARM
						has_game_rule = { rule = ARM_forpol option = ARM_FORPOL_PER }
						PER = { is_in_faction_with = CHI }
					}
					AND = {
						tag = BRM
						has_game_rule = { rule = BRM_forpol option = BRM_FORPOL_CHI }
					}
					AND = {
						tag = HAW
						has_game_rule = { rule = HAW_forpol option = HAW_FORPOL_CHI }
					}
					AND = {
						tag = HND
						has_game_rule = { rule = HND_forpol option = HND_FORPOL_CHI }
						NOT = { has_government = radical_socialist } #The Radsocs in HND are isolationists
					}
					AND = {
						tag = INC
						has_game_rule = { rule = INC_forpol option = INC_FORPOL_CHI }
					}
					AND = {
						tag = INS
						has_game_rule = { rule = INS_forpol option = INS_FORPOL_CHI }
					}
					AND = {
						tag = PER
						has_game_rule = { rule = PER_path option = PER_PATH_RADSOC_CHI }
					}
					AND = {
						tag = PHI
						has_game_rule = { rule = PHI_forpol option = PHI_FORPOL_CHI }
					}
					AND = {
						tag = SIA
						has_game_rule = { rule = SIA_forpol option = SIA_FORPOL_CHI }
					}
					AND = {
						tag = TUR
						has_game_rule = { rule = TUR_forpol option = TUR_FORPOL_CHI }
					}
				}
			}
		}
		FROM = {
			country_event = { id = china_events.427 days = 3 } #Their loss
		}
	}
}

country_event = { #FROM accepts our invitation
	id = china_events.426
	title = china_events.426.t
	desc = china_events.426.d
	picture = GFX_report_event_CHI_official_announcement

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.426 option china_events.426.a"
		name = china_events.426.a #Together for Victory!
		add_political_power = 20
		add_to_faction = FROM
	}
}
country_event = { #FROM refuses
	id = china_events.427
	title = china_events.427.t
	desc = china_events.427.d
	picture = GFX_report_event_CHI_official_announcement

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event china_events.427 option china_events.427.a"
		name = china_events.427.a #Their loss
		add_opinion_modifier = {
			target = FROM
			modifier = KR_disapproves_of_govt
		}
	}
}
