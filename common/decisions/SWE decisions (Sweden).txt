SWE_geopolitical_actions = {
	swe_join_reichspakt = {
		icon = generic_political_discourse
		allowed = {
			original_tag = SWE
		}
		targets = { GER }

		available = {
			OR = {
				if = {
					limit = { RUS = { is_faction_leader = yes } }
					OR = {
						NOR = { is_in_faction_with = RUS }
						NOR = {
							has_elected_government = no
							is_subject = no
						}
						FIN = { is_in_faction_with = RUS }
					}
				}
				else = {
					NOR = {
						has_elected_government = no
						is_subject = no
					}
				}
				FIN = { has_socialist_government = yes }
				var:global.russia = { owns_state = 840 } #Nyland
			}
			at_peace_or_same_enemies_as_FROM = yes
		}

		visible = {
			is_subject = no
			is_in_faction = no
			has_socialist_government = no
			FROM = { is_faction_leader = yes }
		}

		cost = 0
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				FROM = { surrender_progress > 0.25 }
			}
			modifier = {
				factor = 0
				threat < 0.2
			}
		}

		complete_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision complete swe_join_reichspakt"
			FROM = { country_event = swe.46 }
			hidden_effect = {
				remove_targeted_decision = { target = FIN decision = swe_seize_aland }
			}
		}
	}

	swe_join_internationale = {
		icon = generic_political_discourse
		allowed = { always = no }				# Activated upon revolution
		available = {
			at_peace_or_same_enemies_as_FROM = yes
		}
		visible = {
			is_in_faction = no
			is_subject = no
			has_socialist_government = yes
			FROM = {
				is_faction_leader = yes
				has_socialist_government = yes
			}
		}
		fire_only_once = yes
		cost = 0
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				FROM = { surrender_progress > 0.25 }
			}
		}
		complete_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision complete swe_join_internationale"
			FROM = { country_event = swe.39 }
			hidden_effect = {
				remove_targeted_decision = { target = FIN decision = swe_seize_aland }
			}
		}
	}

	swe_seize_aland = {
		icon = generic_prepare_civil_war
		allowed = {
			original_tag = SWE
		}

		available = {
			is_subject = no
			is_in_faction = no
			FROM = { surrender_progress > 0.7 }
		}

		visible = {
			can_declare_war_on = FROM
			145 = { is_owned_and_controlled_by = FROM } #Aland
		}

		cancel_trigger = {
			OR = {
				NOT = { can_declare_war_on = FROM }
				NOT = { 145 = { is_owned_and_controlled_by = ROOT } } #Aland
			}
		}

		cost = 25
		days_remove = 10
		fire_only_once = yes
		cancel_if_not_visible = yes
		war_with_target_on_remove = yes

		targets = { FIN }
		target_trigger = {
			can_declare_war_on = FROM
			145 = { is_owned_and_controlled_by = FROM } #Aland
		}

		ai_will_do = {
			factor = 10
			modifier = { #No seizing Åland from fellow democrats
				factor = 0
				has_elected_government = yes
				FROM = { has_elected_government = yes }
			}
			modifier = { #No seizing Åland from fellow socialists
				factor = 0
				OR = {
					has_government = syndicalist
					has_government = radical_socialist
				}
				FROM = { has_socialist_government = yes }
			}
			modifier = {
				factor = 0
				OR = {
					country_has_any_active_threat = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision cancel swe_seize_aland"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision complete swe_seize_aland"
			transfer_state = 145
			FROM = { country_event = swe.111 }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision remove swe_seize_aland"
			clear_decision_attack_AI = yes
		}
	}

	swe_subjugate_norway = {
		name = swe_subjugate_neighbours
		icon = generic_prepare_civil_war
		allowed = { always = no }			# Activated by Junta/syndie focuses
		available = {
			date > 1938.6.1
			can_declare_war_on = FROM
			is_subject = no
			is_in_faction = no
		}

		visible = {
			if = {
				limit = { has_socialist_government = yes }
				FROM = { has_socialist_government = no }
			}
		}

		cost = 0
		days_remove = 30
		fire_only_once = yes
		cancel_if_not_visible = yes
		war_with_target_on_remove = yes

		ai_will_do = {
			base = 0
			modifier = { #AI shouldn't invade Norway before 1939 so Norway has the chance to pick its side and Sweden to get their political affairs in order
				add = 100
				date > 1938.6.1
			}
			modifier = {
				factor = 0
				OR = {
					country_has_any_active_threat = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision cancel swe_subjugate_norway"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision complete swe_subjugate_norway"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision remove swe_subjugate_norway"
			clear_decision_attack_AI = yes
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	swe_subjugate_finland = {
		name = swe_subjugate_neighbours
		icon = generic_prepare_civil_war
		allowed = { always = no }			# Activated by Junta/syndie focuses
		available = {
			date > 1938.6.1
			can_declare_war_on = FROM
			is_subject = no
			is_in_faction = no
		}

		visible = {
			if = {
				limit = { has_socialist_government = yes }
				FROM = { has_socialist_government = no }
			}
		}

		cost = 0
		days_remove = 30
		fire_only_once = yes
		cancel_if_not_visible = yes
		war_with_target_on_remove = yes

		ai_will_do = {
			base = 0
			modifier = { #AI shouldn't invade Norway before 1939 so Norway has the chance to pick its side and Sweden to get their political affairs in order
				add = 100
				date > 1938.6.1
				OR = {
					NOT = { country_exists = NOR }
					has_subject = NOR
					NOR = { is_in_faction = yes }
				}
			}
			modifier = {
				factor = 0
				OR = {
					country_has_any_active_threat = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision cancel swe_subjugate_finland"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision complete swe_subjugate_finland"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision remove swe_subjugate_finland"
			clear_decision_attack_AI = yes
			add_state_claim = 145
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	swe_operation_radde_danmark = {
		icon = generic_prepare_civil_war
		allowed = { always = no }				# Activated by Junta focus
		available = {
			is_subject = no
			is_in_faction = no
			FROM = {
				NOT = { is_in_faction_with = INT }
			}
			GER = {
				surrender_progress > 0.5
			}
		}

		visible = {
			NOT = { is_in_faction_with = GER }
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		fire_only_once = yes
		cancel_if_not_visible = yes
		war_with_target_on_remove = yes

		ai_will_do = {
			base = 0
			modifier = { #AI shouldn't invade Norway before 1939 so Norway has the chance to pick its side and Sweden to get their political affairs in order
				add = 100
				date > 1940.1.1
			}
			modifier = {
				factor = 0
				OR = {
					country_has_any_active_threat = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision cancel swe_operation_radde_danmark"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision complete swe_operation_radde_danmark"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision remove swe_operation_radde_danmark"
			clear_decision_attack_AI = yes
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}
}

SWE_fix_black_monday_category = {
	SWE_drop_gold_standard = {
		icon = steel
		allowed = { always = no }		# Activated by scripted effect
		cost = 25
		fire_only_once = yes

		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_drop_gold_standard"
			custom_effect_tooltip = SWE_tt_gold_standard_dropped
			add_to_variable = { var = swe_var_inflation value = 0.01 }
			SWE_inflation_events = yes
			activate_targeted_decision = { target = THIS decision = SWE_print_extra_money }
		}

		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_budget
					value = 5
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_debt
					value = 8
					compare = less_than
				}
			}
		}
	}

	SWE_print_extra_money = {
		icon = ger_mefo_bills
		allowed = { always = no }		# Activated by dropping gold standard or by completing the decision
		days_remove = 7
		cost = 0
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_print_extra_money"
			custom_effect_tooltip = SWE_tt_print_extra_money
			activate_targeted_decision = { target = THIS decision = SWE_print_extra_money }
			add_to_variable = { var = swe_var_budget value = 2 }
			if = {
				limit = {
					check_variable = {
						var = swe_var_inflation
						value = 0.08
						compare = less_than
					}
				}
				add_to_variable = { var = swe_var_inflation value = 0.03 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = swe_var_inflation
						value = 0.12
						compare = less_than
					}
				}
				add_to_variable = { var = swe_var_inflation value = 0.06 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = swe_var_inflation
						value = 0.24
						compare = less_than
					}
				}
				add_to_variable = { var = swe_var_inflation value = 0.12 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = swe_var_inflation
						value = 0.48
						compare = less_than
					}
				}
				add_to_variable = { var = swe_var_inflation value = 0.24 }
			}
			else = {
				add_to_variable = { var = swe_var_inflation value = 0.48 }
			}
			SWE_inflation_events = yes
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_inflation
					value = 0.07
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_idea = SWE_black_monday
					has_idea = SWE_black_monday_1
					has_idea = SWE_black_monday_2
					has_idea = SWE_black_monday_3
				}
			}
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
		}
	}

	SWE_counter_inflation = {
		icon = ger_mefo_bills
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		available = {
			custom_override_tooltip = {
				tooltip = SWE_tt_more_than_five_percent_inflation
				check_variable = {
					var = swe_var_inflation
					value = 0.05
					compare = greater_than_or_equals
				}
			}
		}
		cost = 0
		days_remove = 30
		modifier = {
			consumer_goods_factor = 0.1
			political_power_cost = 0.5
		}
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_counter_inflation"
			subtract_from_variable = {
				var = swe_var_inflation
				value = 0.05
				tooltip = SWE_tt_inflation_lowered
			}
			SWE_inflation_events = yes
			activate_targeted_decision = { target = THIS decision = SWE_counter_inflation }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_inflation
					value = 0.05
					compare = less_than
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_idea = SWE_black_monday
					has_idea = SWE_black_monday_1
					has_idea = SWE_black_monday_2
					has_idea = SWE_black_monday_3
				}
			}
		}
	}

	SWE_take_a_loan = {
		icon = generic_decision
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		cost = 0
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_take_a_loan"
			custom_effect_tooltip = SWE_tt_loan_money
			add_to_variable = { var = swe_var_debt value = 2 }
			add_to_variable = { var = swe_var_budget value = 2 }
			activate_targeted_decision = { target = THIS decision = SWE_take_a_loan }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_unemployment
					value = 0.08
					compare = less_than_or_equals
				}
			}
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_debt
					value = 8
					compare = greater_than_or_equals
				}
			}
		}
	}

	SWE_repay_a_loan = {
		icon = generic_decision
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		available = {
			custom_override_tooltip = {
				tooltip = SWE_tt_can_pay_off_debt
				check_variable = {
					var = swe_var_budget
					value = 2
					compare = greater_than_or_equals
				}
			}
		}
		visible = {
			check_variable = {
				var = swe_var_debt
				value = 2
				compare = greater_than_or_equals
			}
		}
		cost = 0
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_repay_a_loan"
			custom_effect_tooltip = SWE_tt_pays_off_debt
			subtract_from_variable = { var = swe_var_debt value = 2 }
			subtract_from_variable = { var = swe_var_budget value = 2 }
			activate_targeted_decision = { target = THIS decision = SWE_repay_a_loan }
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 50
				check_variable = {
					var = swe_var_debt
					value = 10
					compare = greater_than_or_equals
				}
			}
		}
	}

	SWE_cut_funding_on_military = {
		icon = ger_military_buildup
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		available = {
			has_dictatorship_government = no
		}
		cost = 0
		days_remove = 365

		modifier = {
			industrial_capacity_factory = -0.20
			army_org_factor = -0.25
			political_power_cost = 0.05
		}
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_cut_funding_on_military"
			custom_effect_tooltip = SWE_tt_saved_money_goes_to_free_budget
			add_to_variable = { var = swe_var_budget value = 5 }
		}
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_cut_funding_on_military"
			activate_targeted_decision = { target = THIS decision = SWE_cut_funding_on_military }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_idea = SWE_black_monday
					has_idea = SWE_black_monday_1
					has_idea = SWE_black_monday_2
					has_idea = SWE_black_monday_3
				}
			}
		}
	}

	SWE_raise_taxes = {
		icon = oppression
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		days_remove = 365
		cost = 0
		modifier = {
			political_power_cost = 0.10
			consumer_goods_factor = 0.2
		}
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_raise_taxes"
			custom_effect_tooltip = SWE_tt_earned_money_goes_to_free_budget
			add_to_variable = { var = swe_var_budget value = 2 }
			if = {
				limit = {
					check_variable = {
						var = swe_var_inflation
						value = 0.01
						compare = greater_than_or_equals
					}
				}
				subtract_from_variable = {
					var = swe_var_inflation
					value = 0.01
					tooltip = SWE_tt_inflation_lowered
				}
			}
		}
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_raise_taxes"
			activate_targeted_decision = { target = THIS decision = SWE_raise_taxes }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_idea = SWE_black_monday
					has_idea = SWE_black_monday_1
					has_idea = SWE_black_monday_2
					has_idea = SWE_black_monday_3
				}
			}
		}
	}

	SWE_cut_welfare = {
		icon = generic_break_treaty
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		available = {
			NOT = {
				has_government = social_democrat
			}
		}
		cost = 0
		days_remove = 365

		modifier = {
			stability_factor = -0.15
			monthly_population = -0.1
			political_power_cost = 0.15
		}
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_cut_welfare"
			custom_effect_tooltip = SWE_tt_saved_money_goes_to_free_budget_welfare
			add_to_variable = { var = swe_var_budget value = 5 }
			set_temp_variable = { ideology_change_var = -0.05 }
			change_ruling_party_popularity = yes
		}
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_cut_welfare"
			activate_targeted_decision = { target = THIS decision = SWE_cut_welfare }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_idea = SWE_black_monday
					has_idea = SWE_black_monday_1
					has_idea = SWE_black_monday_2
					has_idea = SWE_black_monday_3
				}
			}
		}
	}

	SWE_public_work_program = {
		icon = generic_construction
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		days_remove = 150
		cost = 0
		modifier = {
			consumer_goods_factor = 0.2
		}
		custom_cost_trigger = {
			check_variable = {
				var = swe_var_budget
				value = 3
				compare = greater_than_or_equals
			}
		}

		custom_cost_text = SWE_tt_three_million_kronor
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_public_work_program"
			#custom_effect_tooltip = SWE_tt_two_million_kronor_spent
			add_to_variable = { var = swe_var_budget value = -3 }
			subtract_from_variable = {
				var = swe_var_unemployment
				value = 0.03
				tooltip = SWE_tt_unemployment_lowered
			}
			SWE_unemployment_events = yes
		}
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_public_work_program"
			subtract_from_variable = {
				var = swe_var_unemployment
				value = 0.02
				tooltip = SWE_tt_unemployment_lowered
			}
			SWE_unemployment_events = yes
			activate_targeted_decision = { target = THIS decision = SWE_public_work_program }
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_unemployment
					value = 0.12
					compare = less_than_or_equals
				}
			}
		}
	}

	SWE_subsidize_resource_exports = {
		icon = tungsten
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		days_remove = 150
		modifier = {
			local_resources_factor = 0.10
			min_export = 0.2
		}
		cost = 0
		custom_cost_trigger = {
			check_variable = {
				var = swe_var_budget
				value = 2
				compare = greater_than_or_equals
			}
		}

		custom_cost_text = SWE_tt_two_million_kronor
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_subsidize_resource_exports"
			add_to_variable = { var = swe_var_budget value = -2 }
			subtract_from_variable = {
				var = swe_var_unemployment
				value = 0.02
				tooltip = SWE_tt_unemployment_lowered
			}
			SWE_unemployment_events = yes
		}
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_subsidize_resource_exports"
			subtract_from_variable = {
				var = swe_var_unemployment
				value = 0.02
				tooltip = SWE_tt_unemployment_lowered
			}
			SWE_unemployment_events = yes
			activate_targeted_decision = { target = THIS decision = SWE_subsidize_resource_exports }
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_unemployment
					value = 0.12
					compare = less_than_or_equals
				}
			}
		}
	}

	SWE_nationalize_company = {
		icon = generic_industry
		allowed = { always = no }		# Activated by scripted effect or by completing the decision
		available = {
			OR = {
				has_government = social_democrat
				has_government = national_populist
			}
		}
		days_remove = 60
		cost = 0
		custom_cost_trigger = {
			check_variable = {
				var = swe_var_budget
				value = 5
				compare = greater_than_or_equals
			}
		}

		custom_cost_text = SWE_tt_five_million_kronor
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_nationalize_company"
			add_to_variable = { var = swe_var_budget value = -5 }
			subtract_from_variable = {
				var = swe_var_unemployment
				value = 0.03
				tooltip = SWE_tt_unemployment_lowered
			}
			SWE_unemployment_events = yes
		}
		remove_effect = {
			log = "[GetLogRoot]: Decision remove SWE_nationalize_company"
			activate_targeted_decision = { target = THIS decision = SWE_nationalize_company }
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = swe_var_unemployment
					value = 0.12
					compare = less_than_or_equals
				}
			}
		}
	}

	SWE_implement_tariffs = {
		icon = generic_break_treaty
		allowed = { always = no }		# Activated by scripted effect
		available = {
			NOT = {
				has_completed_focus = SWE_free_trade_economy
			}
		}
		cost = 0
		fire_only_once = yes
		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_implement_tariffs"
			custom_effect_tooltip = SWE_tt_receive_million_kronor
			add_to_variable = { var = swe_var_budget value = 2 }
			subtract_from_variable = {
				var = swe_var_unemployment
				value = 0.02
				tooltip = SWE_tt_unemployment_lowered
			}
			custom_effect_tooltip = SWE_tt_violation_of_mitteleuropa
			GER_kick_from_mitteleuropa = yes
			SWE_unemployment_events = yes
			hidden_effect = {
				GER = {
					country_event = { id = swe.60 days = 8 }
				}
			}
		}
		ai_will_do = { base = 0 }
	}

	SWE_wrap_up_crisis_commission = {
		icon = generic_civil_support
		allowed = { always = no }		# Activated by scripted effect
		available = {
			custom_override_tooltip = {
				tooltip = SWE_tt_no_black_monday
				NOT = {
					has_idea = SWE_black_monday
					has_idea = SWE_black_monday_1
					has_idea = SWE_black_monday_2
					has_idea = SWE_black_monday_3
				}
			}
			custom_override_tooltip = {
				tooltip = SWE_tt_no_extreme_inflation
				check_variable = {
					var = swe_var_inflation
					value = 0.08
					compare = less_than
				}
			}
			custom_override_tooltip = {
				tooltip = SWE_tt_no_extreme_debt
				check_variable = {
					var = swe_var_debt
					value = 10
					compare = less_than
				}
			}
		}

		cost = 0

		complete_effect = {
			log = "[GetLogRoot]: Decision complete SWE_wrap_up_crisis_commission"
			add_stability = 0.10
			custom_effect_tooltip = SWE_tt_decisions_will_be_removed
			set_country_flag = SWE_black_monday_over
			hidden_effect = {
				SWE_teardown_black_monday_decisions = yes
			}
		}
		fire_only_once = yes
		ai_will_do = { base = 100 }
	}
}

prospect_for_resources = {
	SWE_lkab_investments_mining = {
		icon = GFX_decision_generic_construction
		allowed = { always = no }

		available = {
			num_of_civilian_factories_available_for_projects > 2
			has_tech = excavation1
		}

		visible = {
			FROM = {
				is_owned_and_controlled_by = ROOT
				NOT = { has_state_flag = SWE_lkab_investments_mining }
			}
		}

		fire_only_once = yes

		cost = 0
		days_remove = 70
		state_target = yes

		modifier = {
			civilian_factory_use = 3
		}

		remove_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision remove SWE_lkab_investments_mining"
			FROM = {
				set_state_flag = SWE_lkab_investments_mining
				add_resource = {
					type = steel
					amount = 22
				}
				add_resource = {
					type = tungsten
					amount = 14
				}
			}
		}
		ai_will_do = { factor = 500 }
	}

	SWE_domestic_oil_shale_mining = {
		icon = oil
		allowed = { always = no }

		available = {
			num_of_civilian_factories_available_for_projects > 2
			has_tech = excavation1
		}

		visible = {
			FROM = {
				is_owned_and_controlled_by = ROOT
				NOT = { has_state_flag = SWE_domestic_oil_shale_mining }
			}
		}
		fire_only_once = yes

		cost = 0
		days_remove = 70
		state_target = yes

		modifier = {
			civilian_factory_use = 3
		}

		remove_effect = {
			log = "[GetLogRoot][GetLogFrom]: Decision remove SWE_domestic_oil_shale_mining"
			FROM = {
				set_state_flag = SWE_domestic_oil_shale_mining
				add_extra_state_shared_building_slots = 2
				add_building_construction = {
					type = synthetic_refinery
					level = 2
					instant_build = yes
				}
			}
		}
		ai_will_do = { factor = 500 }
	}
}
