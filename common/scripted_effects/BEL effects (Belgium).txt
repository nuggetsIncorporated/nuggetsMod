WAL_reset_focus_tree_and_ideas = {
	hidden_effect = {
		remove_ideas = {
			WAL_Monarchy
			WAL_Monarchy_Army
			WAL_Monarchy_Conscription
			WAL_Republic_Chant_Des_Wallons
			WAL_Monarchy_Disorderly
			WAL_Monarchy_Disorderly2
			WAL_Monarchy_Royal_Councillor
			WAL_Monarchy_Constitution

			WAL_REX
			WAL_REX_SOC
			WAL_REX_ROY
			WAL_REX_BOTH
			WAL_REX_CORP
			WAL_REX_MIL

			WAL_SYNDICALIST_LIB_DIS
			WAL_SYNDICALIST_POB_PRES
			WAL_SYNDICALIST_SYN_CHAIR
			WAL_SYNDICALIST_SEIZE_BASIC
			WAL_SYNDICALIST_NATIONAL_COMPANY
			WAL_SYNDICALIST_STATE_EDUCATION
			WAL_SYNDICALIST_CATHOLIC_EDUCATION_BANNED
			WAL_SYNDICALIST_POB_CONTROL
			WAL_SYNDICALIST_SYN_CONTROL

			WAL_TOTALIST_RESISTANCE
			WAL_TOTALIST_RESISTANCE2
			WAL_TOTALIST_RESISTANCE3
			WAL_TOTALIST_RESISTANCE4
			WAL_TOTALIST_CONGRESS
			WAL_TOTALIST_ARMY
			WAL_TOTALIST_ROYAL_ASSETS
		}
		if = {
			limit = { has_completed_focus = WAL_Hold_On_To_The_Monarchy }
			uncomplete_national_focus = {
				focus = WAL_Hold_On_To_The_Monarchy
				uncomplete_children = yes
			}
		}
		if = {
			limit = { has_completed_focus = WAL_Reform_Into_A_Republic }
			uncomplete_national_focus = {
				focus = WAL_Reform_Into_A_Republic
				uncomplete_children = yes
			}
		}
		if = {
			limit = { has_completed_focus = WAL_Syndicalist_Revolution }
			uncomplete_national_focus = {
				focus = WAL_Syndicalist_Revolution
				uncomplete_children = yes
			}
		}
		if = {
			limit = { has_completed_focus = WAL_The_Government_Has_Failed }
			uncomplete_national_focus = {
				focus = WAL_The_Government_Has_Failed
				uncomplete_children = yes
			}
		}
		if = {
			limit = { has_completed_focus = WAL_Retain_German_Staff }
			uncomplete_national_focus = {
				focus = WAL_Retain_German_Staff
				uncomplete_children = yes
			}
		}
		if = {
			limit = { has_socialist_government = yes }
			complete_national_focus = WAL_Syndicalist_Revolution
			if = {
				limit = { has_government = totalist }
				complete_national_focus = WAL_Revolution_By_Force
			}
			else = {
				complete_national_focus = WAL_Peaceful_Transition
			}
			hidden_effect = { BEL_remove_adelbert = yes }
		}
		else_if = {
			limit = { has_dictatorship_government = yes }
			add_ideas = WAL_REX
			complete_national_focus = WAL_The_Government_Has_Failed
			hidden_effect = { BEL_remove_adelbert = yes }
		}
		else_if = {
			limit = { ROOT = { tag = GER } }
			BEL_create_adelbert = yes
			set_politics = {
				ruling_party = authoritarian_democrat
				elections_allowed = no
				name = WAL_monarchy_authoritarian_democrat_party
				long_name = WAL_monarchy_authoritarian_democrat_party_long
			}
			set_political_party = {
				ideology = authoritarian_democrat
				popularity = 60
			}
			add_ideas = WAL_Monarchy
			add_ideas = WAL_Monarchy_Disorderly
			complete_national_focus = WAL_Hold_On_To_The_Monarchy
		}
		else = {
			add_ideas = WAL_Republic
			complete_national_focus = WAL_Reform_Into_A_Republic
			hidden_effect = { BEL_remove_adelbert = yes }
		}
	}
}

WAL_move_unit_leaders = {
	hidden_effect = {
		BEL = {
			every_unit_leader = {
				limit = { has_character_flag = BEL_walloon_character }
				set_nationality = PREV
			}
		}
		WAL = {
			every_unit_leader = {
				limit = { has_character_flag = BEL_walloon_character }
				set_nationality = PREV
			}
		}
		FLA = {
			every_unit_leader = {
				limit = { has_character_flag = BEL_walloon_character }
				set_nationality = PREV
			}
		}
	}
}

FLA_move_unit_leaders = {
	hidden_effect = {
		BEL = {
			every_unit_leader = {
				limit = { has_character_flag = BEL_flemish_character }
				set_nationality = PREV
			}
		}
		WAL = {
			every_unit_leader = {
				limit = { has_character_flag = BEL_flemish_character }
				set_nationality = PREV
			}
		}
		FLA = {
			every_unit_leader = {
				limit = { has_character_flag = BEL_flemish_character }
				set_nationality = PREV
			}
		}
	}
}

Release_Flanders = {
	hidden_effect = {
		if = {
			limit = { has_idea = BEL_Flandres_Lost }
			remove_ideas = BEL_Flandres_Lost
		}
		if = {
			limit = { has_idea = BEL_Military_Struck }
			remove_ideas = BEL_Military_Struck
		}
		if = {
			limit = { has_idea = BEL_Mass_Desertion }
			remove_ideas = BEL_Mass_Desertion
		}
		if = {
			limit = { has_idea = BEL_Protest_1936 }
			remove_ideas = BEL_Protest_1936
		}

		WAL = {
			if = {
				limit = { BEL = { GER_is_in_mitteleuropa = yes } }
				set_country_flag = MIT_was_in_mitteleuropa
			}
			add_state_core = 34 #Hainaut
			add_state_core = 741 #Verviers
			add_state_core = 948 #Li√®ge
			transfer_technology = yes
			WAL_move_unit_leaders = yes
		}
		random_owned_state = {
			limit = { is_core_of = WAL }
			transfer_state_to = WAL
		}

		FLA_move_country_leaders = yes
		FLA = {
			if = {
				limit = { BEL = { GER_is_in_mitteleuropa = yes } }
				set_country_flag = MIT_was_in_mitteleuropa
			}
			add_state_core = 6 #Flanders
			add_state_core = 29 #Dunkirk
			add_state_core = 925 #Brabant
			add_state_core = 979 #Westerscheldt
			transfer_technology = yes
			FLA_move_unit_leaders = yes
		}
		release = FLA
		FLA = {
			load_oob = FLA
			load_oob = FLA_naval
			country_event = { id = flnrev.1 days = 2 }
		}
		transfer_navy = { target = FLA }
		if = {
			limit = { NOT = { has_event_target = BEL_terneuzen } }
			GER = { add_to_faction = FLA }
		}

		WAL_move_country_leaders = yes
		BEL_adelbert_von_hohenzollern = { set_nationality = WAL }
		WAL = {
			BEL_create_adelbert = yes
			set_party_name = {
				ideology = authoritarian_democrat
				long_name = WAL_monarchy_authoritarian_democrat_party_long
				name = WAL_monarchy_authoritarian_democrat_party
			}
			load_oob = WAL_Uprising
			load_oob = WAL_naval
			country_event = { id = wallonia.1 days = 2 } #Flanders-Wallonia ceases to exist
			annex_country = {
				target = ROOT
				transfer_troops = yes
			}
		}
	}
}

WAL_ultimatum_for_flanders = {
	if = {
		limit = { country_exists = FLA }
		FLA = {
			if = {
				limit = { is_subject = yes }
				overlord = { country_event = wallonia.10 }
			}
			else = {
				country_event = wallonia.10
			}
		}
	}
	else_if = {
		limit = { NOT = { owns_state = 6 } }
		var:6.owner = {
			if = {
				limit = { is_subject = yes }
				overlord = { country_event = wallonia.103 }
			}
			else = {
				country_event = wallonia.103
			}
		}
	}
	if = {
		limit = {
			NOT = { owns_state = 925 }
			NOT = { var:6.owner = { owns_state = 925 } }
		}
		var:925.owner = {
			if = {
				limit = { is_subject = yes }
				overlord = { country_event = wallonia.103 }
			}
			else = {
				country_event = wallonia.103
			}
		}
	}
}

WAL_breaks_from_germany = {
	if = {
		limit = {
			is_subject = yes
			overlord = { has_socialist_government = no }
		}
		overlord = {
			set_autonomy = {
				target = ROOT
				autonomy_state = autonomy_free
			}
			if = {
				limit = { tag = GER }
				set_temp_variable = { WAL_was_in_german_sphere = 1 }
			}
		}
	}
	if = {
		limit = {
			is_in_faction = yes
			faction_leader = { has_socialist_government = no }
		}
		if = {
			limit = { faction_leader = { tag = GER } }
			set_temp_variable = { WAL_was_in_german_sphere = 1 }
		}
		leave_faction = yes
	}
	if = {
		limit = {
			has_war = yes
			any_enemy_country = { has_socialist_government = yes }
		}
		separate_peace_all_wars = yes
	}
	if = {
		limit = { has_variable = WAL_was_in_german_sphere }
		GER = { country_event = { id = wallonia.112 hours = 4 } }
	}
}

BEL_remove_monarchy = {
	if = {
		limit = { has_cosmetic_tag = BEL_flanders_wallonia }
		if = {
			limit = { original_tag = BEL }
			effect_tooltip = { set_cosmetic_tag = BEL }
			drop_cosmetic_tag = yes
		}
		else = {
			set_cosmetic_tag = BEL
		}
	}
	BEL_remove_adelbert = yes
	if = {
		limit = { has_character = BEL_albert_van_belgie }
		BEL_albert_van_belgie = {
			set_character_name = BEL_albert_van_belgie
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
	if = {
		limit = { has_character = BEL_leopold_van_belgie }
		BEL_leopold_van_belgie = {
			set_character_name = BEL_leopold_van_belgie
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
	if = {
		limit = { has_character = BEL_karel_van_vlaanderen }
		BEL_karel_van_vlaanderen = {
			set_character_name = BEL_karel_van_vlaanderen
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
}

BEL_remove_adelbert = {
	if = {
		limit = { has_character = BEL_adelbert_von_hohenzollern }
		BEL_adelbert_von_hohenzollern = {
			set_character_name = BEL_adelbert_von_hohenzollern
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
}

BEL_create_adelbert = {
	if = {
		limit = {
			original_tag = BEL
			NOT = { has_cosmetic_tag = BEL_flanders_wallonia }
		}
		set_cosmetic_tag = BEL_flanders_wallonia
	}
	BEL = {
		BEL_adelbert_von_hohenzollern = {
			character_becomes_leader_of_ruling_party_effect_tooltip = yes
			hidden_effect = {
				set_nationality = PREV.PREV
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						desc = BEL_adelbert_von_hohenzollern_leader_desc
						ideology = social_democrat_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_adelbert_von_hohenzollern_leader_desc
						ideology = social_liberal_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_adelbert_von_hohenzollern_leader_desc
						ideology = market_liberal_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_adelbert_von_hohenzollern_leader_desc
						ideology = social_conservative_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_adelbert_von_hohenzollern_leader_desc
						ideology = authoritarian_democrat_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_adelbert_von_hohenzollern_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}
		}
	}
}

BEL_create_albert = {
	if = {
		limit = { has_idea = BEL_King_Exile2 }
		remove_ideas = BEL_King_Exile2
	}
	else_if = {
		limit = { has_idea = BEL_King_Exile }
		remove_ideas = BEL_King_Exile
	}
	BEL = {
		BEL_albert_van_belgie = {
			effect_tooltip = {
				meta_effect = {
					text = {
						add_country_leader_role = {
							country_leader = {
								# Tooltip only, doesn't need desc
								ideology = [IDEOLOGY]
								traits = { BEL_soldier_king }
							}
							promote_leader = yes
						}
					}
					IDEOLOGY = "[PREV.GetRulingIdeologySubtype]"
				}
			}
			hidden_effect = {
				set_nationality = PREV.PREV
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						desc = BEL_albert_van_belgie_leader_desc
						ideology = social_democrat_subtype
						traits = { BEL_soldier_king }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_albert_van_belgie_leader_desc
						ideology = social_liberal_subtype
						traits = { BEL_soldier_king }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_albert_van_belgie_leader_desc
						ideology = market_liberal_subtype
						traits = { BEL_soldier_king }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_albert_van_belgie_leader_desc
						ideology = social_conservative_subtype
						traits = { BEL_soldier_king }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_albert_van_belgie_leader_desc
						ideology = authoritarian_democrat_subtype
						traits = { BEL_soldier_king }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_albert_van_belgie_leader_desc
						ideology = paternal_autocrat_subtype
						traits = { BEL_soldier_king }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_albert_van_belgie_leader_desc
						ideology = national_populist_subtype
						traits = { BEL_soldier_king }
					}
					promote_leader = yes
				}
			}
		}
		hidden_effect = {
			BEL_leopold_van_belgie = { set_nationality = PREV.PREV }
		}
	}
}

FLA_create_karel = {
	FLA = {
		BEL_karel_van_vlaanderen = {
			character_becomes_leader_of_ruling_party_effect_tooltip = yes
			hidden_effect = {
				set_nationality = PREV.PREV
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						desc = BEL_karel_van_vlaanderen_leader_desc
						ideology = social_democrat_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_karel_van_vlaanderen_leader_desc
						ideology = social_liberal_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_karel_van_vlaanderen_leader_desc
						ideology = market_liberal_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_karel_van_vlaanderen_leader_desc
						ideology = social_conservative_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_karel_van_vlaanderen_leader_desc
						ideology = authoritarian_democrat_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_karel_van_vlaanderen_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = BEL_karel_van_vlaanderen_leader_desc
						ideology = national_populist_subtype
					}
					promote_leader = yes
				}
			}
		}
	}
}

BEL_becomes_independent = {
	hidden_effect = {
		if = {
			limit = { is_ally_with = GER }
			GER = { country_event = { id = bel.461 days = 5 } }
		}
	}
	clear_all_relations = yes
	if = {
		limit = { has_cosmetic_tag = BEL_flanders_wallonia }
		effect_tooltip = { set_cosmetic_tag = BEL }
		hidden_effect = { drop_cosmetic_tag = yes }
	}
	load_focus_tree = BEL_Independent_focus
	if = {
		limit = { has_country_leader = { character = BEL_adelbert_von_hohenzollern } }
		BEL_remove_monarchy = yes
	}
	if = {
		limit = { has_idea = BEL_anti_german_sentiment1 }
		remove_ideas = BEL_anti_german_sentiment1
	}
	else_if = {
		limit = { has_idea = BEL_anti_german_sentiment2 }
		remove_ideas = BEL_anti_german_sentiment2
	}
	else_if = {
		limit = { has_idea = BEL_anti_german_sentiment3 }
		remove_ideas = BEL_anti_german_sentiment3
	}
	else_if = {
		limit = { has_idea = BEL_anti_german_sentiment4 }
		remove_ideas = BEL_anti_german_sentiment4
	}
	else_if = {
		limit = { has_idea = BEL_anti_german_sentiment5 }
		remove_ideas = BEL_anti_german_sentiment5
	}
	if = {
		limit = { has_idea = BEL_Flandres_Lost }
		remove_ideas = BEL_Flandres_Lost
	}
	if = {
		limit = { has_idea = BEL_Military_Struck }
		remove_ideas = BEL_Military_Struck
	}
	if = {
		limit = { has_idea = BEL_Mass_Desertion }
		remove_ideas = BEL_Mass_Desertion
	}
	if = {
		limit = { has_idea = BEL_Protest_1936 }
		remove_ideas = BEL_Protest_1936
	}
	if = {
		limit = { has_political_power < 0 }
		set_political_power = 0
	}
	hidden_effect = {
		news_event = belnews.1
	}
}

WAL_move_country_leaders = {
	hidden_effect = {
		BEL = {
			every_character = {
				limit = { has_character_flag = BEL_walloon_character }
				set_nationality = WAL
			}
			BEL_charles_daspremont_lynden = {
				set_nationality = WAL
				promote_character = authoritarian_democrat_subtype
			}
			BEL_georges_prosper_remi = {
				set_nationality = WAL
				promote_character = national_populist_subtype
			}
			BEL_leon_degrelle = {
				if = {
					limit = { is_dead = no }
					set_nationality = WAL
					promote_character = national_populist_subtype
				}
			}
		}
	}
}

FLA_move_country_leaders = {
	hidden_effect = {
		BEL = {
			every_character = {
				limit = { has_character_flag = BEL_flemish_character }
				set_nationality = FLA
			}
			BEL_hendrik_de_man = {
				set_nationality = FLA
				promote_character = totalist_subtype
			}
			BEL_paul_henri_spaak = {
				set_nationality = FLA
				promote_character = social_liberal_subtype
			}
			BEL_joris_van_severen = {
				set_nationality = FLA
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						desc = BEL_joris_van_severen_leader_desc
						ideology = national_populist_subtype
					}
					promote_leader = yes
				}
			}
		}
	}
}

BEL_move_country_leaders = {
	hidden_effect = {
		WAL = {
			every_character = {
				limit = { has_character_flag = BEL_walloon_character }
				set_nationality = BEL
			}
		}
		FLA = {
			every_character = {
				limit = { has_character_flag = BEL_flemish_character }
				set_nationality = BEL
			}
		}
		BEL = {
			#Flanders
			BEL_hendrik_de_man = {
				set_nationality = BEL
				promote_character = totalist_subtype
			}
			BEL_paul_henri_spaak = {
				set_nationality = BEL
				promote_character = social_liberal_subtype
			}
			BEL_joris_van_severen = {
				set_nationality = BEL
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						desc = BEL_joris_van_severen_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}

			#Wallonia
			BEL_charles_daspremont_lynden = {
				set_nationality = BEL
				promote_character = authoritarian_democrat_subtype
			}
			BEL_georges_prosper_remi = {
				set_nationality = BEL
				promote_character = national_populist_subtype
			}
			BEL_leon_degrelle = {
				if = {
					limit = { is_dead = no }
					set_nationality = BEL
					promote_character = national_populist_subtype
				}
			}
		}
	}
}

BEL_puppet_setup = {
	hidden_effect = {
		BEL_move_country_leaders = yes
		WAL_move_unit_leaders = yes
		FLA_move_unit_leaders = yes
		if = {
			limit = { has_focus_tree = BEL_Independent_focus }
			unlock_national_focus = BEL_Elections
			if = {
				limit = { is_monarchy = yes }
				unlock_national_focus = BEL_Monarchy
				if = {
					limit = { has_completed_focus = BEL_Republic }
					uncomplete_national_focus = {
						focus = BEL_Republic
						uncomplete_children = yes
					}
				}
			}
			else = {
				unlock_national_focus = BEL_Republic
				if = {
					limit = { has_completed_focus = BEL_Monarchy }
					uncomplete_national_focus = {
						focus = BEL_Monarchy
						uncomplete_children = yes
					}
				}
			}
		}
	}
}

FLA_puppet_setup = {
	hidden_effect = {
		FLA_move_country_leaders = yes
		FLA_move_unit_leaders = yes
	}
}

WAL_puppet_setup = {
	hidden_effect = {
		set_party_name = {
			ideology = authoritarian_democrat
			name = BEL_interim_government
			long_name = BEL_interim_government
		}
		WAL_move_country_leaders = yes
		WAL_reset_focus_tree_and_ideas = yes
		WAL_move_unit_leaders = yes
		if = {
			limit = { has_socialist_government = yes }
			remove_ideas = {
				WAL_Monarchy
				WAL_Monarchy_Army
				WAL_Monarchy_Conscription
				WAL_Monarchy_Disorderly
				WAL_Monarchy_Disorderly2
				WAL_Monarchy_Royal_Councillor
				WAL_Monarchy_Constitution
				WAL_REX
				WAL_REX_SOC
				WAL_REX_ROY
				WAL_REX_BOTH
				WAL_REX_CORP
				WAL_REX_MIL
			}
		}
		else = {
			remove_ideas = {
				WAL_SYNDICALIST_LIB_DIS
				WAL_SYNDICALIST_POB_PRES
				WAL_SYNDICALIST_SYN_CHAIR
				WAL_SYNDICALIST_SEIZE_BASIC
				WAL_SYNDICALIST_NATIONAL_COMPANY
				WAL_SYNDICALIST_STATE_EDUCATION
				WAL_SYNDICALIST_CATHOLIC_EDUCATION_BANNED
				WAL_SYNDICALIST_POB_CONTROL
				WAL_SYNDICALIST_SYN_CONTROL
				WAL_TOTALIST_RESISTANCE
				WAL_TOTALIST_RESISTANCE2
				WAL_TOTALIST_RESISTANCE3
				WAL_TOTALIST_RESISTANCE4
				WAL_TOTALIST_RESISTANCE5
				WAL_TOTALIST_CONGRESS
				WAL_TOTALIST_ARMY
				WAL_TOTALIST_ROYAL_ASSETS
			}
		}
		if = {
			limit = { NOT = { is_subject_of = GER } }
			remove_ideas = {
				WAL_ECONOMIC_TROUBLE_GER
				WAL_ECONOMIC_GERMAN_EXPORT
				WAL_ECONOMIC_CONGOLESE_RESOURCES
				WAL_ARMY_GERMAN
			}
		}
	}
}

BEL_create_destroyer_variant = {
	if = {
		limit = { has_dlc_mtg = yes }
		if = {
			limit = { has_tech = advanced_ship_hull_light }
			create_equipment_variant = {
				name = "Scaldis Class"
				type = ship_hull_light_4
				name_group = BEL_RIVERS_THEME
				parent_version = 0
				modules = {
					fixed_ship_battery_slot = ship_light_battery_2
					fixed_ship_anti_air_slot = ship_anti_air_1
					fixed_ship_engine_slot = light_ship_engine_4
					fixed_ship_torpedo_slot = ship_torpedo_3
					front_1_custom_slot = ship_anti_air_1
					mid_1_custom_slot = ship_torpedo_3
					rear_1_custom_slot = ship_torpedo_3
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 4 }
		}
		else_if = {
			limit = { has_tech = improved_ship_hull_light }
			create_equipment_variant = {
				name = "Scaldis Class"
				type = ship_hull_light_3
				name_group = BEL_RIVERS_THEME
				parent_version = 0
				modules = {
					fixed_ship_battery_slot = ship_light_battery_2
					fixed_ship_anti_air_slot = ship_anti_air_1
					fixed_ship_engine_slot = light_ship_engine_3
					fixed_ship_torpedo_slot = ship_torpedo_2
					mid_1_custom_slot = ship_torpedo_2
					rear_1_custom_slot = ship_torpedo_2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 3 }
		}
		else_if = {
			limit = { has_tech = basic_ship_hull_light }
			create_equipment_variant = {
				name = "Scaldis Class"
				type = ship_hull_light_2
				name_group = BEL_RIVERS_THEME
				parent_version = 0
				modules = {
					fixed_ship_battery_slot = ship_light_battery_1
					fixed_ship_anti_air_slot = ship_anti_air_1
					fixed_ship_engine_slot = light_ship_engine_2
					fixed_ship_torpedo_slot = ship_torpedo_1
					mid_1_custom_slot = ship_torpedo_1
					rear_1_custom_slot = ship_torpedo_1
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 2 }
		}
		else = {
			create_equipment_variant = {
				name = "Scaldis Class"
				type = ship_hull_light_1
				name_group = BEL_RIVERS_THEME
				parent_version = 0
				modules = {
					fixed_ship_battery_slot = ship_light_battery_1
					fixed_ship_anti_air_slot = ship_anti_air_1
					fixed_ship_engine_slot = light_ship_engine_1
					fixed_ship_torpedo_slot = ship_torpedo_1
					mid_1_custom_slot = ship_torpedo_1
					rear_1_custom_slot = ship_torpedo_1
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 1 }
		}
		meta_effect = {
			text = {
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Scaldis Class"
					}
					requested_factories = 1
					progress = 0.65
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Scaldis Class"
					}
					requested_factories = 1
					progress = 0.65
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Scaldis Class"
					}
					requested_factories = 1
					progress = 0.65
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
			}
			HULL = "ship_hull_light_[?level]"
		}
	}
	else = {
		if = {
			limit = { has_tech = advanced_destroyer }
			create_equipment_variant = {
				name = "Scaldis Class"
				type = destroyer_4
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 4 }
		}
		else_if = {
			limit = { has_tech = improved_destroyer }
			create_equipment_variant = {
				name = "Scaldis Class"
				type = destroyer_3
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 3 }
		}
		else_if = {
			limit = { has_tech = basic_destroyer }
			create_equipment_variant = {
				name = "Scaldis Class"
				type = destroyer_2
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 2 }
		}
		else = {
			create_equipment_variant = {
				name = "Scaldis Class"
				type = destroyer_1
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 1 }
		}
		meta_effect = {
			text = {
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Scaldis Class"
					}
					requested_factories = 1
					progress = 0.65
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Scaldis Class"
					}
					requested_factories = 1
					progress = 0.65
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Scaldis Class"
					}
					requested_factories = 1
					progress = 0.65
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
			}
			HULL = "destroyer_[?level]"
		}
	}
}

BEL_create_submarine_variant = {
	if = {
		limit = { has_dlc_mtg = yes }
		if = {
			limit = { has_tech = advanced_ship_hull_submarine }
			create_equipment_variant = {
				name = "Ysara Class"
				type = ship_hull_submarine_4
				name_group = BEL_SM
				parent_version = 0
				modules = {
					fixed_ship_torpedo_slot = ship_torpedo_sub_3
					fixed_ship_engine_slot = sub_ship_engine_4
					front_1_custom_slot = ship_torpedo_sub_3
					mid_1_custom_slot = ship_sub_snorkel_1
					rear_1_custom_slot = ship_torpedo_sub_3
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 4 }
		}
		else_if = {
			limit = { has_tech = improved_ship_hull_submarine }
			create_equipment_variant = {
				name = "Ysara Class"
				type = ship_hull_submarine_3
				name_group = BEL_SM
				parent_version = 0
				modules = {
					fixed_ship_torpedo_slot = ship_torpedo_sub_2
					fixed_ship_engine_slot = sub_ship_engine_3
					front_1_custom_slot = ship_torpedo_sub_2
					rear_1_custom_slot = ship_torpedo_sub_2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 3 }
		}
		else_if = {
			limit = { has_tech = basic_ship_hull_submarine }
			create_equipment_variant = {
				name = "Ysara Class"
				type = ship_hull_submarine_2
				name_group = BEL_SM
				parent_version = 0
				modules = {
					fixed_ship_torpedo_slot = ship_torpedo_sub_2
					fixed_ship_engine_slot = sub_ship_engine_2
					rear_1_custom_slot = ship_torpedo_sub_2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 2 }
		}
		else = {
			create_equipment_variant = {
				name = "Ysara Class"
				type = ship_hull_submarine_1
				name_group = BEL_SM
				parent_version = 0
				modules = {
					fixed_ship_torpedo_slot = ship_torpedo_sub_1
					fixed_ship_engine_slot = sub_ship_engine_1
					rear_1_custom_slot = ship_torpedo_sub_1
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
			set_temp_variable = { level = 1 }
		}
		meta_effect = {
			text = {
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
			}
			HULL = "ship_hull_submarine_[?level]"
		}
	}
	else = {
		if = {
			limit = { has_tech = advanced_submarine }
			create_equipment_variant = {
				name = "Ysara Class"
				type = submarine_4
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
		}
		else_if = {
			limit = { has_tech = improved_submarine }
			create_equipment_variant = {
				name = "Ysara Class"
				type = submarine_3
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
		}
		else_if = {
			limit = { has_tech = basic_submarine }
			create_equipment_variant = {
				name = "Ysara Class"
				type = submarine_2
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
		}
		else = {
			create_equipment_variant = {
				name = "Ysara Class"
				type = submarine_1
				upgrades = {
					ship_torpedo_upgrade = 2
					destroyer_engine_upgrade = 2
					ship_ASW_upgrade = 2
					ship_anti_air_upgrade = 2
				}
				design_team = mio:BEL_boel_zonen_organisation
			}
		}
		meta_effect = {
			text = {
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
				add_equipment_production = {
					equipment = {
						type = [HULL]
						version_name = "Ysara Class"
					}
					requested_factories = 1
					progress = 0.35
					amount = 1
					industrial_manufacturer = mio:BEL_boel_zonen_organisation
				}
			}
			HULL = "submarine_[?level]"
		}
	}
}
