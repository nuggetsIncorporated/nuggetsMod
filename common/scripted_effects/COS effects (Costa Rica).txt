update_UFC_profits = {
	set_temp_variable = { change = -0.015 }
	multiply_temp_variable = { change = cos_profit_change }
	add_to_variable = { COS_UFC_consumer_goods = change }
	set_temp_variable = { COS_UFC_consumer_goods_tt = change }
	multiply_temp_variable = { COS_UFC_consumer_goods_tt = 100 }
	set_temp_variable = { change = 0.005 }
	multiply_temp_variable = { change = cos_profit_change }
	add_to_variable = { COS_UFC_output = change }
	set_temp_variable = { COS_UFC_output_tt = change }
	multiply_temp_variable = { COS_UFC_output_tt = 100 }
	add_to_variable = { cos_profit_factor = cos_profit_change }
	if = {
		limit = { check_variable = { cos_profit_change > 0 } }
		custom_effect_tooltip = COS_UFC_profic_increase_tt
	}
	else_if = {
		limit = { check_variable = { cos_profit_change < 0 } }
		custom_effect_tooltip = COS_UFC_profic_decrease_tt
		add_to_variable = { COS_remove_market_decisions = cos_profit_change }
		if = {
			limit = { check_variable = { COS_remove_market_decisions = 0 } }
			clr_country_flag = COS_UFC_HEADQUARTERS_FLAG
			remove_ideas = COS_UFC_Profit_idea
		}
	}
	force_update_dynamic_modifier = yes
}

game_start_UFC_influence = {
	set_variable = { COS_UFC_influence_modifier = COS_UFC_influence }
	multiply_variable = { var = COS_UFC_influence_modifier value = -0.005 }
	set_variable = { COS_UFC_influence_construction_speed = COS_UFC_influence }
	multiply_variable = { var = COS_UFC_influence_construction_speed value = 0.003 }
	set_variable = { COS_UFC_influence_consumer_goods = COS_UFC_influence }
	multiply_variable = { var = COS_UFC_influence_consumer_goods value = -0.003 }
}

update_UFC_influence = {
	if = {
		limit = { has_idea = COS_influence_of_the_UFC_idea }
		if = {
			limit = { check_variable = { cos_UFC_change > 0 } }
			custom_effect_tooltip = COS_UFC_plus_tt
		}
		else = {
			set_temp_variable = { cos_UFC_change_dummy = cos_UFC_change }
			multiply_temp_variable = { cos_UFC_change_dummy = -1 }
			custom_effect_tooltip = COS_UFC_minus_tt
		}
		set_temp_variable = { change = -0.005 }
		multiply_temp_variable = { change = cos_UFC_change }
		add_to_variable = { COS_UFC_influence_modifier = change }
		clamp_variable = { var = COS_UFC_influence_modifier min = -0.5 max = 0 }
		set_temp_variable = { change = 0.003 }
		multiply_temp_variable = { change = cos_UFC_change }
		add_to_variable = { COS_UFC_influence_construction_speed = change }
		clamp_variable = { var = COS_UFC_influence_construction_speed min = 0 max = 0.3 }
		set_temp_variable = { change = -0.003 }
		multiply_temp_variable = { change = cos_UFC_change }
		add_to_variable = { COS_UFC_influence_consumer_goods = change }
		clamp_variable = { var = COS_UFC_influence_consumer_goods min = -0.3 max = 0 }
		add_to_variable = { COS_UFC_influence = cos_UFC_change }
		clamp_variable = { var = COS_UFC_influence min = 0 max = 100 }
		force_update_dynamic_modifier = yes
	}
	else_if = {
		limit = { check_variable = { cos_UFC_change > 0 } }
		multiply_temp_variable = { cos_UFC_change = 15 }
		if = {
			limit = { has_idea = COS_investing }
			modify_timed_idea = {
				idea = COS_investing
				days = cos_UFC_change
			}
		}
		else = {
			add_timed_idea = {
				idea = COS_investing
				days = cos_UFC_change
			}
		}
	}
}

game_start_ZKG_influence = {
	set_variable = { COS_ZKG_influence_pol_power_gain = COS_ZKG_influence }
	multiply_variable = { var = COS_ZKG_influence_pol_power_gain value = -0.007 }
	set_variable = { COS_ZKG_influence_research_speed = COS_ZKG_influence }
	multiply_variable = { var = COS_ZKG_influence_research_speed value = 0.003 }
	set_variable = { COS_ZKG_influence_production_cap = COS_ZKG_influence }
	multiply_variable = { var = COS_ZKG_influence_production_cap value = 0.002 }
}

update_ZKG_influence = {
	if = {
		limit = { has_idea = COS_influence_of_the_ZKG_idea }
		if = {
			limit = { check_variable = { cos_ZKG_change > 0 } }
			custom_effect_tooltip = COS_ZKG_plus_tt
		}
		else = {
			set_temp_variable = { cos_ZKG_change_dummy = cos_ZKG_change }
			multiply_temp_variable = { cos_ZKG_change_dummy = -1 }
			custom_effect_tooltip = COS_ZKG_minus_tt
		}
		set_temp_variable = { change = -0.007 }
		multiply_temp_variable = { change = cos_ZKG_change }
		add_to_variable = { COS_ZKG_influence_pol_power_gain = change }
		clamp_variable = { var = COS_ZKG_influence_pol_power_gain min = -0.7 max = 0 }
		set_temp_variable = { change = 0.003 }
		multiply_temp_variable = { change = cos_ZKG_change }
		add_to_variable = { COS_ZKG_influence_research_speed = change }
		clamp_variable = { var = COS_ZKG_influence_research_speed min = 0 max = 0.3 }
		set_temp_variable = { change = 0.002 }
		multiply_temp_variable = { change = cos_ZKG_change }
		add_to_variable = { COS_ZKG_influence_production_cap = change }
		clamp_variable = { var = COS_ZKG_influence_production_cap min = 0 max = 0.2 }
		add_to_variable = { COS_ZKG_influence = cos_ZKG_change }
		clamp_variable = { var = COS_ZKG_influence min = 0 max = 100 }
		force_update_dynamic_modifier = yes
	}
	else_if = {
		limit = { check_variable = { cos_ZKG_change > 0 } }
		multiply_temp_variable = { cos_ZKG_change = 15 }
		if = {
			limit = { has_idea = COS_investing }
			modify_timed_idea = {
				idea = COS_investing
				days = cos_ZKG_change
			}
		}
		else = {
			add_timed_idea = {
				idea = COS_investing
				days = cos_ZKG_change
			}
		}
	}
}

COS_enable_legion_del_caribe_decisions = {
	if = {
		limit = {
			country_exists = CEN
			CEN = { has_elected_government = no }
		}
		activate_targeted_decision = { decision = COS_Ferrer_takes_Control_Attack target = CEN }
		CEN = {
			every_owned_state = {
				limit = { region = 34 } #Central America
				add_to_array = { COS.COS_supply_rebels_array = THIS }
				ROOT = { activate_targeted_decision = { decision = COS_Supply_Rebels target = PREV } }
			}
		}
	}
}

COS_disable_legion_del_caribe_decisions = {
	hidden_effect = {
		if = {
			limit = {
				OR = {
					NOT = { country_exists = CEN }
					CEN = { has_elected_government = yes }
				}
			}
			remove_targeted_decision = { decision = COS_Ferrer_takes_Control_Attack target = CEN }
			COS_clear_legion_del_caribe_rebel_decisions = yes
		}
	}
}

COS_clear_legion_del_caribe_rebel_decisions = {
	hidden_effect = {
		for_each_scope_loop = {
			array = COS.COS_supply_rebels_array
			clr_state_flag = COS_supplied_rebels
			PREV = { remove_targeted_decision = { decision = COS_Supply_Rebels target = PREV } }
		}
		clear_array = COS.COS_supply_rebels_array
	}
}

COS_create_democratic_rebels_divisions = {
	log = "[GetLogRoot]: Create divisions COS_create_democratic_rebels_divisions"
	### Delete templates - no cheating
	if = {
		limit = { has_template = "Brigada de Milicia" }
		delete_unit_template_and_units = { division_template = "Brigada de Milicia" disband = yes }
	}
	### Create templates
	division_template = {
		name = "Brigada de Milicia"
		division_names_group = SPAN_INF_01
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
		}
		template_counter = 68
	}
	### Create divisions
	319 = {
		create_unit = {
			division = "division_template = \"Brigada de Milicia\" start_experience_factor = 0.05"
			owner = ROOT
			prioritize_location = 4598
			allow_spawning_on_enemy_provs = yes
		}
	}
}

COS_create_volunteer_divisions_against_CEN = {
	log = "[GetLogRoot]: Create divisions COS_create_volunteer_divisions_against_CEN"
	### Delete templates - no cheating
	if = {
		limit = { has_template = "Brigada de Voluntarios" }
		delete_unit_template_and_units = { division_template = "Brigada de Voluntarios" disband = yes }
	}
	### Create templates
	division_template = {
		name = "Brigada de Voluntarios"
		division_names_group = SPAN_INF_01
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
		}
	}

	### Create divisions
	random_owned_controlled_state = {
		limit = { valid_state_for_spawning_friendly_unit = yes }
		create_unit = {
			division = "division_template = \"Brigada de Voluntarios\" start_experience_factor = 0.05"
			owner = ROOT
		}
		create_unit = {
			division = "division_template = \"Brigada de Voluntarios\" start_experience_factor = 0.05"
			owner = ROOT
		}
		create_unit = {
			division = "division_template = \"Brigada de Voluntarios\" start_experience_factor = 0.05"
			owner = ROOT
		}
	}
}

COS_create_GER_garrison_divisions = {
	log = "[GetLogRoot]: Create divisions COS_create_GER_garrison_divisions"
	### Delete templates - no cheating
	if = {
		limit = { has_template = "Costa Rica Marine-Division" }
		delete_unit_template_and_units = { division_template = "Costa Rica Marine-Division" disband = yes }
	}
	### Create templates
	division_template = {
		name = "Costa Rica Marine-Division"
		division_names_group = SPAN_MAR_01
		regiments = {
			marine = { x = 0 y = 0 }
			marine = { x = 0 y = 1 }
			marine = { x = 0 y = 2 }
		}
		support = {
			artillery = { x = 0 y = 0 }
		}
		priority = 2
	}
	### Create divisions
	random_owned_controlled_state = {
		limit = { valid_state_for_spawning_friendly_unit = yes }
		prioritize = { 316 }
		create_unit = {
			division = "division_template = \"Costa Rica Marine-Division\" start_experience_factor = 0.5"
			owner = ROOT
			prioritize_location = 12878
		}
	}
}
