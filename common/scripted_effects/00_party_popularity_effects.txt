### Ruling Party Popularity Effects
### Written by ~mw~
### Retooled by Alpinia
#
# How to use:
#
#	set_temp_variable = { ideology_change_var = X } - increases ruling party popularity by X amount
#	change_ruling_party_popularity = yes
#
#	default_party_popularity_PP_gain = yes -- sets the PP gain to the default behaviour (i.e., tied to the ruling party)
#
#	set_variable = { political_power_ideology = int } -- maps PP gain to the ideology index (0 = totalist, 9 = natpop)
#	map_party_popularity_PP_gain_to_ideology = yes
#
#	disable_party_popularity_PP_gain = yes -- disables popularity PP gain altogether
#
#	set_temp_variable = { coalition_partner_var = token:ideology } -- adds/removes a coalition partner
#	add_to_coalition = yes
#	remove_from_coalition = yes
#
#	end_coalition = yes  -- disables any active coalitions
#

default_party_popularity_PP_gain = {
	hidden_effect = {
		for_each_loop = {
			array = coalitions_array
			if = {
				limit = {
					check_variable = { v = 3 }
					NOT = { has_government = var:global.ideology_groups^i }
				}
				set_variable = { coalitions_array^i = 1 }
			}
			else_if = {
				limit = { has_government = var:global.ideology_groups^i }
				set_variable = { coalitions_array^i = 3 }
			}
		}
		clear_variable = political_power_ideology
		clear_variable = party_popularity_gain_mapped
		if = {
			limit = { has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped } }
			remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
		}
		if = {
			limit = { NOT = { has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier } } }
			add_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
		}
		force_update_dynamic_modifier = yes
	}
}

map_party_popularity_PP_gain_to_ideology = {
	#convert token into index if necessary
	if = {
		limit = { NOT = { check_variable = { ideology_temp < global.ideology_groups^num } } }
		for_each_loop = {
			array = global.ideology_groups
			if = {
				limit = { check_variable = { ideology_temp = v } }
				set_temp_variable = { ideology_temp = i }
				set_temp_variable = { break = 1 }
			}
		}
	}

	for_each_loop = {
		array = coalitions_array
		if = {
			limit = { check_variable = { v = 3 } }
			set_variable = { coalitions_array^i = 1 }
		}
	}
	set_variable = { coalitions_array^ideology_temp = 3 }

	set_variable = { political_power_ideology = ideology_temp }

	set_temp_variable = { coalition_partner_var = global.ideology_groups^ideology_temp }
	remove_from_coalition = yes

	set_variable = { party_popularity_gain_mapped = party_popularity@var:coalition_partner_var }

	hidden_effect = {
		if = {
			limit = { has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier } }
			remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
		}
		if = {
			limit = { NOT = { has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped } } }
			add_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
		}
		force_update_dynamic_modifier = yes
	}
}

disable_party_popularity_PP_gain = {
	hidden_effect = {
		for_each_loop = {
			array = coalitions_array
			if = {
				limit = { check_variable = { v = 3 } }
				set_variable = { coalitions_array^i = 1 }
			}
		}
		clear_variable = political_power_ideology
		clear_variable = party_popularity_gain_mapped
		if = {
			limit = { has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier } }
			remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
		}
		if = {
			limit = { has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped } }
			remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
		}
		force_update_dynamic_modifier = yes
	}
}

create_coalitions_array_if_missing = {
	if = {
		limit = { NOT = { check_variable = { coalitions_array^num = global.ideology_groups^num } } }
		resize_array = { coalitions_array = global.ideology_groups^num }
		for_each_loop = {
			array = coalitions_array
			if = {
				limit = { has_government = var:global.ideology_groups^i }
				set_variable = { coalitions_array^i = 3 }
				set_temp_variable = { break = 1 }
			}
		}
	}
}

#for backwards compatibility with the previous version of the effects
convert_coalition_partner_var_into_index = {
	if = {
		limit = { NOT = { check_variable = { coalition_partner_var < global.ideology_groups^num } } }
		for_each_loop = {
			array = global.ideology_groups
			if = {
				limit = { check_variable = { coalition_partner_var = v } }
				set_temp_variable = { coalition_partner_var = i }
				set_temp_variable = { break = 1 }
			}
		}
	}
}

add_to_coalition = {
	if = {
		limit = { NOT = { has_variable = coalition_partner_var } }
		log = "ERROR: add_to_coalition - invalid coalition_partner_var"
	}
	else = {
		create_coalitions_array_if_missing = yes
		custom_effect_tooltip = add_to_coalition
		convert_coalition_partner_var_into_index = yes
		if = {
			limit = {
				check_variable = { coalitions_array^coalition_partner_var < 2 }
				NOT = {
					AND = {
						has_variable = political_power_ideology
						has_government = var:global.ideology_groups^political_power_ideology
					}
					AND = {
						has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
						has_government = var:global.ideology_groups^coalition_partner_var
					}
				}
			}
			set_variable = { coalitions_array^coalition_partner_var = 2 }
			set_temp_variable = { temp = global.ideology_groups^coalition_partner_var }
			set_temp_variable = { temp = party_popularity@var:temp }
			if = {
				limit = { NOT = { check_variable = { coalition_stability_array^coalition_partner_var = 0 } } }
				multiply_temp_variable = { temp = coalition_stability_array^coalition_partner_var }
			}
			else = {
				multiply_temp_variable = { temp = coalition_stability?0.5 }
			}
			add_to_variable = { coalition_pp_gain = temp }
			hidden_effect = {
				if = {
					limit = { NOT = { has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition } } }
					add_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
				}
				force_update_dynamic_modifier = yes
			}
		}
	}
}

remove_from_coalition = {
	if = {
		limit = { NOT = { has_variable = coalition_partner_var } }
		log = "ERROR: remove_from_coalition - invalid coalition_partner_var"
	}
	else = {
		create_coalitions_array_if_missing = yes
		custom_effect_tooltip = remove_from_coalition
		convert_coalition_partner_var_into_index = yes
		if = {
			limit = { check_variable = { coalitions_array^coalition_partner_var = 2 } }
			set_variable = { coalitions_array^coalition_partner_var = 0 }
			set_temp_variable = { temp = global.ideology_groups^coalition_partner_var }
			set_temp_variable = { temp = party_popularity@var:temp }
			if = {
				limit = { NOT = { check_variable = { coalition_stability_array^coalition_partner_var = 0 } } }
				multiply_temp_variable = { temp = coalition_stability_array^coalition_partner_var }
			}
			else = {
				multiply_temp_variable = { temp = coalition_stability?0.5 }
			}
			subtract_from_variable = { coalition_pp_gain = temp }
			hidden_effect = {
				if = {
					limit = {
						has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
						NOT = { check_variable = { coalition_pp_gain > 0 } }
					}
					clear_variable = coalition_pp_gain
					remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
					force_update_dynamic_modifier = yes
				}
			}
		}
	}
}

end_coalition = {
	if = {
		limit = { has_coalition = yes }
		create_coalitions_array_if_missing = yes
		for_each_loop = {
			array = coalitions_array
			if = {
				limit = { check_variable = { v = 2 } }
				set_variable = { coalitions_array^i = 1 }
			}
		}
		clear_array = coalition_stability_array
		resize_array = { coalition_stability_array = global.ideology_groups^num }
		clear_variable = coalition_pp_gain
		hidden_effect = {
			remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
		}
	}
}

change_ruling_party_popularity = {
	if = {
		limit = {
			OR = {
				check_variable = { ideology_change_var > 1 }
				check_variable = { ideology_change_var < -1 }
			}
		}
		multiply_temp_variable = { ideology_change_var = 0.01 }
	}
	add_popularity = {
		ideology = var:current_party_ideology_group
		popularity = ideology_change_var
	}
}

save_current_party_popularities = {
	clear_temp_array = saved_popularities
	add_to_temp_array = { saved_popularities = party_popularity_100@totalist }
	add_to_temp_array = { saved_popularities = party_popularity_100@syndicalist }
	add_to_temp_array = { saved_popularities = party_popularity_100@radical_socialist }
	add_to_temp_array = { saved_popularities = party_popularity_100@social_democrat }
	add_to_temp_array = { saved_popularities = party_popularity_100@social_liberal }
	add_to_temp_array = { saved_popularities = party_popularity_100@market_liberal }
	add_to_temp_array = { saved_popularities = party_popularity_100@social_conservative }
	add_to_temp_array = { saved_popularities = party_popularity_100@authoritarian_democrat }
	add_to_temp_array = { saved_popularities = party_popularity_100@paternal_autocrat }

	set_temp_variable = { sum = 100 }
	for_each_loop = {
		array = saved_popularities
		subtract_from_temp_variable = { sum = v }
	}
	add_to_temp_array = { saved_popularities = sum } #last value (natpop), calculated directly to avoid rounding errors
}

save_current_coalitions = {
	if = {
		limit = { has_coalition = yes }
		resize_temp_array = { saved_coalitions = global.ideology_groups^num }
		resize_temp_array = { saved_coalitions_stability = global.ideology_groups^num }
		for_each_loop = {
			array = coalitions_array
			set_variable = { saved_coalitions^i = v }
		}
		for_each_loop = {
			array = coalition_stability_array
			set_variable = { saved_coalitions_stability^i = v }
		}
	}
}

set_coalition_stability_totalist = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 0
			COLOUR = colour_totalist
		}
		set_variable = { coalition_stability_array^0 = coalition_stability_var }
	}
}
set_coalition_stability_syndicalist = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 1
			COLOUR = colour_syndicalist
		}
		set_variable = { coalition_stability_array^1 = coalition_stability_var }
	}
}
set_coalition_stability_radical_socialist = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 2
			COLOUR = colour_radsoc
		}
		set_variable = { coalition_stability_array^2 = coalition_stability_var }
	}
}
set_coalition_stability_social_democrat = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 3
			COLOUR = colour_socdem
		}
		set_variable = { coalition_stability_array^3 = coalition_stability_var }
	}
}
set_coalition_stability_social_liberal = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 4
			COLOUR = colour_soclib
		}
		set_variable = { coalition_stability_array^4 = coalition_stability_var }
	}
}
set_coalition_stability_market_liberal = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 5
			COLOUR = colour_marlib
		}
		set_variable = { coalition_stability_array^5 = coalition_stability_var }
	}
}
set_coalition_stability_social_conservative = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 6
			COLOUR = colour_soccon
		}
		set_variable = { coalition_stability_array^6 = coalition_stability_var }
	}
}
set_coalition_stability_authoritarian_democrat = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 7
			COLOUR = colour_autdem
		}
		set_variable = { coalition_stability_array^7 = coalition_stability_var }
	}
}
set_coalition_stability_paternal_autocrat = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 8
			COLOUR = colour_pataut
		}
		set_variable = { coalition_stability_array^8 = coalition_stability_var }
	}
}
set_coalition_stability_national_populist = {
	custom_override_tooltip = {
		tooltip = {
			localization_key = coalition_stability_pp_change
			INDEX = 9
			COLOUR = colour_natpop
		}
		set_variable = { coalition_stability_array^9 = coalition_stability_var }
	}
}
