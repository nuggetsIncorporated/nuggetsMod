RUS_increase_black_monday = {
	if = {
		limit = { has_idea = RUS_black_monday_1 }
		swap_ideas = {
			remove_idea = RUS_black_monday_1
			add_idea = RUS_black_monday_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_2 }
		swap_ideas = {
			remove_idea = RUS_black_monday_2
			add_idea = RUS_black_monday_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_3 }
		swap_ideas = {
			remove_idea = RUS_black_monday_3
			add_idea = RUS_black_monday_4
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_4 }
		swap_ideas = {
			remove_idea = RUS_black_monday_4
			add_idea = RUS_black_monday_5
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_5 }
		swap_ideas = {
			remove_idea = RUS_black_monday_5
			add_idea = RUS_black_monday_6
		}
	}
}

RUS_decrease_black_monday = {
	if = {
		limit = { has_idea = RUS_black_monday_6 }
		swap_ideas = {
			remove_idea = RUS_black_monday_6
			add_idea = RUS_black_monday_5
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_5 }
		swap_ideas = {
			remove_idea = RUS_black_monday_5
			add_idea = RUS_black_monday_4
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_4 }
		swap_ideas = {
			remove_idea = RUS_black_monday_4
			add_idea = RUS_black_monday_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_3 }
		swap_ideas = {
			remove_idea = RUS_black_monday_3
			add_idea = RUS_black_monday_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_2 }
		swap_ideas = {
			remove_idea = RUS_black_monday_2
			add_idea = RUS_black_monday_1
		}
	}
	else_if = {
		limit = { has_idea = RUS_black_monday_1 }
		remove_ideas = RUS_black_monday_1
		hidden_effect = {
			country_event = russia.275
		}
	}
}
# requires a temp variable RUS_anger_change
RUS_change_popular_anger = {
	if = {
		limit = {
			has_idea = RUS_popular_anger
			OR = {
				check_variable = { RUS_anger_change > 0 }
				AND = {
					check_variable = { RUS_anger_change < 0 }
					check_variable = { RUS_popular_anger > 0 }
				}
			}
		}

		set_temp_variable = { RUS_anger_lower_limit = 1 }
		subtract_from_temp_variable = { RUS_anger_lower_limit = RUS_popular_anger }

		set_temp_variable = { RUS_anger_upper_limit = 10 }
		subtract_from_temp_variable = { RUS_anger_upper_limit = RUS_popular_anger }

		# avoid going < 1 or > 10
		clamp_temp_variable = {
			var = RUS_anger_change
			min = RUS_anger_lower_limit
			max = RUS_anger_upper_limit
		}

		if = {
			limit = {
				OR = {
					NOT = { has_variable = RUS_popular_anger } #bypass the check when initialising
					NOT = { check_variable = { RUS_anger_change = 0 } }
				}
			}
			if = {
				limit = { check_variable = { RUS_anger_change > 0 } }
				custom_effect_tooltip = RUS_increase_pop_anger
				log = "Popular Anger Increased"
			}
			else = {
				custom_effect_tooltip = RUS_decrease_pop_anger
				log = "Popular Anger Decreased"
			}

			# for the tooltips
			set_temp_variable = { RUS_popular_anger_pp_temp = 0.04 }
			multiply_temp_variable = { RUS_popular_anger_pp_temp = RUS_anger_change }

			set_temp_variable = { RUS_popular_anger_stability_temp = -0.02 }
			multiply_temp_variable = { RUS_popular_anger_stability_temp = RUS_anger_change }

			set_temp_variable = { RUS_popular_anger_factory_output_temp = -0.01 }
			multiply_temp_variable = { RUS_popular_anger_factory_output_temp = RUS_anger_change }

			# set the new variables
			add_to_variable = { RUS_popular_anger = RUS_anger_change }
			add_to_variable = { RUS_popular_anger_pp = RUS_popular_anger_pp_temp }
			add_to_variable = { RUS_popular_anger_stability = RUS_popular_anger_stability_temp }
			add_to_variable = { RUS_popular_anger_factory_output = RUS_popular_anger_factory_output_temp }

			log = "Current anger levels: Military Anger = [?RUS_military_anger], Popular Anger = [?RUS_popular_anger], Right-Anger = [?RUS_right_anger], Left-Anger = [?RUS_left_anger]"
		}
		if = {
			limit = {
				check_variable = { RUS_popular_anger > 6 }
			}
			custom_effect_tooltip = RUS_popular_anger_7_tt
		}

		hidden_effect = {
			if = {
				limit = {
					has_war_with = GER
					surrender_progress > 0.25
					check_variable = { RUS_popular_anger > 9 }
				}
				country_event = { id = russia.918 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_popular_anger > 9 }
				}
				country_event = { id = russia.924 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_popular_anger > 8 }
				}
				country_event = { id = russia.923 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_popular_anger > 7 }
				}
				country_event = { id = russia.922 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_popular_anger > 6 }
				}
				country_event = { id = russia.921 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_popular_anger > 5 }
				}
				country_event = { id = russia.920 days = 4 random_days = 4 }
			}
		}
	}
}

# requires a temp variable RUS_anger_change
RUS_change_military_anger = {
	if = {
		limit = {
			has_idea = RUS_military_anger
			OR = {
				check_variable = { RUS_anger_change > 0 }
				AND = {
					check_variable = { RUS_anger_change < 0 }
					check_variable = { RUS_military_anger > 0 }
				}
			}
		}

		set_temp_variable = { RUS_anger_lower_limit = 1 }
		subtract_from_temp_variable = { RUS_anger_lower_limit = RUS_military_anger }

		set_temp_variable = { RUS_anger_upper_limit = 10 }
		subtract_from_temp_variable = { RUS_anger_upper_limit = RUS_military_anger }

		# avoid going < 1 or > 10
		clamp_temp_variable = {
			var = RUS_anger_change
			min = RUS_anger_lower_limit
			max = RUS_anger_upper_limit
		}

		if = {
			limit = {
				OR = {
					NOT = { has_variable = RUS_military_anger } #bypass the check when initialising
					NOT = { check_variable = { RUS_anger_change = 0 } }
				}
			}
			if = {
				limit = { check_variable = { RUS_anger_change > 0 } }
				custom_effect_tooltip = RUS_increase_mil_anger
				log = "Military Anger Increased"
			}
			else = {
				custom_effect_tooltip = RUS_decrease_mil_anger
				log = "Military Anger Decreased"
			}

			# for the tooltips
			set_temp_variable = { RUS_military_anger_pp_temp = 0.04 }
			multiply_temp_variable = { RUS_military_anger_pp_temp = RUS_anger_change }

			set_temp_variable = { RUS_military_anger_stability_temp = -0.02 }
			multiply_temp_variable = { RUS_military_anger_stability_temp = RUS_anger_change }

			set_temp_variable = { RUS_military_anger_organisation_temp = -0.02 }
			multiply_temp_variable = { RUS_military_anger_organisation_temp = RUS_anger_change }

			# set the new variables
			add_to_variable = { RUS_military_anger = RUS_anger_change }
			add_to_variable = { RUS_military_anger_pp = RUS_military_anger_pp_temp }
			add_to_variable = { RUS_military_anger_stability = RUS_military_anger_stability_temp }
			add_to_variable = { RUS_military_anger_organisation = RUS_military_anger_organisation_temp }

			log = "Current anger levels: Military Anger = [?RUS_military_anger], Popular Anger = [?RUS_popular_anger], Right-Anger = [?RUS_right_anger], Left-Anger = [?RUS_left_anger]"
		}

		# events
		hidden_effect = {
			if = {
				limit = {
					has_war_with = GER
					surrender_progress > 0.25
					check_variable = { RUS_military_anger > 9 }
				}
				country_event = { id = russia.918 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_military_anger > 9 }
					NOT = {
						has_completed_focus = RUS_third_russia
					}
				}
				country_event = { id = russia.914 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_military_anger > 8 }
					NOT = {
						has_completed_focus = RUS_third_russia
					}
				}
				country_event = { id = russia.913 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_military_anger > 7 }
					NOT = {
						has_completed_focus = RUS_third_russia
					}
				}
				country_event = { id = russia.912 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_military_anger > 6 }
				}
				country_event = { id = russia.911 days = 4 random_days = 4 }
			}
			else_if = {
				limit = {
					check_variable = { RUS_military_anger > 5 }
				}
				country_event = { id = russia.910 days = 4 random_days = 4 }
			}
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_military_anger_dem
			OR = {
				check_variable = { RUS_anger_change > 0 }
				AND = {
					check_variable = { RUS_anger_change < 0 }
					check_variable = { RUS_military_anger > 0 }
				}
			}
		}

		set_temp_variable = { RUS_anger_lower_limit = 1 }
		subtract_from_temp_variable = { RUS_anger_lower_limit = RUS_military_anger }

		set_temp_variable = { RUS_anger_upper_limit = 10 }
		subtract_from_temp_variable = { RUS_anger_upper_limit = RUS_military_anger }

		# avoid going < 1 or > 10
		clamp_temp_variable = {
			var = RUS_anger_change
			min = RUS_anger_lower_limit
			max = RUS_anger_upper_limit
		}

		if = {
			limit = {
				OR = {
					NOT = { has_variable = RUS_military_anger } #bypass the check when initialising
					NOT = { check_variable = { RUS_anger_change = 0 } }
				}
			}
			if = {
				limit = { check_variable = { RUS_anger_change > 0 } }
				custom_effect_tooltip = RUS_increase_mil_anger
			}
			else = {
				custom_effect_tooltip = RUS_decrease_mil_anger
			}

			# for the tooltips
			set_temp_variable = { RUS_military_anger_morale_temp = -0.03 }
			multiply_temp_variable = { RUS_military_anger_morale_temp = RUS_anger_change }

			set_temp_variable = { RUS_military_anger_stability_temp = -0.01 }
			multiply_temp_variable = { RUS_military_anger_stability_temp = RUS_anger_change }

			# set the new variables
			add_to_variable = { RUS_military_anger = RUS_anger_change }
			add_to_variable = { RUS_military_anger_stability = RUS_military_anger_stability_temp }
			add_to_variable = { RUS_military_anger_morale = RUS_military_anger_morale_temp }
		}

		# events
		hidden_effect = {
			if = {
				limit = { check_variable = { RUS_military_anger > 9 } }
				country_event = { id = demrus.103 days = 4 random_days = 4 } #Coup in the Kremlin
			}
			else_if = {
				limit = { check_variable = { RUS_military_anger > 7 } }
				country_event = { id = demrus.102 days = 4 random_days = 4 } #The Generals' Letter
			}
			else_if = {
				limit = { check_variable = { RUS_military_anger > 5 } }
				country_event = { id = demrus.101 days = 4 random_days = 4 } #A Visit from the General-Fieldmarshal
			}
			else_if = {
				limit = { check_variable = { RUS_military_anger > 3 } }
				country_event = { id = demrus.100 days = 4 random_days = 4 } #Rightwing Exploiting Anger
			}
		}
	}
}

# requires a temp variable RUS_anger_change
RUS_change_right_anger = {
	if = {
		limit = {
			has_idea = RUS_right_anger
			OR = {
				check_variable = { RUS_anger_change > 0 }
				AND = {
					check_variable = { RUS_anger_change < 0 }
					check_variable = { RUS_right_anger > 0 }
				}
			}
		}

		set_temp_variable = { RUS_anger_lower_limit = 1 }
		subtract_from_temp_variable = { RUS_anger_lower_limit = RUS_right_anger }

		set_temp_variable = { RUS_anger_upper_limit = 10 }
		subtract_from_temp_variable = { RUS_anger_upper_limit = RUS_right_anger }

		# avoid going < 1 or > 10
		clamp_temp_variable = {
			var = RUS_anger_change
			min = RUS_anger_lower_limit
			max = RUS_anger_upper_limit
		}

		if = {
			limit = {
				OR = {
					NOT = { has_variable = RUS_right_anger } #bypass the check when initialising
					NOT = { check_variable = { RUS_anger_change = 0 } }
				}
			}
			if = {
				limit = { check_variable = { RUS_anger_change > 0 } }
				custom_effect_tooltip = RUS_increase_right_anger
				log = "Right-Anger Increased"
			}
			else = {
				custom_effect_tooltip = RUS_decrease_right_anger
				log = "Right-Anger Decreased"
			}

			# for the tooltips
			set_temp_variable = { RUS_right_anger_pp_temp = 0.04 }
			multiply_temp_variable = { RUS_right_anger_pp_temp = RUS_anger_change }

			# set the new variables
			add_to_variable = { RUS_right_anger = RUS_anger_change }
			add_to_variable = { RUS_right_anger_pp = RUS_right_anger_pp_temp }

			log = "Current anger levels: Military Anger = [?RUS_military_anger], Popular Anger = [?RUS_popular_anger], Right-Anger = [?RUS_right_anger], Left-Anger = [?RUS_left_anger]"
		}

		# events
		hidden_effect = {
			if = {
				limit = {
					check_variable = { RUS_right_anger > 9 }
					is_monarchy = no
				}
				country_event = { id = demrus.109 days = 4 random_days = 4 } #The Revolt from the Right
			}
			else_if = {
				limit = {
					check_variable = { RUS_right_anger > 9 }
					is_monarchy = yes
				}
				country_event = { id = monrus.15 days = 4 random_days = 4 } #Imperial Cabinet Falls
			}
			else_if = {
				limit = {
					check_variable = { RUS_right_anger > 8 }
				}
				country_event = { id = demrus.108 days = 4 random_days = 40 } #The Patriots March
			}
			else_if = {
				limit = {
					check_variable = { RUS_right_anger > 7 }
				}
				country_event = { id = demrus.107 days = 4 random_days = 40 } #Conservative Opposition Mounting
				country_event = { id = monrus.35 days = 50 } #Rising Discontent
			}
			else_if = {
				limit = {
					check_variable = { RUS_right_anger > 5 }
				}
				country_event = { id = demrus.106 days = 4 random_days = 40 } #Faith in Russia
			}
			else_if = {
				limit = {
					check_variable = { RUS_right_anger > 3 }
				}
				country_event = { id = demrus.105 days = 4 random_days = 40 } #Creation of the Young Guard
			}
		}
	}
}

# requires a temp variable RUS_anger_change
RUS_change_left_anger = {
	if = {
		limit = {
			has_idea = RUS_left_anger
			OR = {
				check_variable = { RUS_anger_change > 0 }
				AND = {
					check_variable = { RUS_anger_change < 0 }
					check_variable = { RUS_left_anger > 0 }
				}
			}
		}

		set_temp_variable = { RUS_anger_lower_limit = 1 }
		subtract_from_temp_variable = { RUS_anger_lower_limit = RUS_left_anger }

		set_temp_variable = { RUS_anger_upper_limit = 10 }
		subtract_from_temp_variable = { RUS_anger_upper_limit = RUS_left_anger }

		# avoid going < 1 or > 10
		clamp_temp_variable = {
			var = RUS_anger_change
			min = RUS_anger_lower_limit
			max = RUS_anger_upper_limit
		}

		if = {
			limit = {
				OR = {
					NOT = { has_variable = RUS_left_anger } #bypass the check when initialising
					NOT = { check_variable = { RUS_anger_change = 0 } }
				}
			}
			if = {
				limit = { check_variable = { RUS_anger_change > 0 } }
				custom_effect_tooltip = RUS_increase_left_anger
				log = "Left-Anger Increased"
			}
			else = {
				custom_effect_tooltip = RUS_decrease_left_anger
				log = "Right-Anger Increased"
			}

			# for the tooltips
			set_temp_variable = { RUS_left_anger_stability_temp = -0.01 }
			multiply_temp_variable = { RUS_left_anger_stability_temp = RUS_anger_change }

			set_temp_variable = { RUS_left_anger_factory_output_temp = -0.02 }
			multiply_temp_variable = { RUS_left_anger_factory_output_temp = RUS_anger_change }

			# set the new variables
			add_to_variable = { RUS_left_anger = RUS_anger_change }
			add_to_variable = { RUS_left_anger_stability = RUS_left_anger_stability_temp }
			add_to_variable = { RUS_left_anger_factory_output = RUS_left_anger_factory_output_temp }

			log = "Current anger levels: Military Anger = [?RUS_military_anger], Popular Anger = [?RUS_popular_anger], Right-Anger = [?RUS_right_anger], Left-Anger = [?RUS_left_anger]"
		}

		# events
		hidden_effect = {
			if = {
				limit = {
					check_variable = { RUS_left_anger > 9 }
					is_monarchy = no
				}
				country_event = { id = demrus.115 days = 4 random_days = 4 } #At the Precipe of a Revolution
			}
			else_if = {
				limit = {
					check_variable = { RUS_left_anger > 9 }
					is_monarchy = yes
				}
				country_event = { id = monrus.15 days = 4 random_days = 4 } #Imperial Cabinet Falls
			}
			else_if = {
				limit = { check_variable = { RUS_left_anger > 8 } }
				country_event = { id = demrus.114 days = 4 random_days = 40 } #Nationwide Railways-workers Strike
			}
			else_if = {
				limit = { check_variable = { RUS_left_anger > 7 } }
				country_event = { id = demrus.113 days = 4 random_days = 40 } #Terrorist attacks
				country_event = { id = monrus.35 days = 50 } #Rising Discontent
			}
			else_if = {
				limit = { check_variable = { RUS_left_anger > 6 } }
				country_event = { id = demrus.112 days = 4 random_days = 40 } #Major Strikes Called
			}
			else_if = {
				limit = { check_variable = { RUS_left_anger > 5 } }
				country_event = { id = demrus.111 days = 4 random_days = 40 } #Revolutionary Pamphlets Spread
			}
			else_if = {
				limit = { check_variable = { RUS_left_anger > 4 } }
				country_event = { id = demrus.110 days = 4 random_days = 40 } #Socialists Demand Unbanning
			}
			else_if = {
				limit = { check_variable = { RUS_left_anger > 3 } }
				country_event = { id = demrus.2 days = 4 random_days = 40 } #The Red Regiments Strike
			}
		}
	}
}

RUS_change_projection = {
	if = {
		limit = { has_socialist_government = no }
		custom_effect_tooltip = RUS_change_projection_tt
		add_to_variable = { RUS_power_projection = RUS_power_change }
	}
}

RUS_clear_savinkov_city_renames = {
	hidden_effect = {
		if = {
			limit = { has_global_flag = konigsberg_renamed_savinkov }
			5 = { #Königsberg
				set_state_name = STATE_5
				set_province_name = { id = 6332 name = VICTORY_POINTS_6332 }
			}
		}
		if = {
			limit = { has_global_flag = allenstein_renamed_savinkov }
			777 = { set_province_name = { id = 9346 name = VICTORY_POINTS_9346 } } #Allenstein
		}
		570 = { #Novonikolayevsk
			set_state_name = STATE_570
			set_province_name = { id = 7274 name = VICTORY_POINTS_7274 }
		}
		248 = { set_province_name = { id = 6167 name = VICTORY_POINTS_6167 } } #Rybinsk
		253 = { set_province_name = { id = 357 name = VICTORY_POINTS_357 } } #Ivanovo-Voznesensk

		clr_global_flag = konigsberg_renamed_savinkov
		clr_global_flag = rybinsk_renamed_savinkov
		clr_global_flag = allenstein_renamed_savinkov
		clr_global_flag = ivanovovznesensk_renamed_savinkov
		clr_global_flag = novonikolayevsk_renamed
	}
}

RUS_clear_socrus_city_renames = {
	if = {
		limit = {
			OR = {
				has_global_flag = ekaterinburg_renamed
				has_global_flag = ekaterinburg_renamed_maximalist
			}
		}
		653 = { #Ekaterinburg
			set_state_name = STATE_653
			set_province_name = { id = 1821 name = VICTORY_POINTS_1821 }
		}
	}
	217 = { #Tsaritsyn
		set_state_name = STATE_217
		set_province_name = { id = 3529 name = VICTORY_POINTS_3529 }
	}
	250 = { #Simbirsk
		set_state_name = STATE_250
		set_province_name = { id = 392 name = VICTORY_POINTS_392 }
	}
	570 = { #Novonikolayevsk
		set_state_name = STATE_570
		set_province_name = { id = 7274 name = VICTORY_POINTS_7274 }
	}
	233 = { #Vladikavkaz
		set_state_name = STATE_233
		set_province_name = { id = 9628 name = VICTORY_POINTS_9628 }
	}
	397 = { #Ust-Sysolsk
		set_state_name = STATE_397
		set_province_name = { id = 6121 name = VICTORY_POINTS_6121 }
	}
	961 = { set_province_name = { id = 3672 name = VICTORY_POINTS_3672 } } #Grozny
	232 = { set_province_name = { id = 3668 name = VICTORY_POINTS_3668 } } #Petrovsk

	clr_global_flag = ekaterinburg_renamed_maximalist
	clr_global_flag = ekaterinburg_renamed
	clr_global_flag = tsaritsyn_renamed_vst
	clr_global_flag = tsaritsyn_renamed
	clr_global_flag = simbirsk_renamed_vst
	clr_global_flag = novonikolayevsk_renamed
	clr_global_flag = vladikavkaz_renamed
	clr_global_flag = ustsysolsk_renamed
	clr_global_flag = grozny_renamed
	clr_global_flag = petrovsk_renamed
}

RUS_remove_socrus = {
	RUS_clear_socrus_city_renames = yes
	remove_ideas = {
		RUS_workers_control
		RUS_workers_control_2
		RUS_workers_control_3_spiridonist
		RUS_workers_control_3_maximalist
		RUS_white_army_red_baron
		RUS_lack_of_officers
		RUS_lack_of_officers_2
		RUS_lack_of_officers_3
		RUS_soc_war_preparation_1
		RUS_soc_war_preparation_2
		RUS_soc_war_preparation_3
		RUS_anti_socialist_resistance_1
		RUS_anti_socialist_resistance_2
		RUS_anti_socialist_resistance_3
		RUS_anti_socialist_resistance_4
		RUS_anti_socialist_resistance_5
		RUS_anti_socialist_resistance_6
		RUS_white_sabotage_1
		RUS_white_sabotage_2
		RUS_white_sabotage_3
		RUS_white_sabotage_4
		RUS_white_sabotage_5
		RUS_soc_strike
		RUS_reeducation_camps
		RUS_reeducation_camps_2
		RUS_vgpu_idea
		RUS_vgpu_idea_2
		RUS_vgpu_idea_3
		RUS_vgpu_idea_4
		RUS_vgpu_idea_lar
		RUS_vgpu_idea_lar_2
		RUS_vgpu_idea_lar_3
		RUS_vgpu_idea_lar_4
		RUS_vst_party_unity_idea
		RUS_vst_party_streamlined_idea
		RUS_vst_party_factionalism_idea
		RUS_NEP
		RUS_NEP_SDS
		RUS_NEP_SDS_2
		RUS_fedplan
		RUS_fedplan_2
		RUS_economic_planning
		RUS_economic_planning_2
		RUS_congress_of_unions
		RUS_congress_of_unions_2
		RUS_congress_of_unions_3
		RUS_towards_post_scarity
		RUS_towards_devolved_state
		RUS_socialism_in_practice
		RUS_legacy_of_narodism
		RUS_urbanisation_drive
		RUS_subjugation_of_nature
		RUS_menshevik_ideals
		RUS_menshevik_ideals_2
		RUS_proper_socialist_demoracy_pre
		RUS_proper_socialist_demoracy
		RUS_machism_idea_1
		RUS_machism_idea_2
		RUS_machism_idea_3
		RUS_machism_idea_4
		RUS_machism_idea_5
		RUS_financing_the_healthcare
		RUS_healthcare_for_all
		RUS_pacification_of_countryside
		RUS_proletarian_transition_1
		RUS_proletarian_transition_2
		RUS_technocratic_syndicalism_1
		RUS_technocratic_syndicalism_2
		RUS_democratic_dictatorship_1
		RUS_democratic_dictatorship_2
		RUS_to_protect_democracy_1
		RUS_to_protect_democracy_2
		RUS_zinovyev_constitution_1
		RUS_zinovyev_constitution_2
		RUS_totalism_idea_1
		RUS_totalism_idea_2
		RUS_unions_fury
		RUS_subdued_unions
		RUS_centralised_unions
		RUS_soc_rebuilding
		RUS_INT_industrialisation
		RUS_saviour_of_revolution
		RUS_soc_economic_area
		RUS_centralised_union_government
		RUS_centralised_union_government_2
		RUS_peoples_cossack_corps
		RUS_pavlov_rebellion
		RUS_world_revolution
		RUS_world_revolution_2
		RUS_parliamentarian_faith_0
		RUS_parliamentarian_faith_1
		RUS_parliamentarian_faith_2
		RUS_parliamentarian_faith_3
		RUS_parliamentarian_faith_4
		RUS_parliamentarian_faith_5
		RUS_parliamentarian_faith_6
		RUS_parliamentarian_faith_7
		RUS_parliamentarian_faith_8
		RUS_parliamentarian_faith_9
		RUS_parliamentarian_faith_10
		RUS_maximalist_influence_0
		RUS_maximalist_influence_1
		RUS_maximalist_influence_2
		RUS_maximalist_influence_3
		RUS_maximalist_influence_4
		RUS_maximalist_influence_5
		RUS_maximalist_influence_6
		RUS_maximalist_influence_7
		RUS_maximalist_influence_8
		RUS_maximalist_influence_9
		RUS_maximalist_influence_10
		RUS_dignity_of_labour
		RUS_dignity_of_labour_2
		RUS_peasant_worker_unity
		RUS_concordance_with_the_church
		RUS_concordance_with_the_church_alt
		RUS_peasant_collectives_idea
		RUS_democratic_bloc_1
		RUS_democratic_bloc_2
		RUS_democratic_bloc_3
		RUS_democratic_bloc_4
		RUS_democratic_bloc_5
		RUS_democratic_bloc_6
		RUS_democratic_bloc_7
		RUS_democratic_bloc_8
		RUS_democratic_bloc_9
		RUS_democratic_bloc_10
		RUS_new_security_apparatus
		RUS_socialist_education
		RUS_socialist_education_2
		RUS_postwar_factionalism
		RUS_postwar_factionalism_2
		RUS_postwar_factionalism_3
		RUS_revolutionary_vigilance
		RUS_revolutionary_vigilance_2
	}
}

RUS_remove_savinkov = {
	RUS_clear_savinkov_city_renames = yes
	uncomplete_national_focus = {
		focus = RUS_control_supreme_court
		uncomplete_children = yes
	}
	#military anger is reset to 0 in Denikin/Wrangel event
	set_variable = { RUS_left_anger = 1 }
	set_variable = { RUS_right_anger = 1 }
	hidden_effect = {
		drop_cosmetic_tag = yes
		clr_country_flag = RUS_voskhod_active
		RUS_disable_voskhod = yes
		if = {
			limit = { has_dictatorship_government = yes }
			add_ideas = RUS_post-savinkov_economy
		}
		remove_ideas = {
			RUS_military_chaos
			RUS_popular_anger
			RUS_military_anger
			RUS_VRBO
			RUS_VRBO_2
			RUS_VRBO_3
			RUS_death_throes_of_the_republic
			RUS_army_commissars_idea
			RUS_army_commissars_idea_2
			RUS_state_guard_1
			RUS_state_guard_2
			RUS_russian_cause_idea
			RUS_centralise_federal_system
			RUS_artels
			RUS_artels_chamber
			RUS_izotovites
			RUS_supreme_economic_council
			RUS_supreme_economic_council_2
			RUS_supreme_economic_council_3
			RUS_supreme_economic_council_4
			RUS_supreme_economic_council_5
			RUS_new_russian_culture_1
			RUS_new_russian_culture_2
			RUS_new_russian_culture_3
			RUS_new_russian_culture_4
			RUS_new_russian_culture_5
			RUS_new_russian_culture_6
			RUS_new_russian_culture_7
			RUS_new_russian_culture_8
			RUS_new_russian_culture_9
			RUS_new_russian_culture_10
			RUS_eurasian_autarky
			RUS_national_solidarism_idea
			RUS_purged_universities
			RUS_cossack_resistance
			RUS_army_reshuffle
			RUS_expansion_of_VES_bureaucracy
			RUS_military_purges
			RUS_terror_bomber_school
		}
		every_character = { #Remove hired advisors
			limit = {
				is_political_advisor = yes
				is_hired_as_advisor = yes
			}
			hidden_effect = {
				retire = yes
				set_nationality = ROOT
			}
		}
		if = {
			limit = { has_character = RUS_anton_turkul }
			RUS_anton_turkul = {
				remove_trait = { trait = RUS_savinkovist_officer }
				add_trait = { trait = RUS_monarchist_officer }
			}
		}
		set_technology = { tech_assault_battalion = 0 }
		every_owned_state = { RUS_remove_VES_modifier = yes }
		remove_power_balance = { id = RUS_power_balance }
		if = {
			limit = { has_active_mission = RUS_land_reform_in_progress }
			country_event = { id = demrus.35 days = 21 }
		}
		if = {
			limit = {
				country_exists = FER
				RUS_is_demrus = yes
				RUS_boldyrev = no
				NOT = { has_country_leader = { character = RUS_sergey_markov } }
			}
			FER = { country_event = { id = fer.36 days = 5 } }
		}
		RUS = { #Needs this scope because effect can also be fired in RSA scope
			if = {
				limit = {
					NOT = { has_character = RUS_pyotr_krasnov }
					NOT = { country_exists = FER }
				}
				RUS_pyotr_krasnov = { set_nationality = RUS }
			}
			RUS_vladimir_nabokov = {
				remove_political_advisor_role = yes
			}
			RUS_create_natpop_vonsyatsky = yes
		}
		if = {
			limit = { has_country_flag = RUS_savinkov_suicide }
			random_other_country = {
				limit = { is_ai = yes }
				news_event = rusnews.4
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_country_flag = RUS_savinkov_socialist_uprising
					has_country_flag = RUS_lost_wk2
				}
				OR = {
					RUS_pyotr_wrangel = { is_army_chief = yes }
					RUS_anton_denikin = { is_army_chief = yes }
				}
			}
			random_other_country = {
				limit = { is_ai = yes }
				news_event = rusnews.3
			}
		}
		every_subject_country = {
			limit = { has_government = national_populist }
			copy_government_of_ROOT = yes
		}
		clr_country_flag = RUS_unitary_state
		clr_country_flag = RUS_savinkov_ai
		clr_country_flag = RUS_old_svobodnik_ai
		clr_country_flag = RUS_ideocrat_ai
		clr_country_flag = RUS_solidarist_ai
		#If Savinkov dies due to popular anger, news event is fired from russia.926 or russia.927
	}
}

RUS_remove_VES_modifier = {
	if = {
		limit = { has_dynamic_modifier = { modifier = RUS_industrial_region } }
		remove_dynamic_modifier = { modifier = RUS_industrial_region }
	}
	if = {
		limit = { has_dynamic_modifier = { modifier = RUS_industrial_region_2 } }
		remove_dynamic_modifier = { modifier = RUS_industrial_region_2 }
	}
}

RUS_military_restore_republic = {
	set_variable = { RUS_military_anger = 1 }
	if = {
		limit = {
			RUS_pyotr_wrangel = { is_army_chief = yes }
		}
		RUS_pyotr_wrangel = {
			if = {
				limit = { has_ideology = paternal_autocrat_subtype }
				promote_character = { ideology = paternal_autocrat_subtype }
			}
			else = {
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}
			add_unit_leader_trait = politically_connected
			add_max_trait = 1
			add_planning = 1
		}
		activate_advisor = RUS_aleksandr_golitsyn_sic
	}
	else_if = {
		limit = {
			has_country_flag = RUS_savinkov_suicide
			RUS_pyotr_wrangel = { is_army_chief = no }
		}
		RUS_sergey_markov = {
			if = {
				limit = { has_ideology = paternal_autocrat_subtype }
				promote_character = { ideology = paternal_autocrat_subtype }
			}
			else = {
				add_country_leader_role = {
					country_leader = {
						desc = RUS_sergey_markov_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}
			add_unit_leader_trait = politically_connected
			add_max_trait = 1
		}
		add_ideas = RUS_republic_under_watch
		activate_advisor = RUS_vasily_maklakov_sic
	}
	else = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_character = RUS_anton_denikin } }
				event_target:system = { RUS_anton_denikin = { set_nationality = RUS } }
				activate_advisor = RUS_anton_denikin_army_chief
			}
		}
		RUS_anton_denikin = {
			if = {
				limit = { has_ideology = paternal_autocrat_subtype }
				promote_character = { ideology = paternal_autocrat_subtype }
			}
			else = {
				add_country_leader_role = {
					country_leader = {
						desc = RUS_anton_denikin_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}
			add_unit_leader_trait = politically_connected
			add_max_trait = 1
		}
		add_ideas = RUS_republic_under_watch
		activate_advisor = RUS_vasily_maklakov_sic
	}
	custom_effect_tooltip = tooltip_white_line
	set_politics = {
		ruling_party = paternal_autocrat
		elections_allowed = no
	}
	RUS_remove_savinkov = yes
	custom_effect_tooltip = tooltip_white_line
	set_country_flag = RUS_RDP_leader_titov
	hidden_effect = {
		if = {
			limit = {
				RUS_pyotr_wrangel = { is_army_chief = yes }
				has_war_with = GER
			}
			RUS_pyotr_wrangel = {
				unit_leader_event = { id = monrus.80 days = 5 } #Wrangel's regency
			}
		}
		else_if = { #Triggered by RSA tree
			limit = {
				var:219.controller = {
					OR = {
						tag = RSA
						is_in_faction_with = RSA
					}
				}
			}
			country_event = { id = freerus.20 days = 1 } #Negotiations with Boldyrev
		}
		else_if = {
			limit = { RUS_wrangel = yes }
			RUS_aleksandr_golitsyn = {
				unit_leader_event = { id = ruselections.1 days = 1 } # 3rd Constitutional Asssembly
			}
		}
		else = {
			RUS_vasily_maklakov = {
				unit_leader_event = { id = ruselections.1 days = 1 } # 3rd Constitutional Asssembly
			}
		}
		country_event = { id = demrus.1 days = 25 } #Small White Terror
		country_event = { id = rusfla.20 days = 180 random_days = 80 } #The Russo-Eurasian Future
	}
}

RUS_setup_demrus = {
	hidden_effect = {
		add_ideas = RUS_weak_democracy
		add_ideas = {
			RUS_right_anger
			RUS_left_anger
		}
		if = {
			limit = { is_monarchy = no }
			add_ideas = RUS_military_anger_dem
		}
		set_variable = { RUS_military_anger = 1 }
		set_temp_variable = { RUS_anger_change = RUS_temp_mil_anger }
		RUS_change_military_anger = yes
		set_temp_variable = { RUS_anger_change = RUS_temp_right_anger }
		RUS_change_right_anger = yes
		set_temp_variable = { RUS_anger_change = RUS_temp_left_anger }
		RUS_change_left_anger = yes
		country_event = { id = ruselections.50 days = 30 } #President's agenda
		country_event = { id = demrus.38 days = 500 random_days = 200 } #The Chernov Monument
		country_event = { id = demrus.22 days = 150 random_days = 50 } #Boldyrev wishes to return
		country_event = { id = demrus.36 days = 200 random_days = 80 } #The Republican-Democratic Pledge
		country_event = { id = demrus.39 days = 300 random_days = 300 } #The Military-Industrial Complex
		country_event = { id = rusfla.47 days = 450 random_days = 450 } #Reactionary Monarchy Inside the [RUS_government_loc]
		if = {
			limit = { is_monarchy = no }
			country_event = { id = demrus.73 days = 200 random_days = 50 } #The Stabs-Captains Against Communism!
		}
		clr_country_flag = RUS_RDP_victory
		clr_country_flag = RUS_PSR_victory
		clr_country_flag = RUS_VPP_victory
		clr_country_flag = RUS_kadet_victory
		clr_country_flag = RUS_rdp_pov
		clr_country_flag = RUS_psr_pov
		clr_country_flag = RUS_kadet_pov
		clr_country_flag = RUS_vpp_pov
		clear_variable = RUS_RDP_var
		clear_variable = RUS_PSR_var
		clear_variable = RUS_kadet_var
		clear_variable = RUS_VPP_var
	}
}

RUS_initialise_dem_military = {
	set_variable = { RUS_target_army_size = num_divisions }
	add_to_variable = { RUS_target_army_size = 24 }
	set_variable = { RUS_military_demands_var = 365 }
	activate_mission = RUS_military_demands
}

RUS_increase_democracy = {
	if = {
		limit = {
			NOT = { has_idea = RUS_guided_democracy }
		}
		if = {
			limit = { has_idea = RUS_embers_of_democracy }
			swap_ideas = {
				remove_idea = RUS_embers_of_democracy
				add_idea = RUS_weak_democracy
			}
		}
		else_if = {
			limit = { has_idea = RUS_weak_democracy }
			swap_ideas = {
				remove_idea = RUS_weak_democracy
				add_idea = RUS_unstable_democracy
			}
		}
		else_if = {
			limit = { has_idea = RUS_unstable_democracy }
			swap_ideas = {
				remove_idea = RUS_unstable_democracy
				add_idea = RUS_strenghtening_democracy
			}
		}
		else_if = {
			limit = { has_idea = RUS_strenghtening_democracy }
			swap_ideas = {
				remove_idea = RUS_strenghtening_democracy
				add_idea = RUS_strong_democracy
			}
		}
		else_if = {
			limit = {
				has_idea = RUS_strong_democracy
				has_country_flag = RUS_peaceful_election_change
			}
			swap_ideas = {
				remove_idea = RUS_strong_democracy
				add_idea = RUS_genuine_democracy
			}
		}
	}
}

RUS_decrease_democracy = {
	if = {
		limit = { has_idea = RUS_genuine_democracy }
		swap_ideas = {
			remove_idea = RUS_genuine_democracy
			add_idea = RUS_strong_democracy
		}
	}
	else_if = {
		limit = { has_idea = RUS_strong_democracy }
		swap_ideas = {
			remove_idea = RUS_strong_democracy
			add_idea = RUS_strenghtening_democracy
		}
	}
	else_if = {
		limit = { has_idea = RUS_strenghtening_democracy }
		swap_ideas = {
			remove_idea = RUS_strenghtening_democracy
			add_idea = RUS_unstable_democracy
		}
		hidden_effect = {
			country_event = { id = demrus.26 days = 4 }
		}
	}
	else_if = {
		limit = { has_idea = RUS_unstable_democracy }
		swap_ideas = {
			remove_idea = RUS_unstable_democracy
			add_idea = RUS_weak_democracy
		}
		hidden_effect = {
			country_event = { id = demrus.25 days = 4 }
		}
	}
	else_if = {
		limit = { has_idea = RUS_weak_democracy }
		swap_ideas = {
			remove_idea = RUS_weak_democracy
			add_idea = RUS_embers_of_democracy
		}
	}
}

RUS_clear_earlier_demrus_focuses = {
	# Soccon is not cleared because this effect is always used to enable Soccon path
	if = {
		limit = { has_completed_focus = RUS_socdems }
		uncomplete_national_focus = {
			focus = RUS_socdems
			uncomplete_children = yes
		}
		if = {
			limit = { has_country_flag = RUS_completed_goseko_before }
			complete_national_focus = RUS_goseko
		}
	}
	else_if = {
		limit = { has_completed_focus = RUS_soclibs }
		uncomplete_national_focus = {
			focus = RUS_soclibs
			uncomplete_children = yes
		}
	}
	else_if = {
		limit = { has_completed_focus = RUS_marlibs }
		uncomplete_national_focus = {
			focus = RUS_marlibs
			uncomplete_children = yes
		}
		if = {
			limit = { has_country_flag = RUS_completed_goseko_before }
			complete_national_focus = RUS_goseko
		}
	}
}

RUS_postwar_distribute_dem_popularities = {
	if = {
		limit = { has_government = social_democrat }
		add_popularity = { ideology = social_liberal popularity = 0.1 }
		add_popularity = { ideology = market_liberal popularity = 0.1 }
		add_popularity = { ideology = social_conservative popularity = 0.1 }
	}
	else_if = {
		limit = { has_government = social_liberal }
		add_popularity = { ideology = social_democrat popularity = 0.1 }
		add_popularity = { ideology = market_liberal popularity = 0.1 }
		add_popularity = { ideology = social_conservative popularity = 0.1 }
	}
	else_if = {
		limit = { has_government = market_liberal }
		add_popularity = { ideology = social_democrat popularity = 0.1 }
		add_popularity = { ideology = social_liberal popularity = 0.1 }
		add_popularity = { ideology = social_conservative popularity = 0.1 }
	}
	else_if = {
		limit = { has_government = social_conservative }
		add_popularity = { ideology = social_democrat popularity = 0.1 }
		add_popularity = { ideology = social_liberal popularity = 0.1 }
		add_popularity = { ideology = market_liberal popularity = 0.1 }
	}
}

RUS_fight_separatism_effects = {
	if = {
		limit = { FROM = { state = 202 } } #Kyiv
		add_stability = 0.05
		every_owned_state = {
			limit = {
				is_core_of = UKR
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = RUS_UKR_governor_compliance
		}
	}
	else_if = {
		limit = { FROM = { state = 206 } } #Minsk
		every_owned_state = {
			limit = {
				is_core_of = BLR
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 206 } } #Minsk
		every_owned_state = {
			limit = {
				is_core_of = BLR
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 10 } } #Warsaw
		every_owned_state = {
			limit = {
				is_core_of = POL
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 840 } } #Finland
		every_owned_state = {
			limit = {
				is_core_of = FIN
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 13 } } #Estonia
		every_owned_state = {
			limit = {
				is_core_of = EST
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 842 } } #Riga
		every_owned_state = {
			limit = {
				is_core_of = LAT
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 11 } } #Kaunas
		every_owned_state = {
			limit = {
				is_core_of = LIT
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 231 } } #Georgia
		every_owned_state = {
			limit = {
				is_core_of = GEO
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 229 } } #Baku
		every_owned_state = {
			limit = {
				is_core_of = AZR
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
	else_if = {
		limit = { FROM = { state = 230 } } #Yerevan
		every_owned_state = {
			limit = {
				is_core_of = ARM
				NOT = { is_core_of = ROOT }
				is_owned_and_controlled_by = ROOT
			}
			add_resistance = -10
			add_compliance = 5
		}
	}
}

RUS_increase_imperial_popularity = {
	if = {
		limit = { has_idea = RUS_imperial_popularity_1 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_1
			add_idea = RUS_imperial_popularity_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_imperial_popularity_2 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_2
			add_idea = RUS_imperial_popularity_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_imperial_popularity_3 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_3
			add_idea = RUS_imperial_popularity_4
		}
	}
	else_if = {
		limit = { has_idea = RUS_imperial_popularity_4 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_4
			add_idea = RUS_imperial_popularity_5
		}
	}
}

RUS_decrease_imperial_popularity = {
	if = {
		limit = { has_idea = RUS_imperial_popularity_5 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_5
			add_idea = RUS_imperial_popularity_4
		}
	}
	else_if = {
		limit = { has_idea = RUS_imperial_popularity_4 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_4
			add_idea = RUS_imperial_popularity_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_imperial_popularity_3 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_3
			add_idea = RUS_imperial_popularity_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_imperial_popularity_2 }
		swap_ideas = {
			remove_idea = RUS_imperial_popularity_2
			add_idea = RUS_imperial_popularity_1
		}
	}
}

RUS_create_monarchy = {
	if = {
		limit = { NOT = { has_cosmetic_tag = RUS_empire } }
		drop_cosmetic_tag = yes
		set_cosmetic_tag = RUS_empire
	}
	if = {
		limit = { NOT = { has_idea = RUS_imperial_popularity_1 } }
		add_ideas = RUS_imperial_popularity_1
	}
	hidden_effect = {
		if = {
			limit = { has_idea = RUS_republic_under_watch }
			remove_ideas = RUS_republic_under_watch
		}
		if = {
			limit = {
				OR = {
					has_character = RUS_kirill_romanov
					date < 1938.8.2 #TEMP condition
				}
				RUS_wrangel_path = no
			}
			RUS_kirill_romanov = {
				set_character_name = RUS_kirill_romanov_regnal
				set_character_as_monarch = yes
				hidden_effect = { remove_all_country_leader_roles = yes }
				add_country_leader_role = {
					country_leader = {
						desc = RUS_kirill_romanov_leader_desc
						ideology = social_democrat_subtype
						traits = { RUS_emperor_of_all_russias }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_kirill_romanov_leader_desc
						ideology = social_liberal_subtype
						traits = { RUS_emperor_of_all_russias }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_kirill_romanov_leader_desc
						ideology = market_liberal_subtype
						traits = { RUS_emperor_of_all_russias }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_kirill_romanov_leader_desc
						ideology = social_conservative_subtype
						traits = { RUS_emperor_of_all_russias }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_kirill_romanov_leader_desc
						ideology = authoritarian_democrat_subtype
						traits = { RUS_emperor_of_all_russias }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_kirill_romanov_leader_desc
						ideology = paternal_autocrat_subtype
						traits = { RUS_emperor_of_all_russias }
					}
					promote_leader = yes
				}
			}
		}
		else_if = {
			limit = {
				NOT = { has_character = RUS_kirill_romanov }
				RUS_wrangel_path = no
			}
			RUS_create_vladimir = yes
		}
		if = {
			limit = { RUS_wrangel_path = yes }
			RUS_pyotr_wrangel = {
				set_character_as_monarch = yes
				hidden_effect = { remove_all_country_leader_roles = yes }
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_leader_desc
						ideology = social_democrat_subtype
						traits = { RUS_emperor_of_all_russias_wrangel }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_leader_desc
						ideology = social_liberal_subtype
						traits = { RUS_emperor_of_all_russias_wrangel }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_leader_desc
						ideology = market_liberal_subtype
						traits = { RUS_emperor_of_all_russias_wrangel }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_leader_desc
						ideology = social_conservative_subtype
						traits = { RUS_emperor_of_all_russias_wrangel }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_leader_desc
						ideology = authoritarian_democrat_subtype
						traits = { RUS_emperor_of_all_russias_wrangel }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_leader_desc
						ideology = paternal_autocrat_subtype
						traits = { RUS_imperial_regent }
					}
					promote_leader = yes
				}
			}
		}
	}
	hidden_effect = {
		country_event = { id = monrus.20 days = 120 } #The Garde Equipage
		country_event = { id = monrus.22 days = 200 random_days = 300 } #Cost of Bread
		country_event = { id = monrus.23 days = 250 random_days = 300 } #Threat of Bolshevism!
		country_event = { id = monrus.26 days = 300 random_days = 100 } #The Shadow Agency
	}
}

RUS_create_vladimir = {
	RUS_vladimir_romanov = {
		set_character_name = RUS_vladimir_romanov_regnal
		set_character_as_monarch = yes
		remove_political_advisor_role = yes
		hidden_effect = { remove_all_country_leader_roles = yes }
		add_country_leader_role = {
			country_leader = {
				desc = RUS_vladimir_romanov_leader_desc
				ideology = social_democrat_subtype
				traits = { RUS_emperor_of_all_russias }
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				desc = RUS_vladimir_romanov_leader_desc
				ideology = social_liberal_subtype
				traits = { RUS_emperor_of_all_russias }
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				desc = RUS_vladimir_romanov_leader_desc
				ideology = market_liberal_subtype
				traits = { RUS_emperor_of_all_russias }
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				desc = RUS_vladimir_romanov_leader_desc
				ideology = social_conservative_subtype
				traits = { RUS_emperor_of_all_russias }
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				desc = RUS_vladimir_romanov_leader_desc
				ideology = authoritarian_democrat_subtype
				traits = { RUS_emperor_of_all_russias }
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				desc = RUS_vladimir_romanov_leader_desc
				ideology = paternal_autocrat_subtype
				traits = { RUS_emperor_of_all_russias }
			}
			promote_leader = yes
		}
	}
}

RUS_add_vladimir_traits = {
	if = {
		limit = {
			has_completed_focus = RUS_imperial_advisory_council
		}
		RUS_vladimir_romanov = {
			if = {
				limit = { has_ideology = market_liberal_subtype }
				add_trait = {
					ideology = market_liberal_subtype
					trait = RUS_imperial_advisory_council_trait
				}
			}
			if = {
				limit = { has_ideology = social_liberal_subtype }
				add_trait = {
					ideology = social_liberal_subtype
					trait = RUS_imperial_advisory_council_trait
				}
			}
		}
	}
	if = {
		limit = {
			has_completed_focus = RUS_sponsor_universities
		}
		RUS_vladimir_romanov = {
			if = {
				limit = { has_ideology = social_conservative_subtype }
				add_trait = {
					ideology = social_conservative_subtype
					trait = RUS_patron_of_sciences
				}
			}
			if = {
				limit = { has_ideology = market_liberal_subtype }
				add_trait = {
					ideology = market_liberal_subtype
					trait = RUS_patron_of_sciences
				}
			}
		}
	}
	if = {
		limit = {
			has_completed_focus = RUS_high_imperial_council
		}
		RUS_vladimir_romanov = {
			set_temp_variable = { trait_token = token:RUS_high_imperial_council_trait }
			add_trait_to_all_country_leader_roles = yes
		}
	}
	if = {
		limit = {
			OR = {
				has_completed_focus = RUS_entrench_kadets
				has_completed_focus = RUS_symphony_of_authorities
			}
		}
		RUS_vladimir_romanov = {
			set_temp_variable = { trait_token = token:RUS_guiding_hand }
			add_trait_to_all_country_leader_roles = yes
		}
	}
	if = {
		limit = {
			OR = {
				has_completed_focus = RUS_values_of_february
				has_completed_focus = RUS_coalition_of_idealists
			}
		}
		RUS_vladimir_romanov = {
			set_temp_variable = { trait_token = token:RUS_figurehead_monarch }
			add_trait_to_all_country_leader_roles = yes
		}
	}
}

RUS_remove_monarchy = {
	hidden_effect = {
		if = {
			limit = { has_cosmetic_tag = RUS_empire }
			drop_cosmetic_tag = yes
		}
		if = {
			limit = {
				has_character = RUS_kirill_romanov
				RUS_kirill_romanov = { can_be_country_leader = yes }
			}
			RUS_kirill_romanov = { remove_all_country_leader_roles = yes }
		}
		if = {
			limit = {
				has_character = RUS_vladimir_romanov
				RUS_vladimir_romanov = { can_be_country_leader = yes }
			}
			RUS_vladimir_romanov = { remove_all_country_leader_roles = yes }
		}
		if = {
			limit = {
				has_character = RUS_pyotr_wrangel
				RUS_pyotr_wrangel = { has_ideology_group = social_conservative }
			}
			RUS_pyotr_wrangel = {
				remove_country_leader_role = { ideology = social_conservative_subtype }
			}
		}
		if = {
			limit = {
				has_character = RUS_vasily_maklakov
				RUS_vasily_maklakov = { has_ideology_group = social_conservative }
			}
			RUS_vasily_maklakov = {
				remove_country_leader_role = { ideology = social_conservative_subtype }
			}
		}
		if = {
			limit = {
				has_character = RUS_dmitry_romanov
				RUS_dmitry_romanov = { has_ideology_group = social_conservative }
			}
			RUS_dmitry_romanov = {
				remove_country_leader_role = { ideology = social_conservative_subtype }
			}
		}
	}
}

RUS_activate_siberian_industry = {
	activate_targeted_decision = { target = 582 decision = RUS_magnitogorsk }
	activate_targeted_decision = { target = 582 decision = RUS_second_baku }
	activate_targeted_decision = { target = 398 decision = RUS_motovilikha_plants }
	activate_targeted_decision = { target = 653 decision = RUS_uralmash }
	activate_targeted_decision = { target = 572 decision = RUS_chelyabinsk_tractor_plant }
	activate_targeted_decision = { target = 653 decision = RUS_kamensky_uralsky }
}

RUS_activate_central_asia_industry = {
	activate_targeted_decision = { target = 810 decision = RUS_rudny_altay }
	activate_targeted_decision = { target = 589 decision = RUS_tekeli_metallurgical_combine }
	activate_targeted_decision = { target = 406 decision = RUS_emba_oil_area }
	activate_targeted_decision = { target = 589 decision = RUS_verny_cotton_industry }
}

RUS_create_cossack_hosts = {
	if = {
		limit = { 218 = { is_owned_by = ROOT NOT = { has_state_flag = don_state } } }
		218 = {
			set_state_flag = don_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
		238 = {
			set_state_flag = don_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
		245 = {
			set_state_flag = don_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = { 234 = { is_owned_by = ROOT NOT = { has_state_flag = kuban_state } } }
		234 = {
			set_state_flag = kuban_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
		1006 = {
			set_state_flag = kuban_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = { 236 = { is_owned_by = ROOT NOT = { has_state_flag = astrakhan_state } } }
		236 = {
			set_state_flag = astrakhan_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
		237 = {
			set_state_flag = astrakhan_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = { 581 = { is_owned_by = ROOT NOT = { has_state_flag = ural_state } } }
		581 = {
			set_state_flag = ural_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = { 406 = { is_owned_by = ROOT NOT = { has_state_flag = orenburg_state } } }
		406 = {
			set_state_flag = orenburg_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
		652 = {
			set_state_flag = orenburg_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = { 583 = { is_owned_by = ROOT NOT = { has_state_flag = siberian_state } } }
		583 = {
			set_state_flag = siberian_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = { 560 = { is_owned_by = ROOT NOT = { has_state_flag = amur_state } } }
		560 = {
			set_state_flag = amur_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
		561 = {
			set_state_flag = amur_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
		657 = {
			set_state_flag = amur_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = { 589 = { is_owned_by = ROOT NOT = { has_state_flag = semirechye_state } } }
		589 = {
			set_state_flag = semirechye_state
			add_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
		}
	}
	if = {
		limit = {
			NOT = {
				has_dynamic_modifier = { modifier = RUS_oskab_modifier }
				has_dynamic_modifier = { modifier = RUS_ethnic_autonomy }
			}
			787 = { is_owned_by = ROOT NOT = { has_state_flag = terek_state } }
		}
		787 = {
			remove_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
			set_state_flag = terek_state
		}
	}
	if = {
		limit = {
			tag = FER
			564 = { is_owned_by = ROOT NOT = { has_state_flag = transbaikal_state } }
		}
		564 = {
			remove_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
			set_state_flag = transbaikal_state
		}
	}
}

RUS_remove_leader_agendas = { #NOT USED at the moment
	hidden_effect = {
		if = {
			limit = { RUS_aleksandr_titov = { has_character_flag = RUS_traits_assigned } }
			RUS_aleksandr_titov = {
				remove_trait = { trait = RUS_titov_1_off ideology = social_democrat_subtype }
				remove_trait = { trait = RUS_titov_1_on ideology = social_democrat_subtype }
				remove_trait = { trait = RUS_titov_2_off ideology = social_democrat_subtype }
				remove_trait = { trait = RUS_titov_2_on ideology = social_democrat_subtype }
				remove_trait = { trait = RUS_titov_3_off ideology = social_democrat_subtype }
				remove_trait = { trait = RUS_titov_3_on ideology = social_democrat_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_vladimir_rikhter = { has_character_flag = RUS_traits_assigned } }
			RUS_vladimir_rikhter = {
				remove_trait = { trait = RUS_rikhter_1_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_rikhter_1_on ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_rikhter_2_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_rikhter_2_on ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_rikhter_3_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_rikhter_3_on ideology = social_liberal_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_ilya_fondaminsky = { has_character_flag = RUS_traits_assigned } }
			RUS_ilya_fondaminsky = {
				remove_trait = { trait = RUS_fondaminsky_1_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_fondaminsky_1_on ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_fondaminsky_2_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_fondaminsky_2_on ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_fondaminsky_3_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_fondaminsky_3_on ideology = social_liberal_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_pitirim_sorokin = { has_character_flag = RUS_traits_assigned } }
			RUS_pitirim_sorokin = {
				remove_trait = { trait = RUS_sorokin_1_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_sorokin_1_on ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_sorokin_2_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_sorokin_2_on ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_sorokin_3_off ideology = social_liberal_subtype }
				remove_trait = { trait = RUS_sorokin_3_on ideology = social_liberal_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_vasily_maklakov = { has_character_flag = RUS_traits_assigned } }
			RUS_vasily_maklakov = {
				remove_trait = { trait = RUS_maklakov_1_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_1_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_2_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_2_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_3_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_3_on ideology = market_liberal_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_nikolay_nekrasov = { has_character_flag = RUS_traits_assigned } }
			RUS_nikolay_nekrasov = {
				remove_trait = { trait = RUS_maklakov_1_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_1_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_2_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_2_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_3_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_maklakov_3_on ideology = market_liberal_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_anton_kartashyov = { has_character_flag = RUS_traits_assigned } }
			RUS_anton_kartashyov = {
				remove_trait = { trait = RUS_kartashyov_1_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_kartashyov_1_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_kartashyov_2_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_kartashyov_2_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_kartashyov_3_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_kartashyov_3_on ideology = market_liberal_subtype }
			}
		}
		if = {
			limit = { RUS_pyotr_dolgorukov = { has_character_flag = RUS_traits_assigned } }
			RUS_pyotr_dolgorukov = {
				remove_trait = { trait = RUS_dolgorukov_1_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_dolgorukov_1_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_dolgorukov_2_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_dolgorukov_2_on ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_dolgorukov_3_off ideology = market_liberal_subtype }
				remove_trait = { trait = RUS_dolgorukov_3_on ideology = market_liberal_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_aleksandr_golitsyn = { has_character_flag = RUS_traits_assigned } }
			RUS_aleksandr_golitsyn = {
				remove_trait = { trait = RUS_golitsyn_1_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_1_on ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_2_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_2_on ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_3_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_3_on ideology = social_conservative_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_dmitry_romanov = { has_character_flag = RUS_traits_assigned } }
			RUS_dmitry_romanov = {
				remove_trait = { trait = RUS_golitsyn_1_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_1_on ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_2_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_2_on ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_3_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_golitsyn_3_on ideology = social_conservative_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
		if = {
			limit = { RUS_ivan_solonevich = { has_character_flag = RUS_traits_assigned } }
			RUS_ivan_solonevich = {
				remove_trait = { trait = RUS_solonevich_1_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_solonevich_1_on ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_solonevich_2_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_solonevich_2_on ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_solonevich_3_off ideology = social_conservative_subtype }
				remove_trait = { trait = RUS_solonevich_3_on ideology = social_conservative_subtype }
				clr_character_flag = RUS_traits_assigned
			}
		}
	}
}

RUS_remove_sr_monarchist_govt = {
	uncomplete_national_focus = {
		focus = RUS_win_back_peasants
		uncomplete_children = yes
	}
	uncomplete_national_focus = {
		focus = RUS_sorokin_reforms
	}
	remove_ideas = {
		RUS_win_back_peasants_idea
		RUS_february_empire
		RUS_russian_civil_society_1
		RUS_russian_civil_society_2
		RUS_russian_civil_society_3
		RUS_russian_civil_society_4
	}
	swap_ideas = {
		remove_idea = RUS_new_russian_capitalism_idea_2
		add_idea = RUS_new_russian_capitalism_idea
	}
	RUS_remove_autonomies = yes
	remove_targeted_decision = { decision = RUS_court_jadidists target = TUR }
	remove_targeted_decision = { decision = RUS_court_bundists target = ROOT }
	remove_targeted_decision = { decision = RUS_ecumenic_reform target = PAP }

	remove_targeted_decision = { decision = RUS_rural_schools_program target = ROOT }
	remove_targeted_decision = { decision = RUS_minority_representation target = ROOT }
	remove_targeted_decision = { decision = RUS_secular_campaign target = ROOT }
	remove_targeted_decision = { decision = RUS_sociological_institute target = ROOT }
	remove_targeted_decision = { decision = RUS_finish_sorokin_reforms target = ROOT }
}

RUS_cossack_division_check = {
	hidden_effect = {
		if = {
			limit = { NOT = { has_template = "Kazachya diviziya" } }
			division_template = {
				name = "Kazachya diviziya"
				division_names_group = RUS_CAV_01
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
				}
				support = {
					recon = { x = 0 y = 0 }
				}
			}
		}
	}
}

RUS_unlock_federal_decisions = {
	if = {
		limit = {
			NOT = {
				has_country_flag = RUS_reformed_cossack_hosts
				has_country_flag = RUS_lost_wk2
			}
		}
		activate_targeted_decision = { decision = RUS_cossack_reform target = 238 }
	}
	if = {
		limit = {
			233 = { has_dynamic_modifier = { modifier = RUS_oskab_modifier } }
			NOT = {
				has_country_flag = RUS_OSKAB_reformed
				has_country_flag = RUS_OSKAB_abolished
				has_country_flag = RUS_lost_wk2
			}
		}
		activate_targeted_decision = { decision = RUS_reform_OSKAB target = 233 }
		activate_targeted_decision = { decision = RUS_abolish_OSKAB target = 233 }
	}
}

RUS_unlock_autonomies = {
	activate_targeted_decision = { decision = RUS_muslim_autonomies target = 651 }
	activate_targeted_decision = { decision = RUS_siberian_autonomies target = 574 }
	activate_targeted_decision = { decision = RUS_form_karelia target = 216 }
	activate_targeted_decision = { decision = RUS_uralic_autonomies target = 256 }
	activate_targeted_decision = { decision = RUS_caspian_autonomies target = 237 }
}

RUS_remove_autonomies = {
	remove_targeted_decision = { decision = RUS_muslim_autonomies target = 651 }
	remove_targeted_decision = { decision = RUS_siberian_autonomies target = 574 }
	remove_targeted_decision = { decision = RUS_form_karelia target = 216 }
	remove_targeted_decision = { decision = RUS_uralic_autonomies target = 256 }
	remove_targeted_decision = { decision = RUS_caspian_autonomies target = 237 }
}

RUS_autonomy_effect = {
	if = {
		limit = { has_government = radical_socialist }
		set_temp_variable = { RUS_spiridonist_influence_change = 1 }
		RUS_add_faith = yes
		if = {
			limit = { RUS_aleksey_ustinov = { is_second_in_command = yes } }
			add_popularity = {
				ideology = totalist
				popularity = 0.02
			}
		}
		else = {
			set_temp_variable = { ideology_change_var = 0.02 }
			change_ruling_party_popularity = yes
		}
	}
	if = {
		limit = {
			RUS_pitirim_sorokin = {
				OR = {
					is_country_leader = yes
					is_second_in_command = yes
					is_hired_as_advisor = yes
				}
			}
		}
		custom_effect_tooltip = RUS_sorokin_tt
		add_political_power = 20
	}
	if = {
		limit = { has_government = social_liberal }
		add_stability = 0.04
	}
}

RUS_abolish_hosts = {
	custom_effect_tooltip = RUS_abolish_hosts_effect_tt
	hidden_effect = {
		every_state = {
			if = {
				limit = { has_dynamic_modifier = { modifier = RUS_cossack_host_modifier } }
				remove_dynamic_modifier = { modifier = RUS_cossack_host_modifier }
			}
			clr_state_flag = don_state
			clr_state_flag = kuban_state
			clr_state_flag = astrakhan_state
			clr_state_flag = ural_state
			clr_state_flag = orenburg_state
			clr_state_flag = siberian_state
			clr_state_flag = amur_state
			clr_state_flag = terek_state
		}
		delete_unit_template_and_units = { division_template = "Kazachya diviziya" disband = yes }
		set_country_flag = RUS_abolished_cossack_hosts
	}
}

RUS_initialise_socrus = {
	hidden_effect = {
		every_country = {
			limit = { is_ally_with = RUS }
			remove_from_tech_sharing_group = russian_research
		}
		if = {
			limit = { has_character = RUS_vladimir_nabokov }
			retire_character = RUS_vladimir_nabokov
		}
		drop_cosmetic_tag = yes
		RUS_remove_savinkov = yes
		RUS_remove_russian_world = yes
		LEC_remove_from_legation_council = yes
		FRA_add_to_phalanstere = yes
		remove_mission = RUS_army_focus_demand
		remove_mission = RUS_navy_focus_demand
		remove_mission = RUS_land_reform_in_progress
		set_temp_variable = { coalition_partner_var = token:syndicalist }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:radical_socialist }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:totalist }
		add_to_coalition = yes
		if = {
			limit = { any_enemy_country = { has_socialist_government = yes } }
			every_enemy_country = {
				limit = { has_socialist_government = yes }
				white_peace_with_ROOT = yes
			}
		}
		if = {
			limit = { is_faction_leader = yes }
			dismantle_faction = yes
		}
		remove_ideas = {
			RUS_embers_of_democracy
			RUS_weak_democracy
			RUS_unstable_democracy
			RUS_strenghtening_democracy
			RUS_strong_democracy
			RUS_military_anger_dem
			RUS_right_anger
			RUS_left_anger
			RUS_kazakh_unrest
			RUS_okhrana_1
			RUS_okhrana_2
			RUS_okhrana_3
			RUS_okhrana_non_lar_1
			RUS_okhrana_non_lar_2
			RUS_okhrana_non_lar_3
			RUS_deception
			LEC_generic_open_door
			RUS_state_economic_committee
			RUS_republic_under_watch
			RUS_republic_under_watch_2
			RUS_republic_under_watch_3
			RUS_guarantor_of_stability
			RUS_guarantor_of_stability_2
		}
		RUS_remove_military_plan_ideas = yes
		every_character = { #Remove hired advisors
			limit = {
				is_political_advisor = yes
				is_hired_as_advisor = yes
			}
			hidden_effect = {
				set_nationality = event_target:system
				set_nationality = ROOT
			}
		}
		every_state = {
			limit = { is_central_asia = yes }
			if = {
				limit = { has_dynamic_modifier = { modifier = RUS_central_asia_chaos } }
				remove_dynamic_modifier = { modifier = RUS_central_asia_chaos }
			}
			force_enable_resistance = { occupier = RUS clear = yes }
		}
		RUS_vladimir_levitsky = {
			promote_character = { ideology = syndicalist_subtype }
		}
		uncomplete_national_focus = {
			focus = RUS_democracy_restored
			uncomplete_children = yes
		}
		set_party_name = {
			ideology = social_democrat
			name = RUS_social_democrat2_party
			long_name = RUS_social_democrat2_party_long
		}
		RUS_gergard_zeller = {
			add_country_leader_role = {
				country_leader = {
					desc = RUS_gergard_zeller_advisor_desc
					ideology = social_democrat_subtype
				}
				promote_leader = yes
			}
		}
		set_party_name = {
			ideology = social_liberal
			name = RUS_social_liberal2_party
			long_name = RUS_social_liberal2_party_long
		}
		RUS_pitirim_sorokin = {
			promote_character = { ideology = social_liberal_subtype }
		}
		set_party_name = {
			ideology = market_liberal
			name = RUS_social_democrat2_party
			long_name = RUS_social_democrat2_party_long
		}
		RUS_sergey_melgunov = {
			add_country_leader_role = {
				country_leader = {
					desc = RUS_sergey_melgunov_sic_desc
					ideology = market_liberal_subtype
				}
				promote_leader = yes
			}
		}
		set_party_name = {
			ideology = authoritarian_democrat
			name = RUS_authoritarian_democrat4_party
			long_name = RUS_authoritarian_democrat4_party_long
		}
		RUS_mikhail_georgiyevsky = {
			add_country_leader_role = {
				country_leader = {
					desc = RUS_mikhail_georgiyevsky_advisor_desc
					ideology = authoritarian_democrat_subtype
				}
				promote_leader = yes
			}
		}
		set_party_name = {
			ideology = paternal_autocrat
			name = RUS_paternal_autocrat4_party
			long_name = RUS_paternal_autocrat4_party_long
		}
		set_party_name = {
			ideology = national_populist
			name = RUS_national_populist2_party
			long_name = RUS_national_populist2_party_long
		}
		RUS_create_natpop_vonsyatsky = yes
		clr_country_flag = RUS_purged_social_democrats
		set_global_flag = RUS_socrus_happened
		RUS_lev_dovator = { set_nationality = ROOT }
		RUS_daniil_sulimov = { remove_country_leader_role_social_democrat = yes }
		RUS_yury_sablin = { set_nationality = ROOT }
		RUS_mikhail_levandovsky = { set_nationality = ROOT }
		activate_advisor = RUS_yury_sablin_army_chief
		if = {
			limit = { has_template = "Diviziya MVD" }
			delete_unit_template_and_units = { division_template = "Diviziya MVD" disband = yes }
		}
		every_other_country = {
			limit = {
				is_in_faction_with = ROOT
				NOT = { is_subject_of = ROOT }
			}
			leave_faction = yes
		}
		every_other_country = {
			limit = {
				is_subject_of = ROOT
				NOT = { tag = BUK }
			}
			if = {
				limit = { ROOT = { has_government = syndicalist } }
				set_politics = {
					ruling_party = syndicalist
				}
			}
			else_if = {
				limit = { ROOT = { has_government = radical_socialist } }
				set_politics = {
					ruling_party = radical_socialist
				}
			}
			if = {
				limit = { original_tag = BUK }
				clr_country_flag = BUK_flag_emir_right_hand
				clr_country_flag = BUK_flag_not_emir_right_hand
				uncomplete_national_focus = {
					focus = BUK_the_emirs_right_hand
					uncomplete_children = yes
				}
				uncomplete_national_focus = {
					focus = BUK_call_for_a_council
					uncomplete_children = yes
				}
			}
			set_temp_variable = { ideology_change_var = 25 }
			change_ruling_party_popularity = yes
		}
		if = {
			limit = { BUK = { is_subject_of = RUS } }
			BUK = {
				remove_puppet_and_leave_faction = yes
			}
		}
		KHI = { country_event = { id = cacrisis.580 days = 1 } }
		BUK = { country_event = { id = cacrisis.580 days = 1 } }
		TRK = { country_event = { id = cacrisis.580 days = 1 } }
		RUS_add_faction_traits = yes
		country_event = { id = socrus.101 days = 1 } #Besieged Kronstadt
		country_event = { id = socrus.2 days = 3 } #Mass Resignation of White Generals
		country_event = { id = socrus.5 days = 7 } #VST founded
		country_event = { id = socrus.3 days = 14 } #SRs unify
		country_event = { id = socrus.194 days = 17 } #The Head of the White Snake
		country_event = { id = socrus.4 days = 21 } #other socialist parties
		country_event = { id = socrus.30 days = 30 } #Return of the Exiles
		country_event = { id = socrus.12 days = 100 } #Theses on the Past Proletarian Revolutions
		country_event = { id = socrus.37 days = 150 } #The Green Partisans
		country_event = { id = socrus.51 days = 220 } #Re-Education Labour Administration
		country_event = { id = socrus.33 days = 200 random_days = 165 } #Death of Stalin chain
		country_event = { id = socrus.13 days = 500 } #Comrades Left Behind
		country_event = { id = socrus.190 days = 700 random_days = 100 } #Renaming of Cities
		country_event = { id = rusfla.118 days = 380 random_days = 150 }
		country_event = { id = socrus.53 days = 365 random_days = 365 } #Manifesto of Productivism
		country_event = { id = rusfla.146 days = 950 random_days = 150 } #Formation of the YUR-Scouts
		country_event = { id = rusfla.182 days = 35 } #Dos Naye Rusland
		#country_event = { id = socrus.150 days = 365 random_days = 730 } #The Question of Cossacks
		if = {
			limit = { has_completed_focus = RUS_address_the_army }
			country_event = { id = socrus.54 days = 125 }
		}
		if = {
			limit = { has_guaranteed = GEO }
			GEO = { country_event = { id = geo.79 days = 1 } }
		}
		POL = { country_event = { id = poland.730 days = 7 } }
	}
}

RUS_restore_VPP = {
	set_party_name = {
		ideology = social_conservative
		long_name = RUS_social_conservative_party_long
		name = RUS_social_conservative_party
	}
	set_party_name = {
		ideology = authoritarian_democrat
		long_name = RUS_paternal_autocrat2_party_long
		name = RUS_paternal_autocrat2_party
	}
	hidden_effect = {
		remove_ideas = {
			RUS_party_versus_president
			RUS_party_versus_president_2
			RUS_party_versus_president_3
			RUS_party_versus_president_4
			RUS_party_versus_president_5
		}
		RUS_ivan_solonevich = {
			add_country_leader_role = {
				country_leader = {
					desc = RUS_ivan_solonevich_leader_desc
					ideology = authoritarian_democrat_subtype
				}
				promote_leader = yes
			}
		}
	}
}

RUS_remove_russian_world = {
	remove_targeted_decision = { target = BAT decision = RUS_operation_nevsky }
	remove_targeted_decision = { target = POL decision = RUS_influence_poland }
	remove_targeted_decision = { target = LIT decision = RUS_fund_LAF }
	remove_targeted_decision = { target = UKR decision = RUS_organise_resistance_in_crimea }
	remove_targeted_decision = { target = UKR decision = RUS_organise_russophile_groups }
	remove_targeted_decision = { target = UKR decision = RUS_incite_antigermanism }
	remove_targeted_decision = { target = BLR decision = RUS_anti_belarus }
	remove_targeted_decision = { target = BAT decision = RUS_free_baltics_free_russia }
	remove_targeted_decision = { target = LIT decision = RUS_support_the_laf }
	remove_targeted_decision = { target = POL decision = RUS_national_committee }
}

RUS_don_resistance = {
	every_owned_state = {
		limit = {
			OR = {
				state = 218 #Rostov
				state = 238 #Velikoknyazhesk
			}
		}
		add_dynamic_modifier = { modifier = RUS_pavlov_rebels }
		hidden_effect = {
			force_enable_resistance = RUS
			start_resistance = yes
		}
		if = {
			limit = { ROOT = { is_ai = no } }
			add_resistance = 50
		}
		else = {
			add_resistance = 10
		}
	}
}
RUS_kuban_resistance = {
	every_owned_state = {
		limit = {
			OR = {
				state = 234 #Ekaterinodar
				state = 1006 #Novorossiysk
			}
		}
		add_dynamic_modifier = { modifier = RUS_pavlov_rebels }
		hidden_effect = {
			force_enable_resistance = RUS
			start_resistance = yes
		}
		if = {
			limit = { ROOT = { is_ai = no } }
			add_resistance = 40
		}
		else = {
			add_resistance = 5
		}
	}
}
RUS_caspian_resistance = {
	every_owned_state = {
		limit = {
			OR = {
				state = 237 #Elista
				state = 236 #Astrakhan
				state = 581 #Uralsk
			}
		}
		add_dynamic_modifier = { modifier = RUS_pavlov_rebels }
		hidden_effect = {
			force_enable_resistance = RUS
			start_resistance = yes
		}
		if = {
			limit = { ROOT = { is_ai = no } }
			add_resistance = 30
		}
		else = {
			add_resistance = 5
		}
	}
}

RUS_add_faith = {
	if = {
		limit = { RUS_is_spiridonist = yes }
		custom_effect_tooltip = RUS_add_faith_tt
		add_to_variable = { RUS_faith = RUS_spiridonist_influence_change }
		clamp_variable = { var = RUS_faith min = 0 max = 100 }
		hidden_effect = {
			if = {
				limit = {
					check_variable = { RUS_faith < 10 }
					NOT = { has_idea = RUS_parliamentarian_faith_0 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_0
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 20 }
					NOT = { has_idea = RUS_parliamentarian_faith_1 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_1
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 30 }
					NOT = { has_idea = RUS_parliamentarian_faith_2 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_2
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 40 }
					NOT = { has_idea = RUS_parliamentarian_faith_3 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_3
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 50 }
					NOT = { has_idea = RUS_parliamentarian_faith_4 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_4
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 60 }
					NOT = { has_idea = RUS_parliamentarian_faith_5 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_5
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 70 }
					NOT = { has_idea = RUS_parliamentarian_faith_6 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_6
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 80 }
					NOT = { has_idea = RUS_parliamentarian_faith_7 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_7
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 90 }
					NOT = { has_idea = RUS_parliamentarian_faith_8 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_8
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith < 100 }
					NOT = { has_idea = RUS_parliamentarian_faith_9 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_9
			}
			else_if = {
				limit = {
					check_variable = { RUS_faith = 100 }
					NOT = { has_idea = RUS_parliamentarian_faith_10 }
				}
				RUS_remove_parliamentarian_faith_ideas = yes
				add_ideas = RUS_parliamentarian_faith_10
			}
		}
	}
}
RUS_remove_parliamentarian_faith_ideas = {
	remove_ideas = {
		RUS_parliamentarian_faith_0
		RUS_parliamentarian_faith_1
		RUS_parliamentarian_faith_2
		RUS_parliamentarian_faith_3
		RUS_parliamentarian_faith_4
		RUS_parliamentarian_faith_5
		RUS_parliamentarian_faith_6
		RUS_parliamentarian_faith_7
		RUS_parliamentarian_faith_8
		RUS_parliamentarian_faith_9
		RUS_parliamentarian_faith_10
	}
}

RUS_faith_bonuses = {
	if = {
		limit = { RUS_is_spiridonist = yes }
		if = {
			limit = {
				check_variable = { RUS_spiridonist_focuses = 1 }
			}
			custom_effect_tooltip = RUS_spiridonist_influencing_sr_tt
			set_temp_variable = { RUS_spiridonist_influence_change = 2 }
			RUS_add_faith = yes
			add_political_power = -15
		}
		else_if = {
			limit = {
				check_variable = { RUS_spiridonist_focuses = 2 }
			}
			custom_effect_tooltip = RUS_spiridonist_influencing_sr_tt
			set_temp_variable = { RUS_spiridonist_influence_change = 4 }
			RUS_add_faith = yes
			add_political_power = -30
		}
		else_if = {
			limit = {
				check_variable = { RUS_spiridonist_focuses = 3 }
			}
			custom_effect_tooltip = RUS_spiridonist_influencing_sr_tt
			set_temp_variable = { RUS_spiridonist_influence_change = 6 }
			RUS_add_faith = yes
			add_political_power = -45
		}
		else_if = {
			limit = {
				check_variable = { RUS_spiridonist_focuses = 4 }
			}
			custom_effect_tooltip = RUS_spiridonist_influencing_sr_tt
			set_temp_variable = { RUS_spiridonist_influence_change = 8 }
			RUS_add_faith = yes
			add_political_power = -60
		}
		else_if = {
			limit = {
				check_variable = { RUS_spiridonist_focuses = 5 }
			}
			custom_effect_tooltip = RUS_spiridonist_influencing_sr_tt
			set_temp_variable = { RUS_spiridonist_influence_change = 10 }
			RUS_add_faith = yes
			add_political_power = -75
		}
		else_if = {
			limit = {
				check_variable = { RUS_spiridonist_focuses = 6 }
			}
			custom_effect_tooltip = RUS_spiridonist_influencing_sr_tt
			set_temp_variable = { RUS_spiridonist_influence_change = 12 }
			RUS_add_faith = yes
			add_political_power = -90
		}
		else_if = {
			limit = {
				check_variable = { RUS_spiridonist_focuses = 7 }
			}
			custom_effect_tooltip = RUS_spiridonist_influencing_sr_tt
			set_temp_variable = { RUS_spiridonist_influence_change = 14 }
			RUS_add_faith = yes
			add_political_power = -100
		}
	}
}

RUS_rural_development_effects = {
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 0 }
		}
		custom_effect_tooltip = RUS_rural_development_stage_tt
		effect_tooltip = { add_stability = 0.01 }
	}
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 1 }
		}
		add_stability = 0.01
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = RUS_rural_development_stage_tt
		effect_tooltip = { add_stability = 0.03 }
	}
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 2 }
		}
		add_stability = 0.03
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = RUS_rural_development_stage_tt
		effect_tooltip = {
			add_stability = 0.04
			set_temp_variable = { RUS_spiridonist_influence_change = 3 }
			RUS_add_faith = yes
		}
	}
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 3 }
		}
		add_stability = 0.04
		set_temp_variable = { RUS_spiridonist_influence_change = 3 }
		RUS_add_faith = yes
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = RUS_rural_development_stage_tt
		effect_tooltip = {
			set_temp_variable = { ideology_change_var = 0.02 }
			change_ruling_party_popularity = yes
			set_temp_variable = { RUS_spiridonist_influence_change = 3 }
			RUS_add_faith = yes
			random_owned_state = {
				limit = {
					any_neighbor_state = {
						state = FROM
					}
				}
				add_extra_state_shared_building_slots = 1
			}
		}
	}
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 4 }
		}
		set_temp_variable = { ideology_change_var = 0.02 }
		change_ruling_party_popularity = yes
		set_temp_variable = { RUS_spiridonist_influence_change = 3 }
		RUS_add_faith = yes
		random_owned_state = {
			limit = {
				any_neighbor_state = {
					state = FROM
				}
			}
			add_extra_state_shared_building_slots = 1
		}
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = RUS_rural_development_stage_tt
		effect_tooltip = {
			set_temp_variable = { ideology_change_var = 0.04 }
			change_ruling_party_popularity = yes
			random_owned_state = {
				limit = {
					any_neighbor_state = {
						state = FROM
					}
				}
				add_extra_state_shared_building_slots = 1
			}
			RUS_decrease_antisoc_resistance = yes
		}
	}
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 5 }
		}
		set_temp_variable = { ideology_change_var = 0.04 }
		change_ruling_party_popularity = yes
		random_owned_state = {
			limit = {
				any_neighbor_state = {
					state = FROM
				}
			}
			add_extra_state_shared_building_slots = 1
		}
		RUS_decrease_antisoc_resistance = yes
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = RUS_rural_development_stage_tt
		effect_tooltip = {
			add_stability = 0.05
			add_war_support = 0.03
		}
	}
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 6 }
		}
		add_stability = 0.05
		add_war_support = 0.03
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = RUS_rural_development_stage_tt
		effect_tooltip = {
			set_temp_variable = { ideology_change_var = 0.08 }
			change_ruling_party_popularity = yes
			set_temp_variable = { RUS_spiridonist_influence_change = 3 }
			RUS_add_faith = yes
			RUS_decrease_antisoc_resistance = yes
		}
	}
	if = {
		limit = {
			check_variable = { RUS_rural_development_var = 7 }
		}
		set_temp_variable = { ideology_change_var = 0.08 }
		change_ruling_party_popularity = yes
		set_temp_variable = { RUS_spiridonist_influence_change = 3 }
		RUS_add_faith = yes
		RUS_decrease_antisoc_resistance = yes
	}
}

RUS_add_faction_traits = {
	hidden_effect = {
		add_trait = {
			character = RUS_yakov_sverdlov
			slot = political_advisor
			trait = KR_bolshevik_sverdlov
		}
		add_trait = {
			character = RUS_mikhail_frunze
			slot = political_advisor
			trait = KR_bolshevik_frunze
		}
		RUS_gergard_zeller = {
			remove_trait = { slot = political_advisor trait = KR_union_advocate }
			add_trait = { slot = political_advisor trait = KR_determined_democrat }
			add_trait = { slot = political_advisor trait = KR_sds_zeller }
		}
		add_trait = {
			character = RUS_rafail_abramovich
			slot = political_advisor
			trait = KR_vst_right_abramovich
		}
		add_trait = {
			character = RUS_aleksandr_finn_yenotayevsky
			slot = political_advisor
			trait = KR_vst_right_finn_yenotayevsky
		}
		add_trait = {
			character = RUS_fyodor_dan
			slot = second_in_command
			trait = KR_vst_right_dan
		}
		add_trait = {
			character = RUS_sergey_kirov
			slot = political_advisor
			trait = KR_vst_right_kirov
		}
		add_trait = {
			character = RUS_sergey_kirov
			slot = second_in_command
			trait = KR_vst_right_kirov
		}
		add_trait = {
			character = RUS_daniil_sulimov
			slot = second_in_command
			trait = KR_vst_centre_sulimov
		}
		add_trait = {
			character = RUS_vladimir_shatov
			slot = political_advisor
			trait = KR_vst_centre_shatov
		}
		add_trait = {
			character = RUS_stanislav_strumilin
			slot = political_advisor
			trait = KR_vst_centre_strumilin
		}
		add_trait = {
			character = RUS_grigory_maksimov
			slot = second_in_command
			trait = KR_vst_centre_maksimov
		}
		add_trait = {
			character = RUS_aleksandr_shlyapnikov
			slot = political_advisor
			trait = KR_vst_centre_shlyapnikov
		}
		add_trait = {
			character = RUS_aleksandra_kollontay
			slot = political_advisor
			trait = KR_vst_centre_kollontay
		}
		add_trait = {
			character = RUS_vladimir_levitsky
			slot = second_in_command
			trait = KR_vst_centre_levitsky
		}
		add_trait = {
			character = RUS_mikhail_tomsky
			slot = political_advisor
			trait = KR_vst_centre_tomsky
		}
		add_trait = {
			character = RUS_lev_kamenev
			slot = second_in_command
			trait = KR_vst_left_kamenev
		}
		add_trait = {
			character = RUS_lev_kamenev
			slot = political_advisor
			trait = KR_vst_left_kamenev
		}
		add_trait = {
			character = RUS_grigory_zinovyev
			slot = second_in_command
			trait = KR_vst_left_zinovyev
		}
		add_trait = {
			character = RUS_sergey_medvedev
			slot = political_advisor
			trait = KR_vst_left_medvedev
		}
		add_trait = {
			character = RUS_sergey_syrtsov
			slot = political_advisor
			trait = KR_vst_left_syrtsov
		}
		add_trait = {
			character = RUS_ivan_gronsky
			slot = political_advisor
			trait = KR_vst_left_gronsky
		}
		add_trait = {
			character = RUS_yakov_blyumkin
			slot = political_advisor
			trait = KR_sr_blyumkin
		}
		add_trait = {
			character = RUS_yevgeny_sattel
			slot = political_advisor
			trait = KR_sr_sattel
		}
		add_trait = {
			character = RUS_isaak_steinberg
			slot = political_advisor
			trait = KR_sr_steinberg
		}
		add_trait = {
			character = RUS_isaak_steinberg
			slot = second_in_command
			trait = KR_sr_steinberg
		}
		add_trait = {
			character = RUS_ilya_mayorov
			slot = political_advisor
			trait = KR_spiridonist_mayorov
		}
		add_trait = {
			character = RUS_nikolay_zdobnov
			slot = political_advisor
			trait = KR_spiridonist_zdobnov
		}
		add_trait = {
			character = RUS_boris_kamkov
			slot = political_advisor
			trait = KR_spiridonist_kamkov
		}
		add_trait = {
			character = RUS_boris_kamkov
			slot = second_in_command
			trait = KR_spiridonist_kamkov
		}
		add_trait = {
			character = RUS_vladimir_karelin
			slot = political_advisor
			trait = KR_spiridonist_karelin
		}
		add_trait = {
			character = RUS_vladimir_karelin
			slot = second_in_command
			trait = KR_spiridonist_karelin
		}
		add_trait = {
			character = RUS_aleksandr_elyashevich
			slot = political_advisor
			trait = KR_spiridonist_elyashevich
		}
		add_trait = {
			character = RUS_aleksey_ustinov
			slot = second_in_command
			trait = KR_maximalist_ustinov
		}
		add_trait = {
			character = RUS_irina_kakhovskaya
			slot = political_advisor
			trait = KR_maximalist_kakhovskaya
		}
		add_trait = {
			character = RUS_andrey_kolegayev
			slot = political_advisor
			trait = KR_maximalist_kolegayev
		}
		add_trait = {
			character = RUS_andrey_kolegayev
			slot = second_in_command
			trait = KR_maximalist_kolegayev
		}
	}
}

RUS_decrease_maximalist_focus_variable = {
	if = {
		limit = { RUS_is_maximalist = yes }
		if = {
			limit = {
				check_variable = { RUS_maximalist_focuses > 0 }
			}
			add_to_variable = { RUS_maximalist_focuses = -1 }
		}
	}
}

RUS_remove_maximalist_influence_ideas = {
	remove_ideas = {
		RUS_maximalist_influence_0
		RUS_maximalist_influence_1
		RUS_maximalist_influence_2
		RUS_maximalist_influence_3
		RUS_maximalist_influence_4
		RUS_maximalist_influence_5
		RUS_maximalist_influence_6
		RUS_maximalist_influence_7
		RUS_maximalist_influence_8
		RUS_maximalist_influence_9
		RUS_maximalist_influence_10
	}
}

RUS_change_maximalist_influence_spirit = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { RUS_maximalist_influence < 10 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_0
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 10
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 20 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_1
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 20
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 30 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_2
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 30
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 40 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_3
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 40
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 50 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_4
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 50
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 60 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_5
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 60
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 70 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_6
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 70
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 80 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_7
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 80
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 90 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_8
		}
		else_if = {
			limit = {
				check_variable = {
					var = RUS_maximalist_influence
					value = 90
					compare = greater_than_or_equals
				}
				check_variable = { RUS_maximalist_influence < 100 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_9
		}
		else_if = {
			limit = {
				check_variable = { RUS_maximalist_influence = 100 }
			}
			RUS_remove_maximalist_influence_ideas = yes
			add_ideas = RUS_maximalist_influence_10
		}
	}
}

RUS_maximalist_influence = {
	if = {
		limit = {
			NOT = { has_government = totalist }
			RUS_is_maximalist = yes
		}
		custom_effect_tooltip = RUS_add_sr_influence_tt
		add_to_variable = { RUS_maximalist_influence = RUS_maximalist_influence_change }
		clamp_variable = {
			var = RUS_maximalist_influence
			min = 0
			max = 100
		}
		RUS_change_maximalist_influence_spirit = yes
	}
}

RUS_maximalist_suspicion = {
	if = {
		limit = {
			NOT = { has_government = totalist }
			RUS_is_maximalist = yes
		}
		custom_effect_tooltip = RUS_add_maximalist_suspicion_tt
		add_to_variable = { RUS_maximalist_suspicion = RUS_maximalist_suspicion_change }
		clamp_variable = {
			var = RUS_maximalist_suspicion
			min = 0
			max = 50
		}
		if = {
			limit = {
				check_variable = { RUS_maximalist_suspicion > 10 }
				check_variable = { RUS_maximalist_suspicion < 50 }
			}
			hidden_effect = {
				country_event = { id = socrus.136 days = 1 }
			}
		}
		if = {
			limit = {
				check_variable = { RUS_maximalist_suspicion > 49 }
			}
			hidden_effect = {
				country_event = { id = socrus.140 days = 1 }
			}
		}
	}
}

RUS_maximalist_bonuses = {
	if = {
		limit = {
			RUS_is_maximalist = yes
			NOT = { has_government = totalist }
		}
		if = {
			limit = {
				check_variable = { RUS_maximalist_focuses = 1 }
			}
			custom_effect_tooltip = RUS_maximalist_influencing_sr_tt
			set_temp_variable = { RUS_maximalist_influence_change = 2 }
			RUS_maximalist_influence = yes
			set_temp_variable = { RUS_maximalist_suspicion_change = 4 }
			RUS_maximalist_suspicion = yes
		}
		else_if = {
			limit = {
				check_variable = { RUS_maximalist_focuses = 2 }
			}
			custom_effect_tooltip = RUS_maximalist_influencing_sr_tt
			set_temp_variable = { RUS_maximalist_influence_change = 4 }
			RUS_maximalist_influence = yes
			set_temp_variable = { RUS_maximalist_suspicion_change = 5 }
			RUS_maximalist_suspicion = yes
		}
		else_if = {
			limit = {
				check_variable = { RUS_maximalist_focuses = 3 }
			}
			custom_effect_tooltip = RUS_maximalist_influencing_sr_tt
			set_temp_variable = { RUS_maximalist_influence_change = 6 }
			RUS_maximalist_influence = yes
			set_temp_variable = { RUS_maximalist_suspicion_change = 7 }
			RUS_maximalist_suspicion = yes
		}
		else_if = {
			limit = {
				check_variable = { RUS_maximalist_focuses = 4 }
			}
			custom_effect_tooltip = RUS_maximalist_influencing_sr_tt
			set_temp_variable = { RUS_maximalist_influence_change = 8 }
			RUS_maximalist_influence = yes
			set_temp_variable = { RUS_maximalist_suspicion_change = 10 }
			RUS_maximalist_suspicion = yes
		}
		else_if = {
			limit = {
				check_variable = { RUS_maximalist_focuses = 5 }
			}
			custom_effect_tooltip = RUS_maximalist_influencing_sr_tt
			set_temp_variable = { RUS_maximalist_influence_change = 10 }
			RUS_maximalist_influence = yes
			set_temp_variable = { RUS_maximalist_suspicion_change = 12 }
			RUS_maximalist_suspicion = yes
		}
		else_if = {
			limit = {
				check_variable = { RUS_maximalist_focuses = 6 }
			}
			custom_effect_tooltip = RUS_maximalist_influencing_sr_tt
			set_temp_variable = { RUS_maximalist_influence_change = 12 }
			RUS_maximalist_influence = yes
			set_temp_variable = { RUS_maximalist_suspicion_change = 13 }
			RUS_maximalist_suspicion = yes
		}
		else_if = {
			limit = {
				check_variable = { RUS_maximalist_focuses > 6 }
			}
			custom_effect_tooltip = RUS_maximalist_influencing_sr_tt
			set_temp_variable = { RUS_maximalist_influence_change = 14 }
			RUS_maximalist_influence = yes
			set_temp_variable = { RUS_maximalist_suspicion_change = 15 }
			RUS_maximalist_suspicion = yes
		}
		RUS_change_maximalist_influence_spirit = yes
	}
}

RUS_decrease_maximalist_focus_variable = {
	if = {
		limit = {
			check_variable = { RUS_maximalist_focuses > 0 }
		}
		add_to_variable = { RUS_maximalist_focuses = -1 }
	}
}

RUS_decrease_factionalism = {
	if = {
		limit = { has_idea = RUS_postwar_factionalism }
		swap_ideas = {
			remove_idea = RUS_postwar_factionalism
			add_idea = RUS_postwar_factionalism_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_postwar_factionalism_2 }
		swap_ideas = {
			remove_idea = RUS_postwar_factionalism_2
			add_idea = RUS_postwar_factionalism_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_postwar_factionalism_3 }
		remove_ideas = RUS_postwar_factionalism_3
	}
}

RUS_clear_zinovyev_minigame = {
	hidden_effect = {
		remove_targeted_decision = { decision = RUS_expel_zinovietes target = ROOT }
		remove_targeted_decision = { decision = RUS_expel_sds target = ROOT }
		remove_targeted_decision = { decision = RUS_ideological_restriction target = ROOT }
		remove_targeted_decision = { decision = RUS_appoint_bolsheviks target = ROOT }
		remove_targeted_decision = { decision = RUS_bolshevik_operation target = ROOT }
		remove_targeted_decision = { decision = RUS_backing_from_esers target = ROOT }
	}
}

RUS_purge_white_generals = {
	every_character = {
		limit = {
			OR = {
				has_trait = RUS_savinkovist_officer
				has_trait = RUS_ice_march_trait
				has_trait = RUS_ice_march_adm_trait
				RUS = { RUS_andrey_shkuro = { is_character = PREV.PREV } }
				RUS = { RUS_aleksandr_kazakov = { is_character = PREV.PREV } }
				RUS = { RUS_yakov_slashchyov = { is_character = PREV.PREV } }
				RUS = { RUS_aleksandr_rodzyanko = { is_character = PREV.PREV } }
				RUS = { RUS_pyotr_krasnov = { is_character = PREV.PREV } }
				RUS = { RUS_nikolay_zuyev = { is_character = PREV.PREV } }
				RUS = { RUS_pyotr_glazenap = { is_character = PREV.PREV } }
				RUS = { RUS_nikolay_sakharov = { is_character = PREV.PREV } }
				RUS = { RUS_nikolay_golovin = { is_character = PREV.PREV } }
				RUS = { RUS_yevgeny_messner = { is_character = PREV.PREV } }
				RUS = { RUS_aleksandr_bubnov = { is_character = PREV.PREV } }
				RUS = { RUS_mikhail_shishmaryov = { is_character = PREV.PREV } }
				RUS = { RUS_vyacheslav_tkachyov = { is_character = PREV.PREV } }
				RUS = { RUS_max_reyter = { is_character = PREV.PREV } }
				RUS = { RUS_anatoly_pepelyaev = { is_character = PREV.PREV } }
			}
		}
		retire = yes
	}
}
RUS_fix_army_soc = {
	if = {
		limit = { has_idea = RUS_white_army_red_baron }
		swap_ideas = {
			remove_idea = RUS_white_army_red_baron
			add_idea = RUS_lack_of_officers
		}
	}
	else_if = {
		limit = { has_idea = RUS_lack_of_officers }
		swap_ideas = {
			remove_idea = RUS_lack_of_officers
			add_idea = RUS_lack_of_officers_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_lack_of_officers_2 }
		swap_ideas = {
			remove_idea = RUS_lack_of_officers_2
			add_idea = RUS_lack_of_officers_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_lack_of_officers_3 }
		remove_ideas = RUS_lack_of_officers_3
	}
	else = {
		army_experience = 40
	}
}

RUS_decrease_antisoc_resistance = {
	if = {
		limit = {
			has_idea = RUS_anti_socialist_resistance_1
			OR = {
				has_government = radical_socialist
				RUS_VST_right = yes
			}
		}
		remove_ideas = RUS_anti_socialist_resistance_1
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_2 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_2
			add_idea = RUS_anti_socialist_resistance_1
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_3 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_3
			add_idea = RUS_anti_socialist_resistance_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_4 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_4
			add_idea = RUS_anti_socialist_resistance_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_5 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_5
			add_idea = RUS_anti_socialist_resistance_4
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_6 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_6
			add_idea = RUS_anti_socialist_resistance_5
		}
	}
}
RUS_increase_antisoc_resistance = {
	if = {
		limit = { has_idea = RUS_anti_socialist_resistance_1 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_1
			add_idea = RUS_anti_socialist_resistance_2
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_2 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_2
			add_idea = RUS_anti_socialist_resistance_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_3 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_3
			add_idea = RUS_anti_socialist_resistance_4
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_4 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_4
			add_idea = RUS_anti_socialist_resistance_5
		}
	}
	else_if = {
		limit = { has_idea = RUS_anti_socialist_resistance_5 }
		swap_ideas = {
			remove_idea = RUS_anti_socialist_resistance_5
			add_idea = RUS_anti_socialist_resistance_6
		}
	}
	else = {
		hidden_effect = {
			country_event = socrus.75
		}
	}
}

RUS_VST_party_check = {
	if = {
		limit = {
			RUS_VST = yes
			NOT = {
				has_idea = RUS_vst_party_streamlined_idea
			}
		}
		if = {
			limit = {
				has_idea = RUS_vst_party_factionalism_idea
				OR = {
					AND = {
						RUS_VST_centre = yes
						check_variable = { vst_centre_unity > 4 }
						OR = {
							check_variable = { vst_right_var > 6 }
							has_country_flag = RUS_VST_right_revolt
						}
						OR = {
							check_variable = { vst_left_var > 6 }
							has_country_flag = RUS_VST_left_revolt
						}
					}
					AND = {
						RUS_VST_right = yes
						check_variable = { vst_centre_var > 6 }
					}
					AND = {
						RUS_VST_left = yes
						check_variable = { vst_centre_var > 6 }
					}
				}
			}
			#custom_effect_tooltip = RUS_VST_more_united_tt
			hidden_effect = {
				swap_ideas = {
					remove_idea = RUS_vst_party_factionalism_idea
					add_idea = RUS_vst_party_unity_idea
				}
			}
		}
		else_if = {
			limit = {
				has_idea = RUS_vst_party_unity_idea
				OR = {
					AND = {
						RUS_VST_centre = no
						check_variable = { vst_centre_var < 7 }
					}
					AND = {
						RUS_VST_right = no
						NOT = { has_country_flag = RUS_VST_right_revolt }
						check_variable = { vst_right_var < 7 }
					}
					AND = {
						RUS_VST_left = no
						NOT = { has_country_flag = RUS_VST_left_revolt }
						check_variable = { vst_left_var < 7 }
					}
					AND = {
						RUS_VST_centre = yes
						check_variable = { vst_centre_unity < 5 }
					}
				}
			}
			#custom_effect_tooltip = RUS_VST_less_united_tt
			hidden_effect = {
				swap_ideas = {
					remove_idea = RUS_vst_party_unity_idea
					add_idea = RUS_vst_party_factionalism_idea
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				has_idea = RUS_vst_party_unity_idea
				has_idea = RUS_vst_party_factionalism_idea
			}
		}
		set_variable = { vst_popularity_var = 1 }
		#Will be maximum of 0.41 for maximum Levitsky, and maximum of 0.17 for best 2-wing coalition
		if = {
			limit = { RUS_VST_centre = yes }
			add_to_variable = { vst_popularity_var = vst_centre_unity }
			multiply_variable = { vst_popularity_var = 1.5 } #Increase effect of VST centre unity by 50%
		}
		else = {
			add_to_variable = { vst_popularity_var = vst_centre_var }
			### Instead of centre unity, give left/right fixed mediocre unity
			add_to_variable = { vst_popularity_var = 6 }
		}
		if = {
			limit = { has_completed_focus = RUS_social_solidarity }
			add_to_variable = { vst_popularity_var = 10 }
		}
		if = {
			limit = {
				RUS_VST_right = no
				NOT = { has_country_flag = RUS_VST_right_revolt }
			}
			add_to_variable = { vst_popularity_var = vst_right_var }
		}
		if = {
			limit = {
				RUS_VST_left = no
				NOT = { has_country_flag = RUS_VST_left_revolt }
			}
			add_to_variable = { vst_popularity_var = vst_left_var }
		}
		if = {
			limit = {
				has_country_leader = { character = RUS_vladimir_levitsky }
				has_idea = RUS_vst_party_unity_idea
			}
			divide_variable = { vst_popularity_var = 100 }
		}
		else = {
			divide_variable = { vst_popularity_var = 200 }
		}
	}
	force_update_dynamic_modifier = yes
}

RUS_streamline_VST = {
	if = {
		limit = { has_idea = RUS_vst_party_unity_idea }
		swap_ideas = {
			remove_idea = RUS_vst_party_unity_idea
			add_idea = RUS_vst_party_streamlined_idea
		}
	}
	else_if = {
		limit = { has_idea = RUS_vst_party_factionalism_idea }
		swap_ideas = {
			remove_idea = RUS_vst_party_factionalism_idea
			add_idea = RUS_vst_party_streamlined_idea
		}
	}
}

RUS_decrease_VST_left_radicalism = {
	if = {
		limit = {
			RUS_VST_left = yes
			check_variable = { vst_left_radicalism > 0 }
			has_country_flag = RUS_dvoika_minigame
			NOT = {
				has_country_leader = { character = RUS_grigory_zinovyev }
				has_completed_focus = RUS_technocratic_syndicalism
				has_completed_focus = RUS_preserve_revolution_within
			}
		}
		custom_effect_tooltip = RUS_decrease_VST_left_radicalism_tt
		subtract_from_variable = { vst_left_radicalism = 1 }
		clamp_variable = { var = vst_left_radicalism min = 0 max = 10 }
	}
}

RUS_increase_VST_left_radicalism = {
	if = {
		limit = {
			RUS_VST_left = yes
			check_variable = { vst_left_radicalism < 8 }
			NOT = {
				has_country_leader = { character = RUS_grigory_zinovyev }
				has_completed_focus = RUS_technocratic_syndicalism
				has_completed_focus = RUS_preserve_revolution_within
			}
			has_country_flag = RUS_dvoika_minigame
		}
		custom_effect_tooltip = RUS_increase_VST_left_radicalism_tt
		add_to_variable = { vst_left_radicalism = 1 }
		clamp_variable = { var = vst_left_radicalism min = 0 max = 10 }
	}
	else_if = {
		limit = {
			RUS_VST_left = yes
			check_variable = { vst_left_radicalism = 8 }
			NOT = {
				has_country_leader = { character = RUS_grigory_zinovyev }
				has_completed_focus = RUS_technocratic_syndicalism
				has_completed_focus = RUS_preserve_revolution_within
			}
			NOT = { has_country_flag = RUS_radicalism_postponed_flag }
			has_country_flag = RUS_dvoika_minigame
		}
		custom_effect_tooltip = RUS_increase_VST_left_radicalism_warning_tt
		add_to_variable = { vst_left_radicalism = 1 }
		clamp_variable = { var = vst_left_radicalism min = 0 max = 10 }
		hidden_effect = {
			country_event = socrus.339
		}
	}
	else_if = {
		limit = {
			RUS_VST_left = yes
			check_variable = { vst_left_radicalism = 10 }
			NOT = {
				has_country_leader = { character = RUS_grigory_zinovyev }
				has_completed_focus = RUS_technocratic_syndicalism
				has_completed_focus = RUS_preserve_revolution_within
			}
			has_country_flag = RUS_dvoika_minigame
			has_country_flag = RUS_radicalism_postponed_flag
		}
		custom_effect_tooltip = RUS_increase_VST_left_radicalism_warning_tt
		hidden_effect = {
			RUS_grigory_zinovyev = { unit_leader_event = socrus.329 }
		}
	}
}

RUS_convert_radicalism_to_totalist_popularity = {
	clr_country_flag = RUS_dvoika_minigame
	if = {
		limit = {
			has_country_flag = RUS_radicalism_postponed_flag
		}
		clr_country_flag = RUS_radicalism_postponed_flag
	}
	set_temp_variable = { current_vst_left_radicalism = vst_left_radicalism }
	multiply_temp_variable = {
		var = current_vst_left_radicalism
		value = 0.02
	}
	custom_effect_tooltip = RUS_effects_from_radicalism_tt
	add_popularity = {
		ideology = totalist
		popularity = current_vst_left_radicalism
	}
}

#Use set_temp_variable = { RUS_relation_change = 1 }
RUS_VST_centre_relation = {
	if = {
		limit = {
			RUS_VST = yes
			RUS_VST_centre = no
			NOT = { has_country_flag = RUS_VST_centre_revolt }
		}
		add_to_variable = {
			var = vst_centre_var
			value = RUS_relation_change
			tooltip = RUS_change_vst_centre_tt
		}
		clamp_variable = { var = vst_centre_var min = 0 max = 10 }
		if = {
			limit = {
				RUS_VST_centre = no
				NOT = { has_country_flag = RUS_VST_centre_revolt }
				check_variable = { vst_centre_var < 1 }
				has_completed_focus = RUS_russian_congress
			}
			hidden_effect = { country_event = { id = socrus.362 days = 3 } }
		}
		RUS_VST_party_check = yes
	}
}
RUS_VST_right_relation = {
	if = {
		limit = {
			RUS_VST = yes
			RUS_VST_right = no
			NOT = { has_country_flag = RUS_VST_right_revolt }
		}
		add_to_variable = {
			var = vst_right_var
			value = RUS_relation_change
			tooltip = RUS_change_vst_right_tt
		}
		clamp_variable = { var = vst_right_var min = 0 max = 10 }
		if = {
			limit = {
				NOT = { has_country_flag = RUS_VST_right_revolt }
				check_variable = { vst_right_var < 1 }
				has_completed_focus = RUS_russian_congress
			}
			hidden_effect = { country_event = { id = socrus.353 days = 3 } }
		}
		RUS_VST_party_check = yes
	}
}
RUS_VST_left_relation = {
	if = {
		limit = {
			RUS_VST = yes
			RUS_VST_left = no
			NOT = { has_country_flag = RUS_VST_left_revolt }
		}
		add_to_variable = {
			var = vst_left_var
			value = RUS_relation_change
			tooltip = RUS_change_vst_left_tt
		}
		clamp_variable = { var = vst_left_var min = 0 max = 10 }
		if = {
			limit = {
				NOT = { has_country_flag = RUS_VST_left_revolt }
				check_variable = { vst_left_var < 1 }
				has_completed_focus = RUS_russian_congress
			}
			hidden_effect = { country_event = { id = socrus.352 days = 3 } }
		}
		RUS_VST_party_check = yes
	}
}
RUS_PSR_relation = {
	if = {
		limit = { RUS_VST = yes }
		add_to_variable = {
			var = sr_var
			value = RUS_relation_change
			tooltip = RUS_change_sr_tt
		}
		clamp_variable = { var = sr_var min = 0 max = 10 }
		if = {
			limit = {
				check_variable = { sr_var < 1 }
				is_in_coalition_with_radical_socialist = yes
				has_completed_focus = RUS_russian_congress
			}
			hidden_effect = { country_event = { id = socrus.69 days = 3 } }
		}
		else_if = { #Restore coalition if opinions are high
			limit = {
				check_variable = { sr_var > 5 }
				is_in_coalition_with_radical_socialist = no
				NOT = { has_government = totalist }
			}
			set_temp_variable = { coalition_partner_var = token:radical_socialist }
			add_to_coalition = yes
		}
		else_if = {
			limit = { check_variable = { sr_var < 3 } }
			hidden_effect = { country_event = { id = socrus.70 days = 3 } }
		}
		else_if = {
			limit = {
				check_variable = { sr_var > 9 }
				is_in_coalition_with_radical_socialist = yes
			}
			hidden_effect = { country_event = { id = socrus.71 days = 3 } }
		}
		else_if = {
			limit = {
				check_variable = { sr_var < 1 }
				is_in_coalition_with_radical_socialist = no
				NOT = {
					has_government = totalist
					has_war_with = GER
				}
				country_exists = GER
			}
			add_stability = -0.05
		}
	}
}
RUS_SDS_relation = {
	if = {
		limit = {
			RUS_VST = yes
			NOT = { has_country_flag = RUS_purged_social_democrats }
		}
		add_to_variable = {
			var = sds_var
			value = RUS_relation_change
			tooltip = RUS_change_sds_tt
		}
		clamp_variable = { var = sds_var min = 0 max = 10 }
		if = {
			limit = {
				check_variable = { sds_var < 1 }
				is_in_coalition_with_social_democrat = yes
				has_completed_focus = RUS_russian_congress
			}
			hidden_effect = { country_event = { id = socrus.65 days = 3 } }
		}
		if = {
			limit = {
				check_variable = { sds_var > 4 }
				is_in_coalition_with_social_democrat = no
				has_country_flag = RUS_SDS_left_coalition
				has_completed_focus = RUS_russian_congress
			}
			hidden_effect = { country_event = { id = socrus.66 days = 3 } }
		}
	}
}
RUS_RKP_relation = {
	if = {
		limit = {
			RUS_VST = yes
			NOT = {
				has_country_flag = RUS_purged_bolsheviks
				has_country_flag = RUS_rkp_absorbed_by_vst
			}
		}
		add_to_variable = {
			var = rkp_var
			value = RUS_relation_change
			tooltip = RUS_change_bolshevik_tt
		}
		clamp_variable = { var = rkp_var min = 0 max = 10 }
		if = {
			limit = {
				check_variable = { rkp_var < 1 }
				is_in_coalition_with_totalist = yes
			}
			hidden_effect = { country_event = { id = socrus.67 days = 3 } }
		}
		if = {
			limit = {
				check_variable = { rkp_var > 4 }
				is_in_coalition_with_totalist = no
			}
			hidden_effect = { country_event = { id = socrus.68 days = 3 } }
		}
	}
}

RUS_decrease_VST_centre_unity = {
	if = {
		limit = { RUS_VST_centre = yes }
		custom_effect_tooltip = RUS_decreases_VST_centre_unity_tt
		subtract_from_variable = { vst_centre_unity = 1 }
		clamp_variable = { var = vst_centre_unity min = 0 max = 10 }
		if = {
			limit = { check_variable = { vst_centre_unity < 4 } }
			custom_effect_tooltip = RUS_VST_centre_falling_warning_tt
		}
		else_if = {
			limit = { check_variable = { vst_centre_unity < 1 } }
			set_country_flag = RUS_VST_Centre_fell_flag
			country_event = { id = socrus.336 days = 14 }
		}
	}
}

RUS_increase_VST_centre_unity = {
	if = {
		limit = {
			RUS_VST_centre = yes
			check_variable = { vst_centre_unity < 10 }
		}
		custom_effect_tooltip = RUS_increases_VST_centre_unity_tt
		add_to_variable = { vst_centre_unity = 1 }
		clamp_variable = { var = vst_centre_unity min = 0 max = 10 }
	}
}

RUS_democratic_bloc_event_chain_finish = {
	if = {
		limit = {
			has_country_flag = RUS_vst_right_agree
			NOT = {
				has_country_flag = RUS_sds_agree
				has_country_flag = RUS_anarchists_agree
			}
		}
		add_ideas = RUS_democratic_bloc_1
	}
	else_if = {
		limit = {
			has_country_flag = RUS_levitsky_agree
			NOT = {
				has_country_flag = RUS_sds_agree
				has_country_flag = RUS_anarchists_agree
			}
		}
		add_ideas = RUS_democratic_bloc_2
	}
	else_if = {
		limit = {
			has_country_flag = RUS_vst_right_agree
			has_country_flag = RUS_sds_agree
			NOT = {
				has_country_flag = RUS_anarchists_agree
			}
		}
		add_ideas = RUS_democratic_bloc_3
	}
	else_if = {
		limit = {
			has_country_flag = RUS_levitsky_agree
			has_country_flag = RUS_sds_agree
			NOT = {
				has_country_flag = RUS_anarchists_agree
			}
		}
		add_ideas = RUS_democratic_bloc_4
	}
	else_if = {
		limit = {
			has_country_flag = RUS_vst_right_agree
			has_country_flag = RUS_sds_agree
			has_country_flag = RUS_anarchists_agree
		}
		add_ideas = RUS_democratic_bloc_5
	}
	else_if = {
		limit = {
			has_country_flag = RUS_levitsky_agree
			has_country_flag = RUS_sds_agree
			has_country_flag = RUS_anarchists_agree
		}
		add_ideas = RUS_democratic_bloc_6
	}
	else_if = {
		limit = {
			has_country_flag = RUS_vst_right_agree
			has_country_flag = RUS_anarchists_agree
			NOT = {
				has_country_flag = RUS_vst_right_agree
			}
		}
		add_ideas = RUS_democratic_bloc_7
	}
	else_if = {
		limit = {
			has_country_flag = RUS_levitsky_agree
			has_country_flag = RUS_anarchists_agree
			NOT = {
				has_country_flag = RUS_sds_agree
			}
		}
		add_ideas = RUS_democratic_bloc_8
	}
	else_if = {
		limit = {
			has_country_flag = RUS_sds_agree
			NOT = {
				has_country_flag = RUS_vst_right_agree
				has_country_flag = RUS_levitsky_agree
				has_country_flag = RUS_anarchists_agree
			}
		}
		add_ideas = RUS_democratic_bloc_9
	}
	else_if = {
		limit = {
			has_country_flag = RUS_sds_agree
			has_country_flag = RUS_anarchists_agree
			NOT = {
				has_country_flag = RUS_vst_right_agree
				has_country_flag = RUS_levitsky_agree
			}
		}
		add_ideas = RUS_democratic_bloc_10
	}
	else_if = {
		limit = {
			has_country_flag = RUS_anarchists_agree
			NOT = {
				has_country_flag = RUS_vst_right_agree
				has_country_flag = RUS_levitsky_agree
				has_country_flag = RUS_sds_agree
			}
		}
		add_ideas = RUS_democratic_bloc_9
	}
}

RUS_enable_union_integration = {
	custom_effect_tooltip = union_republics_enable_integration_tt
	hidden_effect = {
		MNR = { enable_country_integration_50_compliance = yes }
		UKR = { enable_country_integration_50_compliance = yes }
		BLR = { enable_country_integration_50_compliance = yes }
		KAZ = { enable_country_integration_50_compliance = yes }
		GEO = { enable_country_integration_50_compliance = yes }
		ARM = { enable_country_integration_50_compliance = yes }
		AZR = { enable_country_integration_50_compliance = yes }
		LIT = { enable_country_integration_50_compliance = yes }
		LAT = { enable_country_integration_50_compliance = yes }
		EST = { enable_country_integration_50_compliance = yes }
		BAT = { enable_country_integration_50_compliance = yes }
		KHI = { enable_country_integration_50_compliance = yes }
		TRK = { enable_country_integration_50_compliance = yes }
		BUK = { enable_country_integration_50_compliance = yes }
		91 = { enable_state_integration_50_compliance = yes } #Lwow
		89 = { enable_state_integration_50_compliance = yes } #Stanislawow
		1088 = { enable_state_integration_50_compliance = yes } #Chelm
		329 = { enable_state_integration_50_compliance = yes } #Tuva
		97 = { enable_state_integration_50_compliance = yes } #Bialystok
		73 = { enable_state_integration_50_compliance = yes } #Transcarpathia
		78 = { enable_state_integration_80_compliance = yes } #Bessarabia
		80 = { enable_state_integration_80_compliance = yes } #Cernauti
	}
}

RUS_add_union_autonomies = {
	every_owned_state = {
		limit = {
			OR = {
				is_belarus = yes
				state = 97 #Bialystok
			}
		}
		set_state_flag = belarus_slr
		add_dynamic_modifier = { modifier = RUS_belarus_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = {
			OR = {
				is_ukraine = yes
				state = 78 #Bessarabia
			}
		}
		set_state_flag = ukraine_slr
		add_dynamic_modifier = { modifier = RUS_ukraine_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = { is_lithuania = yes }
		set_state_flag = lithuanian_slr
		add_dynamic_modifier = { modifier = RUS_lithuania_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = { is_estonia = yes }
		set_state_flag = estonian_slr
		add_dynamic_modifier = { modifier = RUS_estonia_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = { is_latvia = yes }
		set_state_flag = latvian_slr
		add_dynamic_modifier = { modifier = RUS_latvia_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = { is_southern_central_asia = yes }
		set_state_flag = turkestan_slr
		add_dynamic_modifier = { modifier = RUS_TRK_modifier }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = { is_alash = yes }
		set_state_flag = kazakh_slr
		add_dynamic_modifier = { modifier = RUS_CA_modifier }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = {
			OR = {
				is_georgia = yes
				state = 1001 #Lazistan
			}
		}
		set_state_flag = georgian_slr
		add_dynamic_modifier = { modifier = RUS_georgia_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = { is_armenia = yes }
		set_state_flag = armenian_slr
		add_dynamic_modifier = { modifier = RUS_armenia_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = {
			is_azerbaijan = yes
			is_armenia = no
		}
		set_state_flag = azerbaijan_slr
		add_dynamic_modifier = { modifier = RUS_azerbaijan_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
	every_owned_state = {
		limit = { is_mountain_republic = yes }
		set_state_flag = north_caucasus_state
		add_dynamic_modifier = { modifier = RUS_oskab_modifier_autonomy }
		add_claim_of_ROOT = yes
	}
}

RUS_enable_mixed_faction = {
	custom_effect_tooltip = RUS_expand_soc_faction_tt
	hidden_effect = {
		every_other_country = {
			limit = {
				OR = {
					has_left_democratic_government = yes
					has_socialist_government = yes
				}
				NOT = {
					is_monarchy = yes
					has_government = totalist
					is_in_faction = yes
					is_subject = yes
					has_war = yes
				}
				OR = {
					is_in_europe = yes
					is_in_asia = yes
					is_in_middle_east = yes
					is_in_north_africa = yes
				}
			}
			ROOT = {
				activate_targeted_decision = { decision = RUS_invite_country_soc target = PREV }
			}
		}
	}
}

# requires a temp variable RUS_influence_change
RUS_change_german_economic_influence = {
	if = {
		limit = { has_variable = RUS.RUS_german_economic_influence }
		set_temp_variable = { RUS_new_influence_value = RUS.RUS_german_economic_influence }
		add_to_temp_variable = { RUS_new_influence_value = RUS_influence_change }

		# avoid going < 0 or > 10
		clamp_temp_variable = {
			var = RUS_new_influence_value
			min = 0
			max = 10
		}

		if = {
			limit = { check_variable = { RUS_new_influence_value < 1 } }
			RUS = { RUS_remove_german_economic_influence = yes }
		}
		else_if = {
			limit = {
				NOT = { check_variable = { RUS_new_influence_value = RUS.RUS_german_economic_influence } }
			}
			if = {
				limit = { tag = RUS }
				custom_effect_tooltip = RUS_economy_influence_tt
			}
			else_if = {
				limit = { tag = GER }
				custom_effect_tooltip = RUS_GER_economy_influence_tt
			}
			hidden_effect = {
				RUS = {
					meta_effect = {
						text = {
							remove_ideas = RUS_german_economic_influence_[OLD_LEVEL]
							add_ideas = RUS_german_economic_influence_[NEW_LEVEL]
						}
						OLD_LEVEL = "[?RUS_german_economic_influence]"
						NEW_LEVEL = "[?RUS_new_influence_value]"
					}
				}
			}
		}
	}
}

RUS_remove_german_economic_influence = {
	country_event = { id = russia.405 } #German influence removed from Russia
}

RUS_fire_economy_event = {
	hidden_effect = {
		random_list = {
			20 = {
				country_event = russia.412 #Offer from the German Business Elite
			}
			30 = {
				modifier = {
					has_country_flag = RUS_business_flight
					factor = 0
				}
				country_event = russia.407 #Business Elites Flee Russia
			}
			20 = {
				country_event = russia.409 #The New Rich
			}
			10 = {
				modifier = {
					check_variable = { RUS.RUS_german_economic_influence < 5 }
					factor = 2
				}
				country_event = russia.410 #State Corporation Dividens
			}
			10 = {
				modifier = {
					check_variable = { RUS.RUS_german_economic_influence > 5 }
					factor = 3
				}
				country_event = russia.411  #Supply Chain Disruptions
			}
		}
	}
}

RUS_check_voskhod_events = {
	hidden_effect = {
		if = {
			limit = { has_country_flag = RUS_voskhod_active }
			if = {
				limit = {
					check_variable = { RUS_completed_voskhod_projects > 5 }
				}
				country_event = { id = russia.283 days = 3 random_days = 4 } #Camp Conditions Cause Concern
			}
			else_if = {
				limit = {
					check_variable = { RUS_completed_voskhod_projects > 1 }
				}
				country_event = { id = russia.281 days = 3 random_days = 4 } # #First Project Completed
			}
		}
	}
}

RUS_check_voskhod_recruit = {
	if = {
		limit = { has_country_flag = RUS_voskhod_active }
		hidden_effect = {
			var:army_chief = {
				unit_leader_event = russia.282
			}
		}
		if = {
			limit = {
				has_country_flag = RUS_military_object_conscript
				check_variable = { RUS_voskhod_cap > 250000 }
			}
			set_temp_variable = { RUS_anger_change = 1 }
			RUS_change_military_anger = yes
		}
	}
}

RUS_disable_voskhod = {
	clr_country_flag = RUS_voskhod_active
	divide_variable = { RUS_voskhod_total_mp = 2 }
	add_manpower = RUS_voskhod_total_mp
	clear_variable = RUS_voskhod_total_mp
	clear_variable = RUS_voskhod_cap
	remove_targeted_decision = { target = ROOT decision = RUS_increase_funding }
	remove_targeted_decision = { target = ROOT decision = RUS_utilise_army }
	remove_targeted_decision = { target = ROOT decision = RUS_RASOLKO }
	remove_targeted_decision = { target = 516 decision = RUS_norilsk_mining_and_metallurgy }
	remove_targeted_decision = { target = 574 decision = RUS_far_north_construction_trust }
	remove_targeted_decision = { target = 653 decision = RUS_ural_wagon_factory }
	remove_targeted_decision = { target = 562 decision = RUS_magadan_gold_mining }
	remove_targeted_decision = { target = 560 decision = RUS_permsk_shipbuilding_plant }
	remove_targeted_decision = { target = 215 decision = RUS_belomorkanal }
	remove_targeted_decision = { target = 247 decision = RUS_moscow_volga_canal }
	remove_targeted_decision = { target = 722 decision = RUS_pechenganikel_mining_works }
	remove_targeted_decision = { target = 397 decision = RUS_vorkuta_mining_centre }
	remove_targeted_decision = { target = 404 decision = RUS_artel_gigant }
	remove_targeted_decision = { target = 570 decision = RUS_siberian_township_programme }
	remove_targeted_decision = { target = 233 decision = RUS_vladikavkaz_steel }
	remove_targeted_decision = { target = ROOT decision = RUS_end_the_programme }
}

RUS_set_default_industry_costs = {
	set_variable = { RUS_ic_time_60 = 60 } #Normal industry decision time
	set_variable = { RUS_ic_time_120 = 120 } #Long industry decision time
	set_variable = { RUS_ic_cost_low = 20 } #Low industry decision cost
	set_variable = { RUS_ic_cost_med = 40 } #Mid industry decision cost
	set_variable = { RUS_ic_cost_high = 60 } #High industry decision cost
	if = {
		limit = { has_left_democratic_government = yes }
		add_to_variable = { RUS_ic_cost_med = 10 }
		add_to_variable = { RUS_ic_cost_high = 10 }
	}
}

RUS_industry_effect = {
	if = {
		limit = {
			has_government = national_populist
			has_completed_focus = RUS_solidarist_representation
		}
		if = {
			limit = { has_stability < 0.75 }
			add_stability = 0.005
		}
		else = {
			add_popularity = { ideology = national_populist popularity = 0.005 }
		}
	}
	else_if = {
		limit = {
			OR = {
				has_completed_focus = RUS_4_year_plan
				has_completed_focus = RUS_planning_directory
			}
		}
		add_stability = -0.005
	}
	else_if = {
		limit = { has_completed_focus = RUS_new_russian_capitalism }
		add_stability = 0.005
	}
}

RUS_add_guided_democracy = {
	if = {
		limit = { has_idea = RUS_embers_of_democracy }
		swap_ideas = {
			remove_idea = RUS_embers_of_democracy
			add_idea = RUS_guided_democracy
		}
	}
	else_if = {
		limit = { has_idea = RUS_weak_democracy }
		swap_ideas = {
			remove_idea = RUS_weak_democracy
			add_idea = RUS_guided_democracy
		}
	}
	else_if = {
		limit = { has_idea = RUS_unstable_democracy }
		swap_ideas = {
			remove_idea = RUS_unstable_democracy
			add_idea = RUS_guided_democracy
		}
	}
	else_if = {
		limit = { has_idea = RUS_strenghtening_democracy }
		swap_ideas = {
			remove_idea = RUS_strenghtening_democracy
			add_idea = RUS_guided_democracy
		}
	}
	else_if = {
		limit = { has_idea = RUS_strong_democracy }
		swap_ideas = {
			remove_idea = RUS_strong_democracy
			add_idea = RUS_guided_democracy
		}
	}
	else_if = {
		limit = { has_idea = RUS_genuine_democracy }
		swap_ideas = {
			remove_idea = RUS_genuine_democracy
			add_idea = RUS_guided_democracy
		}
	}
	else = { #Only for GUI
		effect_tooltip = { add_ideas = RUS_guided_democracy }
	}

}

RUS_eurasianist_effect = {
	if = {
		limit = {
			has_completed_focus = RUS_moscow_economic_council
			NOT = { has_country_flag = RUS_activated_eurasian_decisions }
		}
		custom_effect_tooltip = RUS_savitsky_tt
		hidden_effect = {
			activate_targeted_decision = { decision = RUS_invite_to_economic_council target = PRF }
			activate_targeted_decision = { decision = RUS_invite_to_economic_council target = BRM }
			activate_targeted_decision = { decision = RUS_invite_to_economic_council target = AFG }
			activate_targeted_decision = { decision = RUS_invite_to_economic_council target = PER }
			activate_targeted_decision = { decision = RUS_invite_to_economic_council target = SIA }
			activate_targeted_decision = { decision = RUS_invite_to_economic_council target = CHN }
			set_country_flag = RUS_activated_eurasian_decisions
		}
	}
	else_if = {
		limit = { NOT = { has_country_flag = RUS_activated_eurasian_decisions } }
		custom_effect_tooltip = RUS_savitsky2_tt
	}
}

RUS_add_CA_unrest = {
	if = {
		limit = { check_variable = { RUS_central_asia_unrest_temp < 0 } }
		custom_effect_tooltip = RUS_decrease_CA_unrest_tt
	}
	else = {
		custom_effect_tooltip = RUS_increase_CA_unrest_tt
	}
	add_to_variable = { RUS_central_asia_unrest = RUS_central_asia_unrest_temp }
	clamp_variable = {
		var = RUS_central_asia_unrest
		min = 0
		max = 20
	}
}

RUS_central_asia_resistance = {
	if = {
		limit = { NOT = { has_dynamic_modifier = { modifier = RUS_central_asia_chaos } } }
		force_enable_resistance = RUS
		hidden_effect = {
			add_dynamic_modifier = { modifier = RUS_central_asia_chaos }
			start_resistance = yes
			add_resistance = 20
		}
	}
}

# Country Scope - fire to form the russian economic treaty
RUS_create_economic_treaty = {
	custom_effect_tooltip = RUS_economic_council_tt
	custom_effect_tooltip = tooltip_white_line
	add_ideas = RUS_moscow_eco_treaty_RUS
	custom_effect_tooltip = RUS_invite_to_economic_council_tt
	hidden_effect = {
		save_global_event_target_as = KR_MEC_leader
		create_economic_sphere = yes
		var:economic_sphere = {
			set_character_name = RUS_default_moscow_treaty
			var:icon = { set_character_name = "GFX_goal_RUS_moscow_economic_council" }
			var:desc = { set_character_name = RUS_default_moscow_treaty_desc }
			set_variable = { red = 0 }
			set_variable = { green = 0.496 }
			set_variable = { blue = 0.055 }
		}
	}
}

# Country Scope - fire to add a country to the economic treaty
RUS_add_to_economic_treaty = {
	custom_effect_tooltip = RUS_add_to_moscow_treaty
	add_ideas = RUS_moscow_eco_treaty_member
	hidden_effect = {
		set_temp_variable = { sphere_target = THIS }
		MEC = {
			add_to_economic_sphere = yes
			remove_opinion_modifier = { target = PREV modifier = KR_disapproves_of_govt }
			remove_opinion_modifier = { target = PREV modifier = KR_hates_govt }
			remove_opinion_modifier = { target = PREV modifier = KR_outraged }
		}
	}
}

# Country Scope - fire when tags leave the economic treaty
RUS_remove_from_economic_treaty = {
	hidden_effect = {
		if = {
			limit = { RUS_is_in_moscow_economic_council = yes }
			remove_ideas = RUS_moscow_eco_treaty_member
			if = {
				limit = { has_idea = RUS_MA_mech_plan }
				remove_ideas = RUS_MA_mech_plan
			}
			if = {
				limit = { has_idea = RUS_MA_navy_plan }
				remove_ideas = RUS_MA_navy_plan
			}
			if = {
				limit = { has_idea = RUS_MA_air_plan }
				remove_ideas = RUS_MA_air_plan
			}
			if = {
				limit = { has_idea = RUS_MA_infra_plan }
				remove_ideas = RUS_MA_infra_plan
			}
			if = {
				limit = { has_idea = RUS_MA_autarky_plan }
				remove_ideas = RUS_MA_autarky_plan
			}
			set_temp_variable = { sphere_target = THIS }
			remove_from_economic_sphere = yes
			if = {
				limit = { exists = yes }
				country_event = rusfor.79
			}
		}
	}
}

# Country Scope - fire to completely dismantle the whole economic sphere
RUS_dismantle_economic_treaty = {
	if = {
		limit = { tag = MEC }
		if = {
			limit = { has_idea = RUS_MA_mech_plan }
			remove_ideas = RUS_MA_mech_plan
		}
		if = {
			limit = { has_idea = RUS_MA_navy_plan }
			remove_ideas = RUS_MA_navy_plan
		}
		if = {
			limit = { has_idea = RUS_MA_air_plan }
			remove_ideas = RUS_MA_air_plan
		}
		if = {
			limit = { has_idea = RUS_MA_infra_plan }
			remove_ideas = RUS_MA_infra_plan
		}
		if = {
			limit = { has_idea = RUS_MA_autarky_plan }
			remove_ideas = RUS_MA_autarky_plan
		}
		every_other_country = {
			RUS_remove_from_economic_treaty = yes
		}
		every_country = { clr_country_flag = RUS_refused_moscow_treaty }
		remove_ideas = RUS_moscow_eco_treaty_RUS
		dismantle_economic_sphere = yes
		clear_global_event_target = KR_MEC_leader
	}
}

RUS_remove_military_plan_ideas = {
	remove_ideas = {
		RUS_stavka_reform
		RUS_golovin_reform_1
		RUS_golovin_reform_2
		RUS_golovin_reform_3
		RUS_golovin_reform_4
		RUS_golovin_reform_5
		RUS_golovin_reform_6
		RUS_denikin_doctrine_1
		RUS_denikin_doctrine_2
		RUS_denikin_doctrine_3
		RUS_denikin_doctrine_4
		RUS_denikin_doctrine_5
		RUS_denikin_doctrine_6
	}
}

RUS_check_coreable_countries = {
	### unlock tag-wide decisions ###
	if = {
		limit = { has_socialist_government = no }
		every_occupied_country = {
			limit = {
				OR = {
					tag = BLR #BLR can be cored by any Russia
					AND = {
						tag = UKR #UKR can be cored by any Russia
						any_of_scopes = {
							array = core_states #exception - do not unlock UKR's decision if RUS only owns the Donbass
							is_owned_by = ROOT
							NOT = {
								state = 227 #Yuzovka
								state = 228 #Starobyelsk
							}
						}
					}
					AND = { #Savinkov can core the Baltics and Caucasus
						ROOT = { has_government = national_populist }
						OR = {
							tag = BAT
							tag = EST
							tag = LAT
							tag = LIT
							tag = ARM
							tag = AZR
							AND = {
								tag = GEO
								ROOT = { owns_state = 230 } #prevents the GEO decision from unlocking by owning only Abkhazia
							}
						}
					}
				}
				any_of_scopes = {
					array = core_states
					is_owned_by = ROOT #must own at least one core of the country, not just control it
				}
			}
			if = {
				limit = { tag = BAT } #workaround - EST and LAT don't count as occupied because of BAT's cores
				ROOT = {
					set_country_flag = RUS_can_core_EST
					set_country_flag = RUS_can_core_LAT
				}
			}
			else = {
				ROOT = { set_country_flag = RUS_can_core_@PREV }
			}
		}
	}

	### then check specific states ###
	if = {
		limit = {
			owns_state = 329
			NOT = { 329 = { is_core_of = ROOT } }
		}
		add_to_array = { RUS_state_integration_small = 329.id } #Tuva
	}
	if = {
		limit = {
			owns_state = 537
			NOT = { 537 = { is_core_of = ROOT } }
		}
		add_to_array = { RUS_state_integration_small = 537.id } #South Sakhalin
	}
	if = {
		limit = {
			owns_state = 146
			NOT = { 146 = { is_core_of = ROOT } }
		}
		add_to_array = { RUS_state_integration_medium = 146.id } #Karelia
	}
	if = {
		limit = {
			owns_state = 1080
			NOT = {
				1080 = { is_core_of = ROOT }
				has_country_flag = RUS_can_core_GEO
			}
		}
		add_to_array = { RUS_state_integration_medium = 1080.id } #Abkhazia
	}
	if = {
		limit = {
			owns_state = 78
			NOT = { 78 = { is_core_of = ROOT } }
		}
		add_to_array = { RUS_state_integration_large = 78.id } #Bessarabia
	}

	### alternative method of coring the Donbass if Russia gained it early ###
	if = {
		limit = {
			owns_state = 227
			NOT = {
				227 = { is_core_of = ROOT }
				has_country_flag = RUS_can_core_UKR
			}
		}
		add_to_array = { RUS_state_integration_large = 227.id } #Yuzovka
	}
	if = {
		limit = {
			owns_state = 228
			NOT = {
				228 = { is_core_of = ROOT }
				has_country_flag = RUS_can_core_UKR
			}
		}
		add_to_array = { RUS_state_integration_large = 228.id } #Starobyelsk
	}
}

RUS_moscow_accord_threat = {
	effect_tooltip = {
		add_named_threat = {
			threat = 4
			name = RUS_moscow_accord_threat
		}
	}
}

RUS_puppet_setup = {
	var:tag_to_release = {
		if = {
			limit = { tag = FER }
			if = {
				limit = { has_character = RUS_vladimir_tolstov }
				RUS_vladimir_tolstov = {
					remove_all_country_leader_roles = yes
					set_nationality = RUS
				}
			}
			drop_cosmetic_tag = yes
			if = {
				limit = { overlord = { tag = JAP } }
				set_politics = {
					ruling_party = paternal_autocrat
					elections_allowed = no
				}
				add_country_leader_role = {
					character = RUS_oi_shigemoto
					promote_leader = yes
					country_leader = {
						desc = RUS_oi_shigemoto_leader_desc
						ideology = paternal_autocrat_subtype
					}
				}
				hidden_effect = {
					set_political_party = {
						ideology = paternal_autocrat
						popularity = 60
					}
					set_party_name = {
						ideology = paternal_autocrat
						name = FER_paternal_autocrat_party_JAP
						long_name = FER_paternal_autocrat_party_JAP_long
					}
				}
				add_ideas = FER_japanese_assistance_1
				give_resource_rights = {
					receiver = JAP
					state = 408 #Vladivostok
				}
				set_capital = { state = 408 } #Vladivostok
			}
			else_if = {
				limit = { has_cosmetic_tag = FER_GU }
				meta_effect = {
					text = {
						RUS = {
							RUS_vladimir_tolstov = {
								set_nationality = PREV.PREV
								add_country_leader_role = {
									country_leader = {
										desc = RUS_vladimir_tolstov_commander_desc
										ideology = [IDEOLOGY]
									}
									promote_leader = yes
								}
							}
						}
					}
					IDEOLOGY = "[?ROOT.current_party_ideology_group.GetTokenKey]_subtype"
				}
			}
			else = {
				RUS_grigory_semyonov = { promote_character = yes }
			}
		}
		else_if = {
			limit = { tag = RSA }
			if = {
				limit = { has_socialist_government = yes }
				RUS_socialist_puppet = yes
			}
			else = {
				RUS_setup_demrus_postwar = yes
			}
			hidden_effect = {
				if = {
					limit = { has_global_flag = RUS_peace_refused_by_player }
					set_stability = 0
					set_war_support = 0
					set_political_power = -500
					set_temp_variable = { ideology_change_var = -40 }
					change_ruling_party_popularity = yes
				}
			}
		}
	}
}

RUS_setup_demrus_postwar = {
	hidden_effect = {
		set_variable = { global.russia = RSA }
		set_country_flag = RUS_lost_wk2
		set_variable = { RUS.coalition_stability = 0.5 }
		load_focus_tree = { tree = Russia_Focus keep_completed = no }
		drop_cosmetic_tag = yes
		RUS_remove_savinkov = yes
		RUS_remove_socrus = yes
		set_capital = {
			state = 219 #Moscow
			remember_old_capital = no
		}
		add_stability = -0.5
		RUS = {
			transfer_technology = yes
			every_character = {
				limit = {
					NOT = {
						has_trait = RUS_savinkovist_officer
						has_trait = RUS_red_army_trait
						is_character = RUS_anton_denikin
						is_character = RUS_yevgeny_miller
						is_character = RUS_aleksandr_kolchak
						is_character = RUS_pyotr_wrangel
						is_character = RUS_mikhail_drozdovsky
						is_character = RUS_pyotr_krasnov
					}
				}
				set_nationality = RSA
			}
			if = {
				limit = {
					country_exists = FER
					has_character = MON_roman_ungern_sternberg
				}
				every_character = {
					limit = {
						OR = {
							MON = { MON_roman_ungern_sternberg = { is_character = PREV.PREV } }
							MON = { MON_mikhail_tornovsky = { is_character = PREV.PREV } }
							MON = { MON_boris_rezukhin = { is_character = PREV.PREV } }
							has_trait = RUS_savinkovist_officer
						}
					}
					set_nationality = FER
				}
			}
		}
		RUS_aleksandr_kulischer = { remove_all_country_leader_roles = yes }
		RUS_ernst_august_kostring = { remove_all_country_leader_roles = yes }
		RUS_sergey_pavlov = { remove_all_country_leader_roles = yes }
		RUS_sergey_chakhotin = { remove_all_country_leader_roles = yes }
		RUS_nikolay_martyanov = { remove_all_country_leader_roles = yes }
		RUS_setup_postwar_parties = yes
		if = {
			limit = {
				has_global_flag = RSA_enabled
				is_ally_with = GER
			}
			RUS_remove_free_russian_army = yes
			RUS_vasily_boldyrev = {
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vasily_boldyrev_leader_desc
						ideology = paternal_autocrat_subtype
						traits = { RUS_marshal_of_old_republic }
					}
					promote_leader = yes
				}
				unit_leader_event = { id = freerus.40 days = 5 } # 3rd Constitutional Asssembly
			}
			add_popularity = { ideology = authoritarian_democrat popularity = -0.5 }
			set_politics = {
				ruling_party = paternal_autocrat
				elections_allowed = yes
			}
			activate_advisor = RUS_nikolay_martyanov_sic
			activate_advisor = RUS_vasily_boldyrev_army_chief
			RUS_aleksandr_verkhovsky = {
				add_advisor_role = {
					advisor = {
						slot = army_chief
						idea_token = RUS_aleksandr_verkhovsky_army_chief
						desc = RUS_aleksandr_verkhovsky_theorist_desc
						traits = { KR_army_chief_drill_2 }
						cost = 150
						can_be_fired = no
					}
				}
			}
			country_event = { id = demrus.38 days = 500 random_days = 200 } #The Chernov Monument
		}
		else_if = {
			limit = {
				OR = {
					overlord = {
						is_monarchy = yes
						has_authoritarian_government = yes
					}
					GER = {
						exists = yes
						GER_is_swr_path = yes
					}
				}
			}
			RUS_create_postwar_monarchy = yes
		}
		else_if = {
			limit = {
				OR = {
					overlord = { has_left_democratic_government = yes }
					GER = {
						exists = yes
						GER_is_du_path = yes
					}
				}
				NOT = { has_completed_focus = RUS_soclibs }
			}
			RUS_remove_monarchy = yes
			RUS_create_postwar_soclib = yes
		}
		else_if = {
			limit = {
				overlord = { has_government = market_liberal }
				NOT = { has_completed_focus = RUS_marlibs }
			}
			RUS_remove_monarchy = yes
			RUS_create_postwar_marlib = yes
		}
		else_if = {
			limit = {
				overlord = { has_government = national_populist }
			}
			RUS_remove_monarchy = yes
			RUS_create_natpop_vonsyatsky = yes
			if = {
				limit = { has_character = RUS_sergey_markov }
				activate_advisor = RUS_sergey_markov_army_chief
			}
			activate_advisor = RUS_vasily_shulgin_sic
			set_temp_variable = { coalition_partner_var = token:paternal_autocrat }
			add_to_coalition = yes
		}
		else = {
			RUS_remove_monarchy = yes
			RUS_create_postwar_soccon = yes
		}

		KAZ = { enable_country_integration_50_compliance = yes }
		TRK = { enable_country_integration_50_compliance = yes }
		KHI = { enable_country_integration_50_compliance = yes }
		BUK = { enable_country_integration_50_compliance = yes }
		FER = { enable_country_integration_50_compliance = yes }

		add_ideas = {
			RUS_weak_democracy
			RSA_rebuilding
			RUS_military_restrictions
			RUS_destroyed_army
			volunteer_only
			free_trade
			civilian_economy
		}

		unlock_national_focus = RUS_evaluate_VVFR
		unlock_national_focus = RUS_inspect_VMFR
		unlock_national_focus = RUS_promote_new_blood
		if = {
			limit = { has_global_flag = RUS_socrus_happened }
			swap_ideas = {
				remove_idea = RUS_post-savinkov_economy
				add_idea = RUS_post-soc_economy
			}
			add_popularity = { ideology = social_democrat popularity = 0.1 }
			add_popularity = { ideology = syndicalist popularity = 0.1 }
			add_popularity = { ideology = radical_socialist popularity = 0.1 }
			add_popularity = { ideology = totalist popularity = 0.05 }
			#set_variable = { RUS_right_anger = 3 }
			#set_variable = { RUS_left_anger = 5 }
		}
		else = {
			add_popularity = { ideology = national_populist popularity = 0.15 }
			add_popularity = { ideology = authoritarian_democrat popularity = 0.1 }
			#set_variable = { RUS_right_anger = 5 }
			#set_variable = { RUS_left_anger = 3 }
		}
		force_update_dynamic_modifier = yes
		activate_targeted_decision = { target = GER decision = RUS_restart_war_against_germany }

		RUS_spawn_postwar_army = yes

		### Remove RSA decisions, will be needed if RSA/RUS are turned into RUS+dynamic
		#RSA = {
		#	remove_targeted_decision = { decision = RSA_recruit_pows target = RUS }
		#	remove_targeted_decision = { decision = RSA_expand_corps target = GER }
		#	remove_targeted_decision = { decision = RSA_lootbox target = GER }
		#	every_state = {
		#		limit = { has_state_flag = RSA_recruitment_state }
		#		ROOT = {
		#			remove_targeted_decision = { decision = RSA_recruit_soldiers target = PREV }
		#		}
		#		clr_state_flag = RSA_recruitment_state
		#	}
		#}
	}
}

RUS_remove_free_russian_army = {
	if = {
		limit = {
			OR = {
				has_idea = RSA_legitimacy_10
				has_idea = RSA_legitimacy_9
			}
		}
		add_stability = 0.15
	}
	else_if = {
		limit = {
			OR = {
				has_idea = RSA_legitimacy_8
				has_idea = RSA_legitimacy_7
			}
		}
		add_stability = 0.1
	}
	else_if = {
		limit = {
			OR = {
				has_idea = RSA_legitimacy_6
				has_idea = RSA_legitimacy_5
			}
		}
		add_stability = 0.05
	}

	remove_ideas = {
		RSA_army_without_state
		RSA_free_russian_government
		RSA_free_russian_government_2
		RSA_anti_socialist_fervor
		RSA_anti_authoritarian_fervor
		RSA_recruit_EE
		RSA_war_industry
		RSA_war_industry_2
		RSA_war_industry_3
		RSA_legitimacy_1
		RSA_legitimacy_2
		RSA_legitimacy_3
		RSA_legitimacy_4
		RSA_legitimacy_5
		RSA_legitimacy_6
		RSA_legitimacy_7
		RSA_legitimacy_9
		RSA_legitimacy_10
	}
	delete_unit_template_and_units = { division_template = "Pekhotnaya Brigada" disband = yes }
	delete_unit_template_and_units = { division_template = "Dobrovolcheskaya Diviziya" disband = yes }
	set_division_template_lock = {
		division_template = "Svobodnaya Mekhanizirovannaya diviziya"
		is_locked = no
	}
}

RUS_setup_postwar_parties = {
	set_party_name = {
		ideology = totalist
		name = RUS_totalist_party
		long_name = RUS_totalist_party_long
	}
	RUS = {
		RUS_yakov_sverdlov = {
			hidden_effect = { set_nationality = PREV.PREV }
			promote_character = { ideology = totalist_subtype }
		}
	}
	set_party_name = {
		ideology = syndicalist
		name = RUS_social_democrat3_party
		long_name = RUS_social_democrat3_party_long
	}
	RUS = {
		RUS_aleksandr_shlyapnikov = {
			hidden_effect = {
				set_nationality = PREV.PREV
				remove_country_leader_role_syndicalist = yes
			}
			add_country_leader_role = {
				country_leader = {
					desc = RUS_aleksandr_shlyapnikov_advisor_desc
					ideology = syndicalist_subtype
					traits = { KR_union_advocate }
				}
				promote_leader = yes
			}
		}
	}
	set_party_name = {
		ideology = radical_socialist
		name = RUS_radical_socialist2_party
		long_name = RUS_radical_socialist2_party_long
	}
	RUS = {
		RUS_boris_kamkov = {
			hidden_effect = { set_nationality = PREV.PREV }
			promote_character = { ideology = radical_socialist_subtype }
		}
	}
	set_party_name = {
		ideology = social_democrat
		name = RSA_social_democrat2_party
		long_name = RSA_social_democrat2_party_long
	}
	RUS = {
		RUS_aleksandr_titov = {
			hidden_effect = { set_nationality = PREV.PREV }
			promote_character = { ideology = social_democrat_subtype }
		}
	}
	set_party_name = {
		ideology = social_liberal
		name = RUS_social_liberal_party
		long_name = RUS_social_liberal_party_long
	}
	RUS = {
		RUS_pitirim_sorokin = {
			hidden_effect = { set_nationality = PREV.PREV }
			promote_character = { ideology = social_liberal_subtype }
		}
	}
	set_party_name = {
		ideology = market_liberal
		name = RUS_market_liberal_party
		long_name = RUS_market_liberal_party_long
	}
	RUS = {
		RUS_nikolay_nekrasov = {
			hidden_effect = {
				set_nationality = PREV.PREV
				remove_country_leader_role_market_liberal = yes
			}
			add_country_leader_role = {
				country_leader = {
					desc = RUS_nikolay_nekrasov_sic_desc
					ideology = market_liberal_subtype
				}
				promote_leader = yes
			}
		}
	}
	set_party_name = {
		ideology = social_conservative
		name = RSA_social_conservative2_party
		long_name = RSA_social_conservative2_party_long_tt
	}
	RUS = {
		RUS_aleksandr_golitsyn = {
			hidden_effect = { set_nationality = PREV.PREV }
			promote_character = { ideology = social_conservative_subtype }
		}
	}
	set_party_name = {
		ideology = authoritarian_democrat
		name = RUS_paternal_autocrat2_party
		long_name = RUS_paternal_autocrat2_party_long
	}
	RUS = {
		RUS_ivan_solonevich = {
			hidden_effect = {
				set_nationality = PREV.PREV
				remove_country_leader_role_authoritarian_democrat = yes
			}
			add_country_leader_role = {
				country_leader = {
					desc = RUS_ivan_solonevich_leader_desc
					ideology = authoritarian_democrat_subtype
				}
				promote_leader = yes
			}
		}
	}
	if = {
		limit = {
			has_global_flag = RSA_enabled
			is_ally_with = GER
		}
		set_party_name = {
			ideology = paternal_autocrat
			name = RUS_paternal_autocrat_party
			long_name = RUS_paternal_autocrat_party_boldyrev_long
		}
		RUS = {
			RUS_vasily_boldyrev = {
				hidden_effect = { set_nationality = PREV.PREV }
				promote_character = { ideology = paternal_autocrat_subtype }
			}
		}
	}
	else = {
		set_party_name = {
			ideology = paternal_autocrat
			name = RUS_authoritarian_democrat_party
			long_name = RUS_authoritarian_democrat_party_long
		}
		RUS = {
			RUS_vasily_shulgin = {
				hidden_effect = {
					set_nationality = PREV.PREV
					remove_country_leader_role_paternal_autocrat = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vasily_shulgin_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}
		}
	}
	set_party_name = {
		ideology = national_populist
		name = RUS_national_populist2_party
		long_name = RUS_national_populist2_party_long
	}
	RUS_create_natpop_vonsyatsky = yes
}

RUS_create_natpop_vonsyatsky = {
	RUS = {
		RUS_anastasy_vonsyatsky = {
			hidden_effect = {
				set_nationality = PREV.PREV
				remove_country_leader_role_national_populist = yes
			}
			add_country_leader_role = {
				country_leader = {
					desc = RUS_anastasy_vonsyatsky_advisor_desc
					ideology = national_populist_subtype
					traits = { KR_flamboyant_brute }
				}
				promote_leader = yes
			}
		}
	}
}

RUS_create_postwar_monarchy = {
	set_politics = {
		ruling_party = social_conservative
		elections_allowed = yes
	}
	complete_national_focus = RUS_democracy_restored
	complete_national_focus = RUS_elections
	complete_national_focus = RUS_soccons
	if = {
		limit = { has_character = RUS_pyotr_wrangel }
		activate_advisor = RUS_pyotr_wrangel_army_chief
	}
	activate_advisor = RUS_georgy_vernadsky_sic
	set_temp_variable = { coalition_partner_var = token:market_liberal }
	add_to_coalition = yes
	set_temp_variable = { coalition_partner_var = token:authoritarian_democrat }
	add_to_coalition = yes
}
RUS_create_postwar_soccon = {
	promote_character = { character = RUS_aleksandr_golitsyn ideology = social_conservative_subtype }
	set_politics = {
		ruling_party = social_conservative
		elections_allowed = yes
	}
	complete_national_focus = RUS_democracy_restored
	complete_national_focus = RUS_elections
	complete_national_focus = RUS_soccons
	if = {
		limit = { has_character = RUS_sergey_markov }
		activate_advisor = RUS_sergey_markov_army_chief
	}
	activate_advisor = RUS_anton_kartashyov_sic
	set_temp_variable = { coalition_partner_var = token:market_liberal }
	add_to_coalition = yes
	set_temp_variable = { coalition_partner_var = token:authoritarian_democrat }
	add_to_coalition = yes
}
RUS_create_postwar_marlib = {
	promote_character = { character = RUS_nikolay_nekrasov ideology = market_liberal_subtype }
	set_politics = {
		ruling_party = market_liberal
		elections_allowed = yes
	}
	complete_national_focus = RUS_democracy_restored
	complete_national_focus = RUS_elections
	complete_national_focus = RUS_marlibs
	if = {
		limit = { has_character = RUS_sergey_markov }
		activate_advisor = RUS_sergey_markov_army_chief
	}
	activate_advisor = RUS_mikhail_kalugin_sic
	set_temp_variable = { coalition_partner_var = token:social_liberal }
	add_to_coalition = yes
}
RUS_create_postwar_soclib = {
	promote_character = { character = RUS_ilya_fondaminsky ideology = social_liberal_subtype }
	set_politics = {
		ruling_party = social_liberal
		elections_allowed = yes
	}
	complete_national_focus = RUS_democracy_restored
	complete_national_focus = RUS_elections
	complete_national_focus = RUS_soclibs
	if = {
		limit = { has_character = RUS_sergey_markov }
		activate_advisor = RUS_sergey_markov_army_chief
	}
	activate_advisor = RUS_nikolay_nekrasov_sic
	set_temp_variable = { coalition_partner_var = token:market_liberal }
	add_to_coalition = yes
}

RUS_socialist_puppet = {
	hidden_effect = {
		set_variable = { global.russia = RSA }
		#set_country_flag = RUS_lost_wk2
		set_variable = { RUS.coalition_stability = 0.5 }
		load_focus_tree = { tree = Russia_Focus keep_completed = no }
		RUS_remove_savinkov = yes
		set_cosmetic_tag = RUS_soc
		set_capital = {
			state = 219 #Moscow
			remember_old_capital = no
		}
		add_stability = -0.5
		RSA = {
			every_character = { retire = yes } #Purge entire RSA character roster
			RUS_restore_bolshevik_exiles = yes
			RUS_promote_socialist_generals = yes
		}
		RUS = {
			transfer_technology = yes
			every_character = {
				limit = {
					NOT = {
						has_trait = RUS_savinkovist_officer
						has_trait = RUS_monarchist_officer
						has_trait = RUS_ice_march_trait
						has_trait = RUS_ice_march_adm_trait
					}
				}
				set_nationality = RSA
				RUS_purge_white_generals = yes
			}
			RUS_yury_sablin = { set_nationality = RSA }
			RUS_mikhail_levandovsky = { set_nationality = RSA }
		}
		RUS_add_faction_traits = yes

		RUS_setup_postwar_parties = yes

		complete_national_focus = RUS_red_flag_over_kremlin
		activate_advisor = RUS_daniil_sulimov_sic
		set_temp_variable = { coalition_partner_var = token:syndicalist }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:radical_socialist }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:totalist }
		add_to_coalition = yes

		remove_ideas = {
			#Misc Demrus ideas
			RUS_military_anger_dem
			RUS_right_anger
			RUS_left_anger
			RUS_kazakh_unrest
			RUS_okhrana_1
			RUS_okhrana_2
			RUS_okhrana_3
			RUS_okhrana_non_lar_1
			RUS_okhrana_non_lar_2
			RUS_okhrana_non_lar_3
			RUS_deception
			LEC_generic_open_door
			RUS_state_economic_committee

			#RSA ideas
			RSA_army_without_state
			RSA_free_russian_government
			RSA_free_russian_government_2
			RSA_anti_socialist_fervor
			RSA_anti_authoritarian_fervor
			RSA_recruit_EE
			RSA_war_industry
			RSA_war_industry_2
			RSA_war_industry_3
			RSA_legitimacy_1
			RSA_legitimacy_2
			RSA_legitimacy_3
			RSA_legitimacy_4
			RSA_legitimacy_5
			RSA_legitimacy_6
			RSA_legitimacy_7
			RSA_legitimacy_9
			RSA_legitimacy_10
			RSA_stavka
			RSA_stavka_2
			RSA_stavka_3
			RSA_stavka_4
			RSA_stavka_5
			RSA_stavka_6
			RSA_stavka_7
			RSA_war_industry
			RSA_war_industry_2
			RSA_war_industry_3
			RSA_german_debt
		}
		RUS_remove_military_plan_ideas = yes

		uncomplete_national_focus = {
			focus = RUS_democracy_restored
			uncomplete_children = yes
		}
		uncomplete_national_focus = {
			focus = RUS_control_supreme_court
			uncomplete_children = yes
		}

		KAZ = { enable_country_integration_50_compliance = yes }
		TRK = { enable_country_integration_50_compliance = yes }
		KHI = { enable_country_integration_50_compliance = yes }
		BUK = { enable_country_integration_50_compliance = yes }
		FER = { enable_country_integration_50_compliance = yes }

		add_ideas = {
			RUS_white_army_red_baron
			volunteer_only
			free_trade
			civilian_economy
		}
		add_timed_idea = {
			idea = RUS_destroyed_army
			days = 365
		}
		add_timed_idea = {
			idea = RSA_rebuilding_2
			days = 730
		}

		unlock_national_focus = RUS_evaluate_VVFR
		unlock_national_focus = RUS_inspect_VMFR
		unlock_national_focus = RUS_promote_new_blood

		force_update_dynamic_modifier = yes

		RUS_spawn_postwar_army = yes
	}
}

RUS_restore_bolshevik_exiles = {
	RUS = {
		RUS_mikhail_tukhachevsky = {
			set_nationality = var:global.russia
			set_portraits = {
				army = {
					large = GFX_portrait_RUS_mikhail_tukhachevsky_army_large
					small = GFX_portrait_RUS_mikhail_tukhachevsky_army_small
				}
			}
			add_advisor_role = {
				advisor = {
					slot = army_chief
					idea_token = RUS_mikhail_tukhachevsky_army_chief
					desc = RUS_mikhail_tukhachevsky_high_command_desc
					traits = { KR_army_chief_offensive_2 }
					cost = 100
					can_be_fired = no
				}
			}
			promote_leader = yes
		}
		RUS_vasily_blyukher = {
			set_nationality = var:global.russia
			promote_leader = yes
		}
		RUS_boris_shaposhnikov = { set_nationality = var:global.russia }
		RUS_kirill_meretskov = { set_nationality = var:global.russia }
		RUS_semyon_timoshenko = { set_nationality = var:global.russia }
		RUS_mikhail_frunze = {
			set_nationality = var:global.russia
			promote_leader = yes
		}
		RUS_iosif_stalin = { set_nationality = var:global.russia }
		RUS_aleksandr_yegorov = { set_nationality = var:global.russia }
		RUS_vladimir_triandafillov = {
			set_portraits = {
				army = {
					large = GFX_portrait_RUS_vladimir_triandafillov_army_large
					small = GFX_portrait_RUS_vladimir_triandafillov_army_small
				}
			}
			set_nationality = var:global.russia
		}
	}
}

RUS_promote_socialist_generals = {
	RUS = {
		RUS_vasily_chuykov = { set_nationality = var:global.russia }
		RUS_georgy_zhukov = { set_nationality = var:global.russia }
		RUS_ivan_konev = { set_nationality = var:global.russia }
		RUS_maksim_purkayev = { set_nationality = var:global.russia }
		RUS_aleksandr_gorbatov = { set_nationality = var:global.russia }
		RUS_andrey_vlasov = { set_nationality = var:global.russia }
		RUS_nikolay_krylov = { set_nationality = var:global.russia }
		RUS_vasily_kuznetsov = { set_nationality = var:global.russia }
		RUS_filipp_ivanov = { set_nationality = var:global.russia }
		RUS_gordey_levchenko = { set_nationality = var:global.russia }
	}
}

remove_all_russian_cores = {
	every_state = {
		if = {
			limit = { NOT = { country_exists = RUS } }
			remove_core_of = RUS
			remove_claim_by = RUS
		}
		if = {
			limit = { NOT = { country_exists = FER } }
			remove_core_of = FER
			remove_claim_by = FER
		}
	}
	for_each_scope_loop = {
		array = RUS.RUS_starting_states_array
		add_core_of = var:tag_to_release
	}
}

RUS_spawn_postwar_army = {
	### Spawn army
	if = {
		limit = { NOT = { has_template = "Pekhotnaya diviziya" } }
		division_template = {
			name = "Pekhotnaya diviziya"
			division_names_group = RUS_INF_01
			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 }
				engineer = { x = 0 y = 1 }
			}
		}
	}
	if = {
		limit = { NOT = { has_template = "Kavaleriyskaya diviziya" } }
		division_template = {
			name = "Kavaleriyskaya diviziya"
			division_names_group = RUS_CAV_01
			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 0 y = 2 }
				cavalry = { x = 1 y = 0 }
				cavalry = { x = 1 y = 1 }
				cavalry = { x = 1 y = 2 }
				cavalry = { x = 2 y = 0 }
				cavalry = { x = 2 y = 1 }
				cavalry = { x = 2 y = 2 }
			}
			support = {
				recon = { x = 0 y = 0 }
			}
		}
	}
	random_owned_controlled_state = {
		prioritize = { 219 } #Moscow
		create_unit = {
			division = "division_template = \"Pekhotnaya diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0"
			owner = RSA
			count = 6
		}
		create_unit = {
			division = "division_template = \"Kavaleriyskaya diviziya\" start_experience_factor = 0.3 start_equipment_factor = 1.0"
			owner = RSA
			count = 2
		}
	}
	random_owned_controlled_state = {
		prioritize = { 195 } #Petrograd
		create_unit = {
			division = "division_template = \"Pekhotnaya diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0"
			owner = var:global.russia
			count = 6
		}
	}
	random_owned_controlled_state = {
		prioritize = { 217 } #Tsaritsyn
		create_unit = {
			division = "division_template = \"Pekhotnaya diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0"
			owner = RSA
			count = 6
		}
		create_unit = {
			division = "division_template = \"Kavaleriyskaya diviziya\" start_experience_factor = 0.3 start_equipment_factor = 1.0"
			owner = var:global.russia
			count = 2
		}
	}
	random_owned_controlled_state = {
		prioritize = { 251 } #Samara
		create_unit = {
			division = "division_template = \"Pekhotnaya diviziya\" start_experience_factor = 0.1 start_equipment_factor = 1.0"
			owner = RSA
			count = 4
		}
		create_unit = {
			division = "division_template = \"Kavaleriyskaya diviziya\" start_experience_factor = 0.3 start_equipment_factor = 1.0"
			owner = RSA
			count = 2
		}
	}
	random_owned_controlled_state = {
		prioritize = { 653 } #Yekaterinburg
		create_unit = {
			division = "division_template = \"Pekhotnaya diviziya\" start_experience_factor = 0.1 start_equipment_factor = 1.0"
			owner = RSA
			count = 4
		}
		create_unit = {
			division = "division_template = \"Kavaleriyskaya diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0"
			owner = RSA
			count = 1
		}
	}
	random_owned_controlled_state = {
		prioritize = { 578 } #Tomsk
		create_unit = {
			division = "division_template = \"Pekhotnaya diviziya\" start_experience_factor = 0.1 start_equipment_factor = 1.0"
			owner = RSA
			count = 4
		}
		create_unit = {
			division = "division_template = \"Kavaleriyskaya diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0"
			owner = RSA
			count = 1
		}
	}
}

RUS_enable_integration = {
	ROOT = { #needed due to PREV shenanigans in history file
		MNR = { enable_country_integration_50_compliance = yes }
		KAZ = { enable_country_integration_50_compliance = yes }
		537 = { enable_state_integration_80_compliance = yes } #South Sakhalin
		555 = { enable_state_integration_80_compliance = yes } #Kuril Islands
		577 = { enable_state_integration_80_compliance = yes } #North Sakhalin
	}
}

RUS_fire_next_moscow_treaty_event = {
	hidden_effect = {
		RUS = {
			if = {
				limit = {
					any_enemy_country = {
						is_ai = no
						OR = {
							AND = {
								is_ally_with = GER
								is_in_europe = yes
							}
							is_central_asian_tag = yes
						}
						has_capitulated = no
						NOT = { has_country_flag = GER_accepts_peace }
					}
				}
				random_enemy_country = {
					limit = {
						is_ai = no
						OR = {
							AND = {
								is_ally_with = GER
								is_in_europe = yes
							}
							is_central_asian_tag = yes
						}
						has_capitulated = no
						NOT = { has_country_flag = GER_accepts_peace }
					}
					country_event = rusfor.1303
				}
			}
			else = {
				country_event = { id = rusfor.1301 days = 2 }
			}
		}
	}
}

RUS_solonevich_fight_bold = {
	clr_country_flag = RUS_solonevich_knockout
	clr_country_flag = RUS_solonevich_successful_atk
	clr_country_flag = RUS_solonevich_counter_atk
	clr_country_flag = RUS_solonevich_fail
	clr_country_flag = RUS_solonevich_parry
	clr_country_flag = RUS_solonevich_heal
	random_list = {
		10 = {
			custom_effect_tooltip = RUS_solonevich_knockout
			set_country_flag = RUS_solonevich_knockout
			if = {
				limit = { check_variable = { RUS_assailant_hp > 3 } }
				add_to_variable = { RUS_assailant_hp = -3 }
			}
			else = {
				set_variable = { RUS_assailant_hp = 0 }
			}
		}
		30 = {
			custom_effect_tooltip = RUS_solonevich_successful_atk
			set_country_flag = RUS_solonevich_successful_atk
			add_to_variable = { RUS_assailant_hp = -1 }
		}
		30 = {
			custom_effect_tooltip = RUS_solonevich_counter_atk
			set_country_flag = RUS_solonevich_counter_atk
			add_to_variable = { RUS_assailant_hp = -1 }
			add_to_variable = { RUS_solonevich_hp = -1 }
		}
		30 = {
			custom_effect_tooltip = RUS_solonevich_fail
			set_country_flag = RUS_solonevich_fail
			add_to_variable = { RUS_solonevich_hp = -1 }
			if = {
				limit = {
					is_monarchy = no
					NOT = { has_country_flag = RUS_solonevich_punished }
				}
				hidden_effect = {
					set_country_flag = RUS_solonevich_punished #
					set_portraits = {
						character = RUS_ivan_solonevich
						civilian = { large = GFX_portrait_RUS_ivan_solonevich_shirtless_civilian_large }
					}
				}
			}
		}
	}
}

RUS_solonevich_fight_careful = {
	clr_country_flag = RUS_solonevich_knockout
	clr_country_flag = RUS_solonevich_successful_atk
	clr_country_flag = RUS_solonevich_counter_atk
	clr_country_flag = RUS_solonevich_fail
	clr_country_flag = RUS_solonevich_parry
	clr_country_flag = RUS_solonevich_heal
	random_list = {
		20 = {
			custom_effect_tooltip = RUS_solonevich_fail
			set_country_flag = RUS_solonevich_fail
			add_to_variable = { RUS_solonevich_hp = -1 }
		}
		30 = {
			custom_effect_tooltip = RUS_solonevich_heal
			set_country_flag = RUS_solonevich_heal
			add_to_variable = { RUS_solonevich_hp = 1 }
		}
		30 = {
			custom_effect_tooltip = RUS_solonevich_parry
			set_country_flag = RUS_solonevich_parry
		}
		20 = {
			custom_effect_tooltip = RUS_solonevich_successful_atk
			set_country_flag = RUS_solonevich_successful_atk
			add_to_variable = { RUS_assailant_hp = -1 }
		}
	}
}

RUS_move_exiled_socialist_leaders = {
	RUS = {
		RUS_mikhail_tukhachevsky = {
			set_nationality = PREV.PREV
			set_portraits = {
				army = {
					large = GFX_portrait_RUS_mikhail_tukhachevsky_army_large
					small = GFX_portrait_RUS_mikhail_tukhachevsky_army_small
				}
			}
		}
		RUS_aleksandr_yegorov = { set_nationality = PREV.PREV }
		RUS_georgy_zhukov = { set_nationality = PREV.PREV }
		RUS_iosif_stalin = {
			if = {
				limit = { is_dead = no }
				set_nationality = PREV.PREV
			}
		}
	}
}

RUS_western_march_plan = {
	if = {
		limit = {
			has_country_flag = RUS_UKR_bonus
			has_country_flag = RUS_speed_bonus
		}
		add_ideas = RUS_UKR_shock_plan
		activate_mission = RUS_take_kiev
	}
	else_if = {
		limit = {
			has_country_flag = RUS_UKR_bonus
			has_country_flag = RUS_firepower_bonus
		}
		add_ideas = RUS_UKR_fire_plan
		activate_mission = RUS_take_kiev
	}
	else_if = {
		limit = {
			has_country_flag = RUS_BLR_bonus
			has_country_flag = RUS_speed_bonus
		}
		add_ideas = RUS_BLR_shock_plan
		activate_mission = RUS_take_minsk
	}
	else_if = {
		limit = {
			has_country_flag = RUS_BLR_bonus
			has_country_flag = RUS_firepower_bonus
		}
		add_ideas = RUS_BLR_fire_plan
		activate_mission = RUS_take_minsk
	}
	if = {
		limit = {
			has_country_flag = RUS_BAT_bonus
			has_country_flag = RUS_speed_bonus
		}
		add_ideas = RUS_BAT_shock_plan
		activate_mission = RUS_take_riga
	}
	else_if = {
		limit = {
			has_country_flag = RUS_BAT_bonus
			has_country_flag = RUS_firepower_bonus
		}
		add_ideas = RUS_BAT_fire_plan
		activate_mission = RUS_take_riga
	}
	else_if = {
		limit = { has_country_flag = RUS_long_war }
		add_timed_idea = {
			idea = RUS_long_war
			days = 1095
		}
	}
}

RUS_remove_western_march_ideas = {
	hidden_effect = {
		remove_ideas = {
			RUS_UKR_shock_plan
			RUS_UKR_fire_plan
			RUS_BLR_shock_plan
			RUS_BLR_fire_plan
			RUS_BAT_shock_plan
			RUS_BAT_fire_plan
			RUS_GER_shock_plan
			RUS_GER_fire_plan
		}
	}
}

RUS_fifth_column_effects = {
	hidden_effect = {
		remove_targeted_decision = { target = UKR decision = RUS_organise_resistance_in_crimea }
		remove_targeted_decision = { target = UKR decision = RUS_organise_russophile_groups }
		remove_targeted_decision = { target = UKR decision = RUS_incite_antigermanism }
		remove_targeted_decision = { target = BLR decision = RUS_anti_belarus }
		remove_targeted_decision = { target = BAT decision = RUS_free_baltics_free_russia }
		remove_targeted_decision = { target = LIT decision = RUS_support_the_laf }
		remove_targeted_decision = { target = POL decision = RUS_national_committee }
		if = {
			limit = { has_country_flag = RUS_crimea_resistance }
			137 = {
				force_enable_resistance = 137.owner
				start_resistance = yes
				add_resistance = 30
			}
		}
		if = {
			limit = { has_country_flag = RUS_incited_antigermanism }
			clr_country_flag = RUS_incited_antigermanism
			UKR = {
				country_event = rusfor.110
			}
		}
		if = {
			limit = {
				has_country_flag = RUS_anti_belarus
			}
			clr_country_flag = RUS_anti_belarus
			BLR = { country_event = rusfor.112 }
			add_intel = {
				target = BLR
				civilian_intel = 40
				army_intel = 40
				navy_intel = 40
				airforce_intel = 40
			}
			1087 = { #Mogilev
				damage_building = {
					type = bunker
					damage = 10
				}
			}
		}
		if = {
			limit = {
				has_country_flag = RUS_free_baltics_free_russia
			}
			clr_country_flag = RUS_free_baltics_free_russia
			BAT = { country_event = rusfor.112 }
			add_intel = {
				target = BAT
				civilian_intel = 50
				army_intel = 50
				navy_intel = 50
				airforce_intel = 50
			}
		}
		if = {
			limit = {
				has_country_flag = RUS_support_the_laf
			}
			clr_country_flag = RUS_support_the_laf
			LIT = { country_event = rusfor.112 }
			set_temp_variable = { LIT_threat_change = 5 }
			LIT_change_LAF_threat = yes
		}
		if = {
			limit = {
				has_country_flag = RUS_national_committee
			}
			country_event = { id = rusfor.111 days = 250 } #Failure
		}
		if = {
			limit = {
				OR = {
					has_country_flag = UKR_borotbyst_help_large
					has_country_flag = UKR_borotbyst_help_medium
					has_country_flag = UKR_borotbyst_help_small
				}
			}
			UKR = { country_event = socrus.414 }
			POL = { country_event = { id = socrus.415 days = 365 } }
		}
	}
}

RUS_klepikov_plot = {
	if = {
		limit = { check_variable = { RUS_klepikov_conspiracy > 3 } }
		country_event = russia.304 #Slaying the Shadow of Savinkov
	}
	else = { custom_effect_tooltip = RUS_klepikov_conspiracy_tt }
	clr_country_flag = RUS_recruiting_wrangel
	clr_country_flag = RUS_recruiting_denikin
	clr_country_flag = RUS_recruiting_georgievsky
	clr_country_flag = RUS_recruiting_voznesensky
	clr_country_flag = RUS_recruiting_yusupov
	clr_country_flag = RUS_recruiting_vonsyatsky
	clr_country_flag = RUS_recruiting_berkova
	clr_country_flag = RUS_recruiting_vysheslavtsev
	clr_country_flag = RUS_recruiting_gopper
}

### MIO Scripted Effects ###
RUS_upgrade_dalzavod_idea_check = {
	if = {
		limit = {
			check_variable = { RUS_dalzavod_upgrade_MIO = 1 }
			NOT = { has_country_flag = RUS_BZ_first_trait_unlocked }
			mio:RUS_bz_organisation = {
				has_mio_number_of_completed_traits < 2
			}
		}
		set_country_flag = RUS_BZ_first_trait_unlocked
		RUS_upgrade_dalzavod_idea = yes
	}
	else_if = {
		limit = {
			check_variable = { RUS_dalzavod_upgrade_MIO = 2 }
			NOT = { has_country_flag = RUS_AV_first_trait_unlocked }
			mio:RUS_av_organisation = {
				has_mio_number_of_completed_traits < 2
			}
		}
		set_country_flag = RUS_AV_first_trait_unlocked
		RUS_upgrade_dalzavod_idea = yes
	}
	else_if = {
		limit = {
			check_variable = { RUS_dalzavod_upgrade_MIO = 3 }
			NOT = { has_country_flag = RUS_AS_first_trait_unlocked }
			mio:RUS_as_organisation = {
				has_mio_number_of_completed_traits < 2
			}
		}
		set_country_flag = RUS_AS_first_trait_unlocked
		RUS_upgrade_dalzavod_idea = yes
	}
	else_if = {
		limit = {
			check_variable = { RUS_dalzavod_upgrade_MIO = 4 }
			NOT = { has_country_flag = RUS_Dalzavod_first_trait_unlocked }
			mio:RUS_dalzavod_organisation = {
				has_mio_number_of_completed_traits < 2
			}
		}
		set_country_flag = RUS_Dalzavod_first_trait_unlocked
		RUS_upgrade_dalzavod_idea = yes
	}
}
RUS_upgrade_dalzavod_idea = {
	if = {
		limit = {
			NOT = {
				has_idea = dalzavod_mio_upgrade_4
			}
		}
		custom_effect_tooltip = dalzavod_mio_upgrade_tt1
		show_ideas_tooltip = dalzavod_mio_upgrade_4
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = dalzavod_mio_upgrade_tt2
		if = {
			limit = { has_idea = dalzavod_mio_upgrade_1 }
			swap_ideas = {
				remove_idea = dalzavod_mio_upgrade_1
				add_idea = dalzavod_mio_upgrade_2
			}
		}
		else_if = {
			limit = { has_idea = dalzavod_mio_upgrade_2 }
			swap_ideas = {
				remove_idea = dalzavod_mio_upgrade_2
				add_idea = dalzavod_mio_upgrade_3
			}
		}
		else_if = {
			limit = { has_idea = dalzavod_mio_upgrade_3 }
			swap_ideas = {
				remove_idea = dalzavod_mio_upgrade_3
				add_idea = dalzavod_mio_upgrade_4
			}
			clr_country_flag = RUS_BZ_first_trait_unlocked
			clr_country_flag = RUS_AV_first_trait_unlocked
			clr_country_flag = RUS_AS_first_trait_unlocked
			clr_country_flag = RUS_Dalzavod_first_trait_unlocked
		}
		else = {
			add_ideas = dalzavod_mio_upgrade_1
			custom_effect_tooltip = tooltip_white_line
		}
		custom_effect_tooltip = dalzavod_mio_upgrade_tt3
	}
}

RUS_upgrade_uztm = {
	if = { #Unlocking the trait based on number of allies
		limit = { check_variable = { uztm_upgrade_eff_cap = 1 } }
		#Ranges from 0 to 10, all integers
		meta_effect = {
			text = {
				complete_mio_trait = uztm_upgrade_eff_cap_[UZTM_UPGRADE]
			}
			UZTM_UPGRADE = "[?uztm_allies_and_puppets_no|0]"
		}
	}
	else_if = {
		limit = { check_variable = { uztm_upgrade_eff_gro = 1 } }
		#Ranges from 0 to 10, all integers
		meta_effect = {
			text = {
				complete_mio_trait = uztm_upgrade_eff_gro_[UZTM_UPGRADE]
			}
			UZTM_UPGRADE = "[?uztm_allies_and_puppets_no|0]"
		}
	}
	# For visibility checks
	set_variable = { uztm_upgrade_level = uztm_allies_and_puppets_no }
}

RUS_calculate_daily_funds_gain_and_requirement = {
	# Daily Funds Gained
	set_temp_variable = { daily_funds_gained = Funds_Difference }
	divide_temp_variable = { daily_funds_gained = 7 }
	# Daily Funds Required for Bonus
	set_temp_variable = { daily_funds_requirement = weekly_funds_requirement }
	divide_temp_variable = { daily_funds_requirement = 7 }
}

RUS_Update_MIO_Research_Speeds = {
	#ChTZ
	mio:RUS_chtz_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Weekly trigger for giving incremental research bonus to MIO ChTZ
		limit = {
			check_variable = { MIO_CHTZ_assigned_manufacturer_number > 0 } #So that the MIO can only gain research speed from manufacturing weapons
			mio:RUS_chtz_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
		}
		if = {
			limit = { mio:RUS_chtz_organisation = { check_variable = { research_bonus < max_research_speed } } }
			mio:RUS_chtz_organisation = { add_mio_research_bonus = weekly_research_speed_gain }
		}
		else_if = {
			limit = {
				mio:RUS_chtz_organisation = {
					OR = {
						check_variable = { research_bonus > max_research_speed }
						check_variable = { research_bonus = max_research_speed }
					}
				}
			}
			if = {
				limit = { NOT = { has_country_flag = RUS_CHTZ_RS_Notification } }
				set_country_flag = RUS_CHTZ_RS_Notification
				mio:RUS_chtz_organisation = {
					set_temp_variable = { RUS_MIO_research_speed_temp = research_bonus }
					multiply_temp_variable = { RUS_MIO_research_speed_temp = 100 }
					ROOT = {
						set_variable = { RUS_MIO_alert_name = PREV }
						set_variable = { RUS_MIO_research_speed = RUS_MIO_research_speed_temp }
					}
				}
				add_to_array = { RUS_MIO_alerts = THIS }
				scoped_sound_effect = diplomatic_notification
				set_variable_to_random = global.kaiserreich_alerts_dirty
			}
		}
	}
	#VPOZ
	mio:RUS_vpoz_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Weekly trigger for giving incremental research bonus to MIO VPOZ
		limit = {
			check_variable = { MIO_VPOZ_assigned_manufacturer_number > 0 } #So that the MIO can only gain research speed from manufacturing weapons
			mio:RUS_vpoz_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
		}
		if = {
			limit = { mio:RUS_vpoz_organisation = { check_variable = { research_bonus < max_research_speed } } }
			mio:RUS_vpoz_organisation = { add_mio_research_bonus = weekly_research_speed_gain }
		}
		else_if = {
			limit = {
				mio:RUS_vpoz_organisation = {
					OR = {
						check_variable = { research_bonus > max_research_speed }
						check_variable = { research_bonus = max_research_speed }
					}
				}
			}
			if = {
				limit = { NOT = { has_country_flag = RUS_VPOZ_RS_Notification } }
				set_country_flag = RUS_VPOZ_RS_Notification
				mio:RUS_vpoz_organisation = {
					set_temp_variable = { RUS_MIO_research_speed_temp = research_bonus }
					multiply_temp_variable = { RUS_MIO_research_speed_temp = 100 }
					ROOT = {
						set_variable = { RUS_MIO_alert_name = PREV }
						set_variable = { RUS_MIO_research_speed = RUS_MIO_research_speed_temp }
					}
				}
				add_to_array = { RUS_MIO_alerts = THIS }
				scoped_sound_effect = diplomatic_notification
				set_variable_to_random = global.kaiserreich_alerts_dirty
			}
		}
	}
	#BMZ
	mio:RUS_bmz_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Weekly trigger for giving incremental research bonus to MIO BMZ
		limit = {
			check_variable = { MIO_BMZ_assigned_manufacturer_number > 0 } #So that the MIO can only gain research speed from manufacturing weapons
			mio:RUS_bmz_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
		}
		if = {
			limit = { mio:RUS_bmz_organisation = { check_variable = { research_bonus < max_research_speed } } }
			mio:RUS_bmz_organisation = { add_mio_research_bonus = weekly_research_speed_gain }
		}
		else_if = {
			limit = {
				mio:RUS_bmz_organisation = {
					OR = {
						check_variable = { research_bonus > max_research_speed }
						check_variable = { research_bonus = max_research_speed }
					}
				}
			}
			if = {
				limit = { NOT = { has_country_flag = RUS_BMZ_RS_Notification } }
				set_country_flag = RUS_BMZ_RS_Notification
				mio:RUS_bmz_organisation = {
					set_temp_variable = { RUS_MIO_research_speed_temp = research_bonus }
					multiply_temp_variable = { RUS_MIO_research_speed_temp = 100 }
					ROOT = {
						set_variable = { RUS_MIO_alert_name = PREV }
						set_variable = { RUS_MIO_research_speed = RUS_MIO_research_speed_temp }
					}
				}
				add_to_array = { RUS_MIO_alerts = THIS }
				scoped_sound_effect = diplomatic_notification
				set_variable_to_random = global.kaiserreich_alerts_dirty
			}
		}
	}
	#TsAGI
	mio:RUS_tsagi_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Weekly trigger for giving incremental research bonus to MIO TSAGI
		limit = {
			check_variable = { MIO_TSAGI_assigned_manufacturer_number > 0 } #So that the MIO can only gain research speed from manufacturing weapons
			mio:RUS_tsagi_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
		}
		if = {
			limit = { mio:RUS_tsagi_organisation = { check_variable = { research_bonus < max_research_speed } } }
			mio:RUS_tsagi_organisation = { add_mio_research_bonus = weekly_research_speed_gain }
		}
		else_if = {
			limit = {
				mio:RUS_tsagi_organisation = {
					OR = {
						check_variable = { research_bonus > max_research_speed }
						check_variable = { research_bonus = max_research_speed }
					}
				}
			}
			if = {
				limit = { NOT = { has_country_flag = RUS_TSAGI_RS_Notification } }
				set_country_flag = RUS_TSAGI_RS_Notification
				mio:RUS_tsagi_organisation = {
					set_temp_variable = { RUS_MIO_research_speed_temp = research_bonus }
					multiply_temp_variable = { RUS_MIO_research_speed_temp = 100 }
					ROOT = {
						set_variable = { RUS_MIO_alert_name = PREV }
						set_variable = { RUS_MIO_research_speed = RUS_MIO_research_speed_temp }
					}
				}
				add_to_array = { RUS_MIO_alerts = THIS }
				scoped_sound_effect = diplomatic_notification
				set_variable_to_random = global.kaiserreich_alerts_dirty
			}
		}
	}
	#Azovskaya Sudoverf
	mio:RUS_as_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Weekly trigger for giving incremental research bonus to MIO AS
		limit = {
			check_variable = { MIO_AS_assigned_manufacturer_number > 0 } #So that the MIO can only gain research speed from manufacturing weapons
			mio:RUS_as_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
		}
		if = {
			limit = { mio:RUS_as_organisation = { check_variable = { research_bonus < max_research_speed } } }
			mio:RUS_as_organisation = { add_mio_research_bonus = weekly_research_speed_gain }
		}
		else_if = {
			limit = {
				mio:RUS_as_organisation = {
					OR = {
						check_variable = { research_bonus > max_research_speed }
						check_variable = { research_bonus = max_research_speed }
					}
				}
			}
			if = {
				limit = { NOT = { has_country_flag = RUS_AS_RS_Notification } }
				set_country_flag = RUS_AS_RS_Notification
				mio:RUS_as_organisation = {
					set_temp_variable = { RUS_MIO_research_speed_temp = research_bonus }
					multiply_temp_variable = { RUS_MIO_research_speed_temp = 100 }
					ROOT = {
						set_variable = { RUS_MIO_alert_name = PREV }
						set_variable = { RUS_MIO_research_speed = RUS_MIO_research_speed_temp }
					}
				}
				add_to_array = { RUS_MIO_alerts = THIS }
				scoped_sound_effect = diplomatic_notification
				set_variable_to_random = global.kaiserreich_alerts_dirty
			}
		}
	}
}

RUS_Update_MIO_XP_Gains = {
	#Obukhov
	mio:RUS_obukhov_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Remove if below threshold
		limit = {
			mio:RUS_obukhov_organisation = { check_variable = { Funds_Difference < weekly_funds_requirement } }
			OR = {
				has_idea = RUS_obukhov_army_xp
				has_idea = RUS_obukhov_army_xp_2
			}
			RUS_has_obukhov_upgrade_5_or_6 = yes
			check_variable = { Obukhov_Research_Number < 1 }
		}
		remove_ideas = {
			RUS_obukhov_army_xp
			RUS_obukhov_army_xp_2
		}
	}
	else_if = { #Add if above threshold
		limit = {
			OR = {
				check_variable = { Obukhov_Research_Number < 1 }
				mio:RUS_obukhov_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
			}
			NOT = {
				has_idea = RUS_obukhov_army_xp
				has_idea = RUS_obukhov_army_xp_2
			}
			RUS_has_obukhov_upgrade_5_or_6 = yes
		}
		if = {
			limit = {
				mio:RUS_obukhov_organisation = {
					is_mio_trait_completed = obukhov_upgrade_7
				}
			}
			add_ideas = RUS_obukhov_army_xp_2
		}
		else = {
			add_ideas = RUS_obukhov_army_xp
		}
	}
	if = {
		limit = {
			OR = {
				has_idea = RUS_obukhov_army_xp
				has_idea = RUS_obukhov_army_xp_2
			}
		}
		mio:RUS_obukhov_organisation = {
			set_temp_variable = { total_xp_to_be_added = xp_gain_loc }
			multiply_temp_variable = { total_xp_to_be_added = 7 }
			add_to_variable = { total_campaign_xp = total_xp_to_be_added }
		}
	}
	#OSOAVIA
	mio:RUS_osoavia_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Remove if below threshold
		limit = {
			mio:RUS_osoavia_organisation = { check_variable = { Funds_Difference < weekly_funds_requirement } }
			OR = {
				has_idea = RUS_osoavia_air_xp
				has_idea = RUS_osoavia_air_xp_2
			}
			check_variable = { OSOAVIA_Research_Number < 1 }
		}
		remove_ideas = {
			RUS_osoavia_air_xp
			RUS_osoavia_air_xp_2
		}
	}
	else_if = { #Add if above threshold
		limit = {
			OR = {
				mio:RUS_osoavia_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
				check_variable = { OSOAVIA_Research_Number > 0 }
			}
			NOT = {
				has_idea = RUS_osoavia_air_xp
				has_idea = RUS_osoavia_air_xp_2
			}
		}
		if = {
			limit = {
				mio:RUS_osoavia_organisation = {
					is_mio_trait_completed = osoavia_upgrade_1
				}
			}
			add_ideas = RUS_osoavia_air_xp_2
		}
		else = {
			add_ideas = RUS_osoavia_air_xp
		}
	}
	if = {
		limit = {
			OR = {
				has_idea = RUS_osoavia_air_xp
				has_idea = RUS_osoavia_air_xp_2
			}
		}
		mio:RUS_osoavia_organisation = {
			set_temp_variable = { total_xp_to_be_added = xp_gain_loc }
			multiply_temp_variable = { total_xp_to_be_added = 7 }
			add_to_variable = { total_campaign_xp = total_xp_to_be_added }
		}
	}
	#Baltiysky Zavod
	mio:RUS_bz_organisation = {
		set_variable = { Previous_Week_Funds = Current_Week_Funds }
		set_variable = { Current_Week_Funds = funds }
		set_variable = { Funds_Difference = Current_Week_Funds }
		subtract_from_variable = { Funds_Difference = Previous_Week_Funds }
	}
	if = { #Remove if below threshold
		limit = {
			mio:RUS_bz_organisation = { check_variable = { Funds_Difference < weekly_funds_requirement } }
			OR = {
				has_idea = RUS_bz_navy_xp
				has_idea = RUS_bz_navy_xp_2
			}
			check_variable = { BZ_Research_Number < 1 }
		}
		remove_ideas = {
			RUS_bz_navy_xp
			RUS_bz_navy_xp_2
		}
	}
	else_if = { #Add if above threshold
		limit = {
			OR = {
				mio:RUS_bz_organisation = { check_variable = { Funds_Difference > weekly_funds_requirement } }
				check_variable = { BZ_Research_Number > 0 }
			}
			NOT = {
				has_idea = RUS_bz_navy_xp
				has_idea = RUS_bz_navy_xp_2
			}
		}
		if = {
			limit = {
				mio:RUS_bz_organisation = {
					is_mio_trait_completed = bz_upgrade_5
				}
			}
			add_ideas = RUS_bz_navy_xp_2
		}
		else = {
			add_ideas = RUS_bz_navy_xp
		}
	}
	if = {
		limit = {
			OR = {
				has_idea = RUS_bz_navy_xp
				has_idea = RUS_bz_navy_xp_2
			}
		}
		mio:RUS_bz_organisation = {
			set_temp_variable = { total_xp_to_be_added = xp_gain_loc }
			multiply_temp_variable = { total_xp_to_be_added = 7 }
			add_to_variable = { total_campaign_xp = total_xp_to_be_added }
		}
	}
}

RUS_Update_Sokol = {
	#Construction Sokol
	if = {
		limit = { NOT = { has_variable = RUS_sokol_limit } }
		set_variable = { RUS_sokol_limit = 0.05 }
	}
	if = {
		limit = {
			mio:RUS_sokol_construction_organisation = {
				is_mio_visible = yes
			}
			check_variable = { Sokol_Research_Number > 0 }
		}
		set_variable = { design_team_assign_cost_dif = 0 }
		if = {
			limit = { #Decrease design team assign cost if researching construction/excavation tech
				check_variable = { Sokol_Research_Number > 0 }
				OR = {
					is_researching_technology = construction1
					is_researching_technology = construction2
					is_researching_technology = construction3
					is_researching_technology = construction4
					is_researching_technology = construction5
					is_researching_technology = excavation1
					is_researching_technology = excavation2
					is_researching_technology = excavation3
					is_researching_technology = excavation4
					is_researching_technology = excavation5
				}
			}
			add_to_variable = { design_team_assign_cost_dif = -0.01 }
		}
		if = {
			limit = { #Increase design team assign cost if researching air tech
				check_variable = { Sokol_Research_Number > 0 }
				OR = {
					is_researching_technology = iw_small_airframe
					is_researching_technology = basic_small_airframe
					is_researching_technology = improved_small_airframe
					is_researching_technology = advanced_small_airframe
					is_researching_technology = modern_small_airframe
					is_researching_technology = iw_medium_airframe
					is_researching_technology = basic_medium_airframe
					is_researching_technology = improved_medium_airframe
					is_researching_technology = advanced_medium_airframe
					is_researching_technology = modern_medium_airframe
					is_researching_technology = iw_large_airframe
					is_researching_technology = basic_large_airframe
					is_researching_technology = improved_large_airframe
					is_researching_technology = advanced_large_airframe
					is_researching_technology = modern_large_airframe
					is_researching_technology = heavy_bombs
					is_researching_technology = armor_piercing_bombs
					is_researching_technology = photo_reconnaisance
					is_researching_technology = air_torpedoe_1
					is_researching_technology = air_torpedoe_2
					is_researching_technology = air_torpedoe_3
					is_researching_technology = aa_lmg
					is_researching_technology = survivability_studies
					is_researching_technology = aa_hmg
					is_researching_technology = aa_cannon_1
					is_researching_technology = aa_cannon_2
					is_researching_technology = aa_cannon_3
					is_researching_technology = engines_1
					is_researching_technology = engines_2
					is_researching_technology = engines_3
					is_researching_technology = engines_4
					is_researching_technology = range_improvements
					is_researching_technology = aircraft_construction
					is_researching_technology = suicide_charge
					is_researching_technology = sp_centrifugal_jet_tech
					is_researching_technology = reinforced_wings_mothership
					is_researching_technology = miniature_fighters
					is_researching_technology = aerial_hangars
				}
			}
			add_to_variable = { design_team_assign_cost_dif = 0.01 }
		}
		if = {
			limit = { check_variable = { design_team_assign_cost_dif = 0.01 } }
			if = {
				limit = { check_variable = { RUS_sokol_limit < 0.20 } }
				add_to_variable = { RUS_sokol_limit = design_team_assign_cost_dif }
				set_temp_variable = { RUS_sokol_limit_temp = RUS_sokol_limit }
				mio:RUS_sokol_construction_organisation = {
					set_mio_design_team_assign_cost = RUS_sokol_limit_temp
					add_mio_funds_gain_factor = 0.05
				}
			}
		}
		else_if = {
			limit = { check_variable = { design_team_assign_cost_dif = -0.01 } }
			if = {
				limit = { check_variable = { RUS_sokol_limit > 0.00 } }
				add_to_variable = { RUS_sokol_limit = design_team_assign_cost_dif }
				set_temp_variable = { RUS_sokol_limit_temp = RUS_sokol_limit }
				mio:RUS_sokol_construction_organisation = {
					set_mio_design_team_assign_cost = RUS_sokol_limit_temp
					add_mio_funds_gain_factor = -0.05
				}
			}
		}
	}
	#Production Sokol
	if = {
		limit = {
			mio:RUS_sokol_production_organisation = {
				is_mio_visible = yes
			}
			check_variable = { Sokol_Research_Number > 0 }
		}
		set_variable = { design_team_assign_cost_dif = 0 }
		if = {
			limit = { #Decrease design team assign cost if researching production tech
				check_variable = { Sokol_Research_Number > 0 }
				OR = {
					is_researching_technology = basic_machine_tools
					is_researching_technology = improved_machine_tools
					is_researching_technology = advanced_machine_tools
					is_researching_technology = assembly_line_production
					is_researching_technology = flexible_line
					is_researching_technology = streamlined_line
					is_researching_technology = improved_equipment_conversion
					is_researching_technology = advanced_equipment_conversion
					is_researching_technology = concentrated_industry
					is_researching_technology = concentrated_industry2
					is_researching_technology = concentrated_industry3
					is_researching_technology = concentrated_industry4
					is_researching_technology = concentrated_industry5
					is_researching_technology = dispersed_industry
					is_researching_technology = dispersed_industry2
					is_researching_technology = dispersed_industry3
					is_researching_technology = dispersed_industry4
					is_researching_technology = dispersed_industry5
				}
			}
			add_to_variable = { design_team_assign_cost_dif = -0.01 }
		}
		if = {
			limit = { #Increase design team assign cost if researching air tech
				check_variable = { Sokol_Research_Number > 0 }
				OR = {
					is_researching_technology = iw_small_airframe
					is_researching_technology = basic_small_airframe
					is_researching_technology = improved_small_airframe
					is_researching_technology = advanced_small_airframe
					is_researching_technology = modern_small_airframe
					is_researching_technology = iw_medium_airframe
					is_researching_technology = basic_medium_airframe
					is_researching_technology = improved_medium_airframe
					is_researching_technology = advanced_medium_airframe
					is_researching_technology = modern_medium_airframe
					is_researching_technology = iw_large_airframe
					is_researching_technology = basic_large_airframe
					is_researching_technology = improved_large_airframe
					is_researching_technology = advanced_large_airframe
					is_researching_technology = modern_large_airframe
					is_researching_technology = heavy_bombs
					is_researching_technology = armor_piercing_bombs
					is_researching_technology = photo_reconnaisance
					is_researching_technology = air_torpedoe_1
					is_researching_technology = air_torpedoe_2
					is_researching_technology = air_torpedoe_3
					is_researching_technology = aa_lmg
					is_researching_technology = survivability_studies
					is_researching_technology = aa_hmg
					is_researching_technology = aa_cannon_1
					is_researching_technology = aa_cannon_2
					is_researching_technology = aa_cannon_3
					is_researching_technology = engines_1
					is_researching_technology = engines_2
					is_researching_technology = engines_3
					is_researching_technology = engines_4
					is_researching_technology = range_improvements
					is_researching_technology = aircraft_construction
					is_researching_technology = suicide_charge
					is_researching_technology = sp_centrifugal_jet_tech
					is_researching_technology = reinforced_wings_mothership
					is_researching_technology = miniature_fighters
					is_researching_technology = aerial_hangars
				}
			}
			add_to_variable = { design_team_assign_cost_dif = 0.01 }
		}
		if = {
			limit = { check_variable = { design_team_assign_cost_dif = 0.01 } }
			if = {
				limit = { check_variable = { RUS_sokol_limit < 0.20 } }
				add_to_variable = { RUS_sokol_limit = design_team_assign_cost_dif }
				set_temp_variable = { RUS_sokol_limit_temp = RUS_sokol_limit }
				mio:RUS_sokol_production_organisation = {
					set_mio_design_team_assign_cost = RUS_sokol_limit_temp
					add_mio_funds_gain_factor = 0.05
				}
			}
		}
		else_if = {
			limit = { check_variable = { design_team_assign_cost_dif = -0.01 } }
			if = {
				limit = { check_variable = { RUS_sokol_limit > 0.00 } }
				add_to_variable = { RUS_sokol_limit = design_team_assign_cost_dif }
				set_temp_variable = { RUS_sokol_limit_temp = RUS_sokol_limit }
				mio:RUS_sokol_production_organisation = {
					set_mio_design_team_assign_cost = RUS_sokol_limit_temp
					add_mio_funds_gain_factor = -0.05
				}
			}
		}
	}
}

RUS_obukhov_eff_cap_tt = {
	if = {
		limit = {
			FROM = {
				NOT = {
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl2
					}
				}
			}
		}
		custom_effect_tooltip = {
			localization_key = RUS_obukhov_if_trait_not_completed_before
			TRAIT_1 = obukhov_upgrade_3_2 TRAIT_2 = obukhov_upgrade_3_3 TRAIT_3 = obukhov_upgrade_3_4
		}
	}
}

RUS_obukhov_eff_gro_tt = {
	if = {
		limit = {
			FROM = {
				NOT = {
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl2
					}
				}
			}
		}
		custom_effect_tooltip = {
			localization_key = RUS_obukhov_if_trait_not_completed_before
			TRAIT_1 = obukhov_upgrade_3_1 TRAIT_2 = obukhov_upgrade_3_3 TRAIT_3 = obukhov_upgrade_3_4
		}
	}
}

RUS_obukhov_resource_need_tt = {
	if = {
		limit = {
			FROM = {
				NOT = {
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_4_lvl2
					}
				}
			}
		}
		custom_effect_tooltip = {
			localization_key = RUS_obukhov_if_trait_not_completed_before
			TRAIT_1 = obukhov_upgrade_3_1 TRAIT_2 = obukhov_upgrade_3_2 TRAIT_3 = obukhov_upgrade_3_4
		}
	}
}

RUS_obukhov_conversion_tt = {
	if = {
		limit = {
			FROM = {
				NOT = {
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_1_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_2_lvl2
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl4
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl3
					}
					mio:RUS_obukhov_organisation = {
						is_mio_trait_completed = obukhov_upgrade_3_3_lvl2
					}
				}
			}
		}
		custom_effect_tooltip = {
			localization_key = RUS_obukhov_if_trait_not_completed_before
			TRAIT_1 = obukhov_upgrade_3_1 TRAIT_2 = obukhov_upgrade_3_2 TRAIT_3 = obukhov_upgrade_3_3
		}
	}
}

RUS_complete_sokol_upgrade_1 = {
	FROM = {
		mio:RUS_sokol_organisation = {
			set_temp_variable = { RUS_temp_sokol_funds = funds }
		}
		mio:RUS_sokol_construction_organisation = {
			complete_mio_trait = sokol_upgrade_1
			add_mio_funds_gain_factor = 0.25
			add_mio_funds = RUS_temp_sokol_funds
		}
	}
}

RUS_complete_sokol_upgrade_2 = {
	FROM = {
		mio:RUS_sokol_organisation = {
			set_temp_variable = { RUS_temp_sokol_funds = funds }
		}
		mio:RUS_sokol_production_organisation = {
			complete_mio_trait = sokol_upgrade_2
			add_mio_funds_gain_factor = 0.25
			add_mio_funds = RUS_temp_sokol_funds
		}
	}
}

RUS_AV_set_random_decaying_funds_bonus = {
	log = "[GetLogRoot]: Executed scripted effect RUS_AV_set_random_decaying_funds_bonus"
	custom_effect_tooltip = RUS_AV_Number_Of_Funds_Bonus_Granted_tt
	RUS_execute_AV = yes
	FROM = { mio:RUS_av_organisation = { add_to_variable = { total_campaign_funds_bonus = 1 } } }
	if = {
		limit = { #Execute another time if the trait has been completed
			FROM = {
				mio:RUS_av_organisation = {
					is_mio_trait_completed = av_upgrade_3_4
				}
			}
		}
		RUS_execute_AV = yes
		FROM = { mio:RUS_av_organisation = { add_to_variable = { total_campaign_funds_bonus = 1 } } }
	}
	if = {
		limit = { #Execute another time if the policy is active
			FROM = {
				mio:RUS_av_organisation = {
					has_mio_policy_active = RUS_mio_policy_offer_fiscal_opportunities
				}
			}
		}
		RUS_execute_AV = yes
		FROM = { mio:RUS_av_organisation = { add_to_variable = { total_campaign_funds_bonus = 1 } } }
	}
}

RUS_execute_AV = {
	log = "[GetLogRoot]: Executed scripted effect RUS_execute_AV"
	hidden_effect = {
		FROM = {
			mio:RUS_av_organisation = { set_temp_variable = { Temp_Funds_Bonus = Funds_Bonus } }
			set_variable = { visible_Funds_Bonus = Temp_Funds_Bonus }
			random_military_industrial_organization = {
				limit = {
					NOT = { has_mio_flag = RUS_AV_decaying_funds_bonus }
					is_mio_assigned_to_task = yes
				}
				if = {
					limit = {
						FROM = { check_variable = { visible_Funds_Bonus = 1.00 } }
					}
					set_variable = { RUS_AV_Recent_Funds_Bonus_Added = 100 }
					add_mio_funds_gain_factor = 1.00
					set_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = 100
					}
				}
				else_if = {
					limit = {
						FROM = { check_variable = { visible_Funds_Bonus = 1.50 } }
					}
					set_variable = { RUS_AV_Recent_Funds_Bonus_Added = 150 }
					add_mio_funds_gain_factor = 1.50
					set_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = 150
					}
				}
				else_if = {
					limit = {
						FROM = { check_variable = { visible_Funds_Bonus = 2.00 } }
					}
					set_variable = { RUS_AV_Recent_Funds_Bonus_Added = 200 }
					add_mio_funds_gain_factor = 2.00
					set_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = 200
					}
				}
			}
			mio:RUS_putilovets_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_putilovets_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_okmo_kr_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_okmo_kr_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_uztm_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_uztm_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_tstz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_tstz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_chtz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_chtz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_bz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_bz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_av_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_av_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_as_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_as_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_dalzavod_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_dalzavod_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_osoavia_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_osoavia_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_duks_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_duks_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_tsagi_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_tsagi_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_gamayun_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_gamayun_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_skorost_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_skorost_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_sokol_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_sokol_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_sokol_construction_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_sokol_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_sokol_production_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_sokol_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_toz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_toz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_vpoz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_vpoz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_imz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_imz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_obukhov_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_obukhov_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_bmz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_bmz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_amo_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_amo_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_naz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_naz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
			mio:RUS_laz_organisation = {
				if = {
					limit = { has_variable = RUS_AV_Recent_Funds_Bonus_Added }
					PREV = { mio:RUS_av_organisation = { set_variable = { av_laz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Bonus_Added } } }
					clear_variable = RUS_AV_Recent_Funds_Bonus_Added
				}
			}
		}
	}
}

RUS_Update_Decaying_Funds_Bonus = {
	log = "[GetLogRoot]: Executed scripted effect RUS_Update_Decaying_Funds_Bonus"
	mio:RUS_av_organisation = { set_temp_variable = { Temp_Weekly_funds_decay = Weekly_funds_decay } }
	set_variable = { visible_Weekly_funds_decay = Temp_Weekly_funds_decay }
	every_military_industrial_organization = {
		limit = { #Only update those that are currently being used by player and that have the bonus
			has_mio_flag = RUS_AV_decaying_funds_bonus
			is_mio_assigned_to_task = yes
		}
		if = {
			limit = { #Reduce by 3 if there are no upgrades
				FROM = { check_variable = { visible_Weekly_funds_decay = 0.03 } }
			}
			modify_mio_flag = {
				flag = RUS_AV_decaying_funds_bonus
				value = -3
			}
			if = { #If below threshold, then remove the flag and funds bonus
				limit = {
					has_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = 0
					}
				}
				clr_mio_flag = RUS_AV_decaying_funds_bonus
				add_mio_funds_gain_factor = -0.03
			}
			else_if = {
				limit = {
					has_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = -1
					}
				}
				clr_mio_flag = RUS_AV_decaying_funds_bonus
				add_mio_funds_gain_factor = -0.02
			}
			else_if = {
				limit = {
					has_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = -2
					}
				}
				clr_mio_flag = RUS_AV_decaying_funds_bonus
				add_mio_funds_gain_factor = -0.01
			}
			else = { #Otherwise lower the funds bonus by 3%
				add_mio_funds_gain_factor = -0.03
				set_variable = { RUS_AV_Recent_Funds_Reduced = 3 }
			}
		}
		else_if = { #Reduce by 2 if there is 1 upgrade
			limit = {
				FROM = { check_variable = { visible_Weekly_funds_decay = 0.02 } }
			}
			modify_mio_flag = {
				flag = RUS_AV_decaying_funds_bonus
				value = -2
			}
			if = { #If below threshold, then remove the flag and funds bonus
				limit = {
					has_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = 0
					}
				}
				clr_mio_flag = RUS_AV_decaying_funds_bonus
				add_mio_funds_gain_factor = -0.02
			}
			else_if = {
				limit = {
					has_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = -1
					}
				}
				clr_mio_flag = RUS_AV_decaying_funds_bonus
				add_mio_funds_gain_factor = -0.01
			}
			else = { #Otherwise lower the funds bonus by 2%
				add_mio_funds_gain_factor = -0.02
				set_variable = { RUS_AV_Recent_Funds_Reduced = 2 }
			}
		}
		else_if = { #Reduce by 1 if there are 2 upgrades
			limit = {
				FROM = { check_variable = { visible_Weekly_funds_decay = 0.01 } }
			}
			modify_mio_flag = {
				flag = RUS_AV_decaying_funds_bonus
				value = -1
			}
			if = { #If below threshold, then remove the flag and funds bonus
				limit = {
					has_mio_flag = {
						flag = RUS_AV_decaying_funds_bonus
						value = 0
					}
				}
				clr_mio_flag = RUS_AV_decaying_funds_bonus
				add_mio_funds_gain_factor = -0.01
			}
			else = { #Otherwise lower the funds bonus by 1%
				add_mio_funds_gain_factor = -0.01
				set_variable = { RUS_AV_Recent_Funds_Reduced = 1 }
			}
		}
	}
	mio:RUS_putilovets_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_putilovets_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_okmo_kr_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_okmo_kr_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_uztm_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_uztm_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_tstz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_tstz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_chtz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_chtz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_bz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_bz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_av_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_av_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_as_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_as_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_dalzavod_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_dalzavod_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_osoavia_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_osoavia_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_duks_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_duks_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_tsagi_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_tsagi_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_gamayun_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_gamayun_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_skorost_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_skorost_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_sokol_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_sokol_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_sokol_construction_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_sokol_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_sokol_production_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_sokol_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_toz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_toz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_vpoz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_vpoz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_imz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_imz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_obukhov_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_obukhov_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_bmz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_bmz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_amo_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_amo_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_naz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_naz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
	mio:RUS_laz_organisation = {
		if = {
			limit = { has_variable = RUS_AV_Recent_Funds_Reduced }
			ROOT = { mio:RUS_av_organisation = { subtract_from_variable = { av_laz_research_speed = PREV.PREV.RUS_AV_Recent_Funds_Reduced } } }
			clear_variable = RUS_AV_Recent_Funds_Reduced
		}
	}
}

RUS_unlock_TOZ_medal_decision = {
	FROM = {
		set_variable = { TOZ_Divisions = 4 }
		hidden_effect = {
			activate_targeted_decision = { target = FROM decision = RUS_TOZ_Medals }
			set_variable = { TOZ_Required_Funds = 500 }
		}
	}
}

RUS_TOZ_Hand_Out_Medals = {
	custom_effect_tooltip = toz_give_medals_tt
	custom_effect_tooltip = tooltip_white_line
	if = {
		limit = {
			RUS_has_TOZ_attack_medal = yes
			RUS_has_TOZ_defense_medal = no
			RUS_has_TOZ_org_medal = no
			RUS_has_TOZ_breakthrough_medal = no
		}
		custom_effect_tooltip = RUS_TOZ_Medal_a_tt
	}
	else_if = {
		limit = {
			RUS_has_TOZ_attack_medal = yes
			RUS_has_TOZ_defense_medal = no
			RUS_has_TOZ_org_medal = yes
			RUS_has_TOZ_breakthrough_medal = no
		}
		custom_effect_tooltip = RUS_TOZ_Medal_ac_tt
	}
	else_if = {
		limit = {
			RUS_has_TOZ_attack_medal = yes
			RUS_has_TOZ_defense_medal = yes
			RUS_has_TOZ_org_medal = yes
			RUS_has_TOZ_breakthrough_medal = no
		}
		custom_effect_tooltip = RUS_TOZ_Medal_abc_tt
	}
	else_if = {
		limit = {
			RUS_has_TOZ_attack_medal = yes
			RUS_has_TOZ_defense_medal = yes
			RUS_has_TOZ_org_medal = yes
			RUS_has_TOZ_breakthrough_medal = yes
		}
		custom_effect_tooltip = RUS_TOZ_Medal_abcd_tt
	}
	else_if = {
		limit = {
			RUS_has_TOZ_attack_medal = yes
			RUS_has_TOZ_defense_medal = yes
			RUS_has_TOZ_org_medal = no
			RUS_has_TOZ_breakthrough_medal = no
		}
		custom_effect_tooltip = RUS_TOZ_Medal_ab_tt
	}
	else_if = {
		limit = {
			RUS_has_TOZ_attack_medal = no
			RUS_has_TOZ_defense_medal = yes
			RUS_has_TOZ_org_medal = no
			RUS_has_TOZ_breakthrough_medal = no
		}
		custom_effect_tooltip = RUS_TOZ_Medal_b_tt
	}
	else_if = {
		limit = {
			RUS_has_TOZ_attack_medal = no
			RUS_has_TOZ_defense_medal = yes
			RUS_has_TOZ_org_medal = no
			RUS_has_TOZ_breakthrough_medal = yes
		}
		custom_effect_tooltip = RUS_TOZ_Medal_bd_tt
	}
	else_if = {
		limit = {
			RUS_has_TOZ_attack_medal = yes
			RUS_has_TOZ_defense_medal = yes
			RUS_has_TOZ_org_medal = no
			RUS_has_TOZ_breakthrough_medal = yes
		}
		custom_effect_tooltip = RUS_TOZ_Medal_abd_tt
	}
	custom_effect_tooltip = tooltip_white_line
	custom_effect_tooltip = RUS_TOZ_Org_reset_tt
	set_temp_variable = { TOZ_Divisions_Save = TOZ_Divisions }
	while_loop_effect = {
		limit = { check_variable = { TOZ_Divisions > 0 } }
		add_to_variable = { RUS_TOZ_total_medals = 1 }
		if = {
			limit = {
				RUS_has_TOZ_attack_medal = yes
				RUS_has_TOZ_defense_medal = no
				RUS_has_TOZ_org_medal = no
				RUS_has_TOZ_breakthrough_medal = no
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_a
				}
				set_unit_organization = 0.01
			}
		}
		else_if = {
			limit = {
				RUS_has_TOZ_attack_medal = yes
				RUS_has_TOZ_defense_medal = no
				RUS_has_TOZ_org_medal = yes
				RUS_has_TOZ_breakthrough_medal = no
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_ac
				}
				set_unit_organization = 0.01
			}
		}
		else_if = {
			limit = {
				RUS_has_TOZ_attack_medal = yes
				RUS_has_TOZ_defense_medal = yes
				RUS_has_TOZ_org_medal = yes
				RUS_has_TOZ_breakthrough_medal = no
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_abc
				}
				set_unit_organization = 0.01
			}
		}
		else_if = {
			limit = {
				RUS_has_TOZ_attack_medal = yes
				RUS_has_TOZ_defense_medal = yes
				RUS_has_TOZ_org_medal = yes
				RUS_has_TOZ_breakthrough_medal = yes
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_abcd
				}
				set_unit_organization = 0.01
			}
		}
		else_if = {
			limit = {
				RUS_has_TOZ_attack_medal = yes
				RUS_has_TOZ_defense_medal = yes
				RUS_has_TOZ_org_medal = no
				RUS_has_TOZ_breakthrough_medal = no
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_ab
				}
				set_unit_organization = 0.01
			}
		}
		else_if = {
			limit = {
				RUS_has_TOZ_attack_medal = no
				RUS_has_TOZ_defense_medal = yes
				RUS_has_TOZ_org_medal = no
				RUS_has_TOZ_breakthrough_medal = no
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_b
				}
				set_unit_organization = 0.01
			}
		}
		else_if = {
			limit = {
				RUS_has_TOZ_attack_medal = no
				RUS_has_TOZ_defense_medal = yes
				RUS_has_TOZ_org_medal = no
				RUS_has_TOZ_breakthrough_medal = yes
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_bd
				}
				set_unit_organization = 0.01
			}
		}
		else_if = {
			limit = {
				RUS_has_TOZ_attack_medal = yes
				RUS_has_TOZ_defense_medal = yes
				RUS_has_TOZ_org_medal = no
				RUS_has_TOZ_breakthrough_medal = yes
			}
			random_country_division = {
				limit = { unit_organization > 0.02 }
				add_history_entry = {
					key = RUS_TOZ_Medal_Award
					subject = "RUS_TOZ_Medal_Award"
					allow = yes
				}
				add_unit_medal_to_latest_entry = {
					unit_medals = RUS_TOZ_Medal_abd
				}
				set_unit_organization = 0.01
			}
		}
		subtract_from_variable = { TOZ_Divisions = 1 }
	}
	set_variable = { TOZ_Divisions = TOZ_Divisions_Save }
}

RUS_Gamayun_Factories = {
	ROOT = {
		set_variable_to_random = { var = RUS_damage min = 0.8 max = 1.0 integer = no }
	}
	if = {
		limit = {
			ROOT = {
				mio:RUS_gamayun_organisation = {
					is_mio_trait_completed = gamayun_upgrade_1_3
				}
			}
		}
		ROOT = {
			subtract_from_variable = { RUS_damage = 0.2 }
		}
	}
	if = {
		limit = {
			ROOT = {
				mio:RUS_gamayun_organisation = {
					has_mio_policy_active = RUS_mio_policy_hire_state_construction_companies
				}
			}
		}
		ROOT = {
			subtract_from_variable = { RUS_damage = 0.2 }
		}
	}
	random_list = {
		var:RUS_Gamayun_Civ_Chance = {
			ROOT = {
				set_variable = { RUS_Gamayun_building = 1 }
				mio:RUS_gamayun_organisation = {
					add_to_variable = { total_campaign_civs = 1 }
					set_temp_variable = { progress_sub_total = 1 }
					subtract_from_temp_variable = { progress_sub_total = ROOT.RUS_damage }
					multiply_temp_variable = { progress_sub_total = 100 }
					add_to_variable = { total_campaign_factory_progress = progress_sub_total }
				}
			}
		}
		var:RUS_Gamayun_Mil_Chance = {
			ROOT = {
				set_variable = { RUS_Gamayun_building = 2 }
				mio:RUS_gamayun_organisation = {
					add_to_variable = { total_campaign_mils = 1 }
					set_temp_variable = { progress_sub_total = 1 }
					subtract_from_temp_variable = { progress_sub_total = ROOT.RUS_damage }
					multiply_temp_variable = { progress_sub_total = 100 }
					add_to_variable = { total_campaign_factory_progress = progress_sub_total }
				}
			}
		}
		var:RUS_Gamayun_Dockyard_Chance = {
			ROOT = {
				set_variable = { RUS_Gamayun_building = 3 }
				mio:RUS_gamayun_organisation = {
					add_to_variable = { total_campaign_dockyards = 1 }
					set_temp_variable = { progress_sub_total = 1 }
					subtract_from_temp_variable = { progress_sub_total = ROOT.RUS_damage }
					multiply_temp_variable = { progress_sub_total = 100 }
					add_to_variable = { total_campaign_factory_progress = progress_sub_total }
				}
			}
		}
	}
	mio:RUS_gamayun_organisation = {
		add_to_variable = { total_campaign_factories = 1 }
		set_variable = { average_campaign_factory_progress = total_campaign_factory_progress }
		divide_variable = { average_campaign_factory_progress = total_campaign_factories }
	}

	if = {
		limit = { check_variable = { RUS_Gamayun_building = 1 } }
		random_owned_controlled_state = {
			limit = {
				state_population > 1
				NOT = { has_state_flag = RUS_Gamayun_Recent_Building }
				impassable = no
				free_building_slots = { building = industrial_complex size > 0 include_locked = no }
			}
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
			meta_effect = {
				text = { damage_building = { type = industrial_complex damage = [DAMAGE] } }
				RUS_DAMAGE = "[?ROOT.RUS_damage|.2]"
			}
			set_state_flag = { flag = RUS_Gamayun_Recent_Building days = 160 value = 1 }
		}
	}
	else_if = {
		limit = { check_variable = { RUS_Gamayun_building = 2 } }
		random_owned_controlled_state = {
			limit = {
				state_population > 1
				NOT = { has_state_flag = RUS_Gamayun_Recent_Building }
				impassable = no
				free_building_slots = { building = arms_factory size > 0 include_locked = no }
			}
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
			meta_effect = {
				text = { damage_building = { type = arms_factory damage = [DAMAGE] } }
				RUS_DAMAGE = "[?ROOT.RUS_damage|.2]"
			}
			set_state_flag = { flag = RUS_Gamayun_Recent_Building days = 160 value = 1 }
		}
	}
	else_if = {
		limit = { check_variable = { RUS_Gamayun_building = 3 } }
		random_owned_controlled_state = {
			limit = {
				state_population > 1
				is_coastal = yes
				NOT = { has_state_flag = RUS_Gamayun_Recent_Building }
				impassable = no
				free_building_slots = { building = dockyard size > 0 include_locked = no }
			}
			add_building_construction = {
				type = dockyard
				level = 1
				instant_build = yes
			}
			meta_effect = {
				text = { damage_building = { type = dockyard damage = [DAMAGE] } }
				RUS_DAMAGE = "[?ROOT.RUS_damage|.2]"
			}
			set_state_flag = { flag = RUS_Gamayun_Recent_Building days = 160 value = 1 }
		}
	}
}

RUS_private_assistance = {
	set_variable_to_random = {
		var = RUS_MIO_Random_Funds
		min = 100
		max = 300
		integer = yes
	}
	meta_effect = {
		text = {
			random_military_industrial_organization = {
				limit = { is_mio_assigned_to_task = yes }
				add_mio_funds = [FUNDS]
			}
		}
		FUNDS = "[?RUS_MIO_Random_Funds]"
	}
}

RUS_amo_effect_1 = {
	set_variable_to_random = {
		var = RUS_MIO_AMO_CIC
		min = 100
		max = 300
		integer = yes
	}
	add_cic = RUS_MIO_AMO_CIC
}

RUS_amo_effect_2 = {
	set_variable_to_random = {
		var = RUS_MIO_AMO_CIC
		min = 100
		max = 300
		integer = yes
	}
	meta_effect = {
		text = {
			add_cic = [FUNDS]
			add_political_power = [FUNDS]
		}
		FUNDS = "[?RUS_MIO_AMO_CIC]"
	}
}

RUS_bz_add_political_interference = {
	meta_effect = {
		text = {
			show_ideas_tooltip = RUS_bz_political_interference_[IDEOLOGY_TOKEN]
			hidden_effect = { add_ideas = RUS_bz_political_interference_[IDEOLOGY_TOKEN] }
		}
		IDEOLOGY_TOKEN = "[?var:current_party_ideology_group.GetTokenKey]"
	}
}

RUS_unlock_gamayun_policies = {
	custom_effect_tooltip = tooltip_white_line
	unlock_mio_policy_tooltip = { policy = RUS_mio_policy_hire_state_construction_companies show_modifiers = no }
	unlock_mio_policy_tooltip = { policy = RUS_mio_policy_buy_out_land_holdings show_modifiers = no }
}

RUS_unlock_obukhov_policies = {
	custom_effect_tooltip = tooltip_white_line
	unlock_mio_policy_tooltip = { policy = RUS_mio_policy_political_interference_obukhov show_modifiers = no }
	unlock_mio_policy_tooltip = { policy = RUS_mio_policy_private_assistance_obukhov show_modifiers = no }
}

RUS_show_obukhov_political_interference = {
	show_ideas_tooltip = RUS_obukhov_political_interference
}

RUS_show_osoavia_political_interference = {
	show_ideas_tooltip = RUS_osoavia_political_interference
}

RUS_add_laz_upgrade_4_1 = {
	FROM = {
		add_doctrine_cost_reduction = {
			name = laz_upgrade_4_1
			cost_reduction = 0.95
			uses = 1
			category = land_doctrine
		}
	}
}

RUS_Balance_Report = {
	if = {
		limit = { amount_taken_ideas = { amount < 1 slots = { political_advisor } } }
		set_variable = { RUS_political_advisor_number = 0 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 0 slots = { political_advisor } } amount_taken_ideas = { amount < 2 slots = { political_advisor } } }
		set_variable = { RUS_political_advisor_number = 1 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 1 slots = { political_advisor } } amount_taken_ideas = { amount < 3 slots = { political_advisor } } }
		set_variable = { RUS_political_advisor_number = 2 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 2 slots = { political_advisor } } }
		set_variable = { RUS_political_advisor_number = 3 }
	}
	if = {
		limit = { amount_taken_ideas = { amount < 1 slots = { high_command } } }
		set_variable = { RUS_military_advisor_number = 0 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 0 slots = { high_command } } amount_taken_ideas = { amount < 2 slots = { high_command } } }
		set_variable = { RUS_military_advisor_number = 1 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 1 slots = { high_command } } amount_taken_ideas = { amount < 3 slots = { high_command } } }
		set_variable = { RUS_military_advisor_number = 2 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 2 slots = { high_command } } }
		set_variable = { RUS_military_advisor_number = 3 }
	}
	if = {
		limit = { amount_taken_ideas = { amount < 1 slots = { industrial_concern } } }
		set_variable = { RUS_industrial_concern_number = 0 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 0 slots = { industrial_concern } } }
		set_variable = { RUS_industrial_concern_number = 1 }
	}
	if = {
		limit = { amount_taken_ideas = { amount < 1 slots = { theorist } } }
		set_variable = { RUS_theorist_number = 0 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 0 slots = { theorist } } }
		set_variable = { RUS_theorist_number = 1 }
	}
	if = {
		limit = { amount_taken_ideas = { amount < 1 slots = { air_chief } } }
		set_variable = { RUS_air_chief_number = 0 }
	}
	else_if = {
		limit = { amount_taken_ideas = { amount > 0 slots = { air_chief } } }
		set_variable = { RUS_air_chief_number = 1 }
	}
	if = {
		limit = { has_idea = civilian_economy }
		set_variable = { RUS_economy_law_number = 1 }
	}
	if = {
		limit = { has_idea = low_economic_mobilisation }
		set_variable = { RUS_economy_law_number = 2 }
	}
	if = {
		limit = { has_idea = partial_economic_mobilisation }
		set_variable = { RUS_economy_law_number = 3 }
	}
	if = {
		limit = { has_idea = war_economy }
		set_variable = { RUS_economy_law_number = 4 }
	}
	if = {
		limit = { has_idea = tot_economic_mobilisation }
		set_variable = { RUS_economy_law_number = 5 }
	}
	if = {
		limit = { has_idea = volunteer_only }
		set_variable = { RUS_conscription_number = 1 }
	}
	if = {
		limit = { has_idea = limited_conscription }
		set_variable = { RUS_conscription_number = 2 }
	}
	if = {
		limit = { has_idea = extensive_conscription }
		set_variable = { RUS_conscription_number = 3 }
	}
	if = {
		limit = { has_idea = service_by_requirement }
		set_variable = { RUS_conscription_number = 4 }
	}
	if = {
		limit = { RUS = { has_war = yes } }
		set_variable = { RUS_war_number = 1 }
	}
	else_if = {
		limit = { RUS = { has_war = no } }
		set_variable = { RUS_war_number = 0 }
	}
	if = {
		limit = { has_country_flag = RUS_savinkov_ai }
		log = "Main Path: Dictatorship (Savinkov)"
	}
	if = {
		limit = { has_country_flag = RUS_republic_ai }
		log = "Main Path: Republic (DemRus)"
	}
	if = {
		limit = { has_country_flag = RUS_empire_ai }
		log = "Main Path: Monarchy (MonRus)"
	}
	if = {
		limit = { has_country_flag = RUS_socialist_ai }
		log = "Main Path: Socialist Republic (SocRus)"
	}
	if = {
		limit = { has_country_flag = RUS_old_svobodnik_ai }
		log = "Subpath: Old Svobodniks"
	}
	if = {
		limit = { has_country_flag = RUS_solidarist_ai }
		log = "Subpath: Solidarists"
	}
	if = {
		limit = { has_country_flag = RUS_ideocrat_ai }
		log = "Subpath: Ideocrats"
	}
	if = {
		limit = { has_country_flag = RUS_rdp_ai }
		log = "Subpath: RDP (SocDem/Syndie)"
	}
	if = {
		limit = { has_country_flag = RUS_sr_ai }
		log = "Subpath: Right SRs (SocLib)"
	}
	if = {
		limit = { has_country_flag = RUS_kadet_ai }
		log = "Subpath: Kadets (MarLib)"
	}
	if = {
		limit = { has_country_flag = RUS_vpp_ai }
		log = "Subpath: VPP (SocCon/AuthDem/PatAut)"
	}
	if = {
		limit = { has_country_flag = RUS_zdobnov_ai }
		log = "Subpath: Zdobnov (RadSoc/PSR-Left)"
	}
	if = {
		limit = { has_country_flag = RUS_kamkov_ai }
		log = "Subpath: Kamkov (RadSoc/PSR-Left)"
	}
	if = {
		limit = { has_country_flag = RUS_ustinov_ai }
		log = "Subpath: Ustinov (Totalist/PSR-Left)"
	}
	if = {
		limit = { has_country_flag = RUS_levitsky_ai }
		log = "Subpath: Levitsky (Syndie/VST-Centre)"
	}
	if = {
		limit = {
			has_country_flag = RUS_sulimov_ai
			has_country_flag = RUS_socialist_ai
		}
		log = "Subpath: Sulimov (Syndie/VST-Centre)"
	}
	if = {
		limit = { has_country_flag = RUS_abramovich_ai }
		log = "Subpath: Abramovich (Syndie/VST-Right)"
	}
	if = {
		limit = { has_country_flag = RUS_kamenev_ai }
		log = "Subpath: Kamenev (Syndie/VST-Left)"
	}
	if = {
		limit = { has_country_flag = RUS_zinovyev_ai }
		log = "Subpath: Zinovyev (Totalist/VST-Left)"
	}
	if = {
		limit = { has_country_flag = RUS_titov_ai }
		log = "Leader: Titov (SocDem/RDP)"
	}
	if = {
		limit = {
			has_country_flag = RUS_sulimov_ai
			has_country_flag = RUS_republic_ai
		}
		log = "Subpath: Sulimov (Syndie/RDP)"
	}
	if = {
		limit = { has_country_flag = RUS_rikhter_ai }
		log = "Leader: Rikhter (SocLib/PSR-Right)"
	}
	if = {
		limit = { has_country_flag = RUS_sorokin_ai }
		log = "Leader: Sorokin (SocLib/PSR-Right)"
	}
	if = {
		limit = { has_country_flag = RUS_fondaminsky_ai }
		log = "Leader: Fondaminsky (SocLib/PSR-Right)"
	}
	if = {
		limit = { has_country_flag = RUS_maklakov_ai }
		log = "Leader: Maklakov (MarLib/KDS)"
	}
	if = {
		limit = { has_country_flag = RUS_kartashyov_ai }
		log = "Leader: Kartashyov (MarLib/KDS)"
	}
	if = {
		limit = { has_country_flag = RUS_dolgorukov_ai }
		log = "Leader: Dolgorukov (MarLib/KDS)"
	}
	if = {
		limit = {
			has_country_flag = RUS_solonevich_ai
			has_country_flag = RUS_republic_ai
		}
		log = "Leader: Solonevich (AuthDem/VPP)"
	}
	if = {
		limit = {
			RUS_ivan_solonevich = { is_second_in_command = yes }
			has_country_flag = RUS_empire_ai
		}
		log = "Leader: Solonevich (PatAut/VPP)"
	}
	if = {
		limit = {
			RUS_georgy_vernadsky = { is_second_in_command = yes }
			has_country_flag = RUS_empire_ai
		}
		log = "Leader: Vernadsky (SocCon/VPP)"
	}
	if = {
		limit = {
			RUS_aleksandr_golitsyn = { is_second_in_command = yes }
			has_country_flag = RUS_empire_ai
		}
		log = "Leader: Golitsyn (SocCon/VPP)"
	}
	if = {
		limit = { has_country_flag = RUS_dmitry_ai }
		log = "Leader: Romanov (SocCon/VPP)"
	}
	log = "Russian divisions total: [?RUS.num_divisions], Russian factory total: [?RUS.num_of_factories], Russian stability: [?RUS.stability], Russian war support: [?RUS.has_war_support]"
	log = "Number of Russian Political Advisors hired: [?RUS_political_advisor_number], Number of Russian Military Advisors hired: [?RUS_military_advisor_number]"
	log = "Number of Russian Theorists hired: [?RUS_theorist_number], Number of Russian Industrial Concern hired: [?RUS_industrial_concern_number]"
	log = "Number of Russian Air Chiefs hired: [?RUS_air_chief_number], Russian Economy Law: [?RUS_economy_law_number]"
	log = "Russian Conscription Law: [?RUS_conscription_number], Is Russia at war?: [?RUS_war_number]"
}

RUS_setup_custom_russian_MIOs = {
	if = {
		limit = { has_dlc_aat = yes }
		#Setup the R&D MIOs
		every_military_industrial_organization = {
			limit = {
				OR = {
					is_military_industrial_organization = RUS_chtz_organisation
					is_military_industrial_organization = RUS_tsagi_organisation
					is_military_industrial_organization = RUS_as_organisation
					is_military_industrial_organization = RUS_vpoz_organisation
					is_military_industrial_organization = RUS_bmz_organisation
				}
			}
			set_variable = { max_research_speed = 0.5 }
			set_variable = { weekly_research_speed_gain = 0.01 }
			set_variable = { weekly_funds_requirement = 9 }
		}
		#Setup the XP MIOs
		every_military_industrial_organization = {
			limit = {
				OR = {
					is_military_industrial_organization = RUS_obukhov_organisation
					is_military_industrial_organization = RUS_osoavia_organisation
					is_military_industrial_organization = RUS_bz_organisation
				}
			}
			set_variable = { weekly_funds_requirement = 9 }
			set_variable = { xp_gain_loc = 0.2 }
			set_variable = { total_campaign_xp = 0 }
		}
		#Setup AMO
		mio:RUS_amo_organisation = {
			set_variable = { CIC_bonus = 500 }
			set_variable = { total_campaign_CIC = 0 }
		}
		#Setup Gamayun
		mio:RUS_gamayun_organisation = {
			set_variable = { Civ_chance_loc = 33 }
			set_variable = { Mil_chance_loc = 33 }
			set_variable = { Dockyard_chance_loc = 33 }
			set_variable = { Min_Progress_loc = 0 }
			set_variable = { Max_Progress_loc = 20 }
			set_variable = { Min_Days_loc = 160 }
			set_variable = { Max_Days_loc = 200 }
			set_variable = { total_campaign_factories = 0 }
			set_variable = { total_campaign_civs = 0 }
			set_variable = { total_campaign_mils = 0 }
			set_variable = { total_campaign_dockyards = 0 }
			set_variable = { total_campaign_factory_progress = 0 }
			set_variable = { average_campaign_factory_progress = 0 }
		}
		#Setup AV
		mio:RUS_av_organisation = {
			set_variable = { Funds_Bonus = 1.00 }
			set_variable = { Weekly_funds_decay = 0.03 }
			set_variable = { Number_of_funds_decay_granted = 1 }
			set_variable = { Funds_Bonus_loc = 100 }
			set_variable = { Weekly_funds_decay_loc = 3 }
			set_variable = { total_campaign_funds_bonus = 0 }
		}
		#Setup TsTZ
		mio:RUS_tstz_organisation = {
			set_variable = { tstz_eff_cap_counter = 9 }
			set_variable = { tstz_eff_gro_counter = 9 }
			set_variable = { tstz_resources_counter = 9 }
			set_variable = { tstz_conversion_counter = 9 }
		}
	}
}

RUS_unlock_chtz_trait = {
	FROM = {
		hidden_effect = {
			if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.1 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_0 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.09 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.2 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_1 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.19 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.3 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_2 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.29 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.4 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_3 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.39 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.5 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_4 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.49 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.6 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_5 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.59 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.7 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_6 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.69 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.8 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_7 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.79 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 0.9 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_8 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.89 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 1.0 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_9 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 0.99 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 1.1 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_10 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 1.09 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 1.2 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_11 }
			}
			else_if = {
				limit = {
					mio:RUS_chtz_organisation = { check_variable = { research_bonus > 1.19 } }
					mio:RUS_chtz_organisation = { check_variable = { research_bonus < 1.3 } }
				}
				mio:RUS_chtz_organisation = { complete_mio_trait = chtz_upgrade_4_1_tankograd_12 }
			}
		}
	}
}

RUS_unlock_tsagi_trait = {
	FROM = {
		hidden_effect = {
			if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.1 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_0 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.09 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.2 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_1 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.19 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.3 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_2 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.29 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.4 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_3 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.39 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.5 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_4 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.49 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.6 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_5 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.59 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.7 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_6 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.69 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.8 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_7 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.79 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 0.9 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_8 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.89 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 1.0 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_9 }
			}
			else_if = {
				limit = {
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus > 0.99 } }
					mio:RUS_tsagi_organisation = { check_variable = { research_bonus < 1.1 } }
				}
				mio:RUS_tsagi_organisation = { complete_mio_trait = tsagi_upgrade_4_1_10 }
			}
		}
	}
}

RUS_unlock_as_trait = {
	FROM = {
		hidden_effect = {
			if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.1 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_0 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.09 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.2 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_1 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.19 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.3 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_2 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.29 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.4 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_3 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.39 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.5 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_4 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.49 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.6 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_5 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.59 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.7 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_6 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.69 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.8 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_7 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.79 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 0.9 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_8 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.89 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.0 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_9 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 0.99 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.1 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_10 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 1.09 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.2 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_11 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 1.19 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.3 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_12 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 1.29 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.4 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_13 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 1.39 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.5 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_14 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 1.49 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.6 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_15 }
			}
			else_if = {
				limit = {
					mio:RUS_as_organisation = { check_variable = { research_bonus > 1.59 } }
					mio:RUS_as_organisation = { check_variable = { research_bonus < 1.7 } }
				}
				mio:RUS_as_organisation = { complete_mio_trait = as_upgrade_4_1_16 }
			}
		}
	}
}

RUS_set_up_peace_conference_with_germany = {
	if = {
		limit = {
			NOT = { country_exists = RSA }
			RUS = { has_idea = RUS_patriotic_war_3 }
		}
		set_global_flag = RUS_peace_refused_by_player
	}
	else = {
		RUS = {
			every_owned_state = {
				limit = {
					OR = {
						AND = {
							NOT = { check_variable = { annexation_target = 219.id } } #Moscow
							NOT = { check_variable = { annexation_target = 234.id } } #Ekaterinodar
							NOT = { check_variable = { annexation_target = 329.id } } #Tuva
							NOT = { check_variable = { annexation_target = 570.id } } #Novosibirsk
							NOT = { check_variable = { annexation_target = 583.id } } #Petropavlovsk
							NOT = { check_variable = { annexation_target = 408.id } } #Vladivostok
							OR = {
								GER = { has_completed_focus = GER_clash_of_civilisations }
								NOT = { check_variable = { annexation_target = 232.id } } #Dagestan
							}
						}
						any_country_with_core = {
							has_war_with = RUS
							is_russian_tag = no
						}
						RUS = {
							any_enemy_country = {
								is_russian_tag = no
								OR = {
									PREV.PREV = { is_claimed_by = PREV }
									PREV.PREV = { has_variable = ambition_area_@PREV }
								}
							}
						}
					}
				}
				set_state_flag = RUS_to_peace_conference
			}
		}

		### handle FER
		FER = {
			if = {
				limit = {
					exists = yes
					has_war_with = RUS
				}
				set_temp_variable = { target = FER }
				every_controlled_state = {
					limit = {
						owner = { is_ally_with = RUS }
						any_neighbor_state = {
							impassable = no
							OR = {
								is_coastal = yes
								owner = { is_ally_with = FER }
								controller = { is_ally_with = FER }
							}
						}
						NOT = { has_state_flag = RUS_to_peace_conference }
					}
					transfer_state_during_war = yes
				}
			}
		}

		### handle RSA
		if = {
			limit = { NOT = { country_exists = RSA } }
			set_temp_variable = { RUS_set_up_defeated_russia = 1 }
		}
		RUS = {
			delete_unit = { disband = yes }
			set_temp_variable = { target = RSA }
			every_owned_state = {
				limit = { NOT = { has_state_flag = RUS_to_peace_conference } }
				add_core_of = var:target
				remove_claim_by = var:target
				transfer_state_during_war = yes
			}
			if = {
				limit = { NOT = { country_exists = FER } }
				if = {
					limit = { RSA = { is_ai = yes } }
					send_equipment_fraction = { target = RSA value = 0.8 }
				}
				else = {
					send_equipment_fraction = { target = RSA value = 0.3 }
				}
			}
			else_if = {
				limit = { RSA = { is_ai = yes } }
				send_equipment_fraction = { target = RSA value = 0.6 }
			}
			else = {
				send_equipment_fraction = { target = RSA value = 0.2 }
			}
			transfer_navy = { target = RSA }
		}
		if = {
			limit = { has_variable = RUS_set_up_defeated_russia }
			RUS = {
				RSA = { transfer_technology_without_doctrines = yes }
				RUS_nikolay_martyanov = { set_nationality = RSA }
				if = {
					limit = { has_country_flag = RUS_semyonov_killed }
					RUS_pavel_bermondt_avalov = { set_nationality = RSA }
				}
			}
			RSA = {
				RUS_setup_demrus_postwar = yes
				if = {
					limit = {
						GER = {
							OR = {
								has_completed_focus = GER_clash_of_civilisations
								has_country_leader = { character = GER_max_bauer }
							}
						}
					}
					add_ideas = RUS_treaty_of_moscow_2
				}
				else = {
					add_ideas = RUS_treaty_of_moscow
				}
			}
		}
		else = {
			RSA = {
				RUS_setup_demrus_postwar = yes
				remove_puppet_and_leave_faction = yes
				separate_peace_all_wars = yes
				if = {
					limit = {
						GER = {
							OR = {
								has_completed_focus = GER_clash_of_civilisations
								has_country_leader = { character = GER_max_bauer }
							}
						}
					}
					add_ideas = RUS_treaty_of_moscow_2
				}
				else = {
					add_ideas = RUS_treaty_of_moscow
				}
				if = {
					limit = { owns_state = 961 } #Chechnya
					give_resource_rights = {
						receiver = ROOT
						state = 961
						resources = { oil }
					}
				}
				if = {
					limit = { owns_state = 232 } #Dagestan
					give_resource_rights = {
						receiver = ROOT
						state = 232
						resources = { oil }
					}
				}

				#If FER agreed to join Boldyrev, annex them into RSA
				if = {
					limit = { NOT = { has_global_flag = RUS_boldyrev_semyonov_pact } }
					FER = { country_event = { id = fer.52 days = 7 } }
				}
				else = {
					FER = { country_event = { id = rsa.20 days = 7 } }
				}
			}
		}
		if = {
			limit = { RUS = { has_idea = RUS_patriotic_war_3 } }
			set_global_flag = TEMPORARY_DISABLED_FACTION_POPUP
			add_to_faction = RSA
		}

		### news event
		news_event = { id = rusnews.13 days = 2 }

		### cleanup
		every_state = { clr_state_flag = RUS_to_peace_conference }
	}
}
