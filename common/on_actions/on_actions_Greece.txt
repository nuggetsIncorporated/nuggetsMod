on_actions = {
	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			FROM = {
				if = {
					limit = { original_tag = GRE }
					clear_array = GRE_megali_enemies

					#Dynamic Greece got annexed by someone else, move the leaders back to the base tag
					if = {
						limit = { is_dynamic_country = yes }
						every_character = {
							limit = {
								is_generic_character = no
								OR = {
									NOT = {
										has_character_flag = GRE_royalist
										has_character_flag = GRE_socialist
									}
									is_unit_leader = no
								}
							}
							set_nationality = GRE
						}
						GRE = { activate_advisor = GRE_vouli_ton_ellinon_sic }
					}
					#Clear the Second War for Thrace flags
					BUL = { clr_country_flag = BUL_second_war_for_thrace }
					GRE = { clr_country_flag = GRE_second_war_for_thrace }
				}
				if = {
					limit = { is_in_array = { GRE.GRE_megali_enemies = THIS } }
					remove_from_array = { GRE.GRE_megali_enemies = THIS }
				}
			}

			#reset capital
			if = {
				limit = {
					original_tag = GRE
					FROM = { original_tag = GRE }
					47 = { is_owned_and_controlled_by = ROOT }
				}
				set_capital = { state = 47 remember_old_capital = no }
			}
		}
	}

	on_ruling_party_change = {
		effect = {
			if = {
				limit = { original_tag = GRE }
				GRE_uncomplete_focuses = yes
			}
		}
	}

	on_new_term_election = {
		effect = {
			if = {
				limit = { tag = GRE }
				country_event = gre.50 #Pre-Monarchy referendum
				country_event = gre.51 #Post-Monarchist Victory
				country_event = gre.52 #Post-Republican Victory
				country_event = gre.156 #Second Hellenic Congress
				country_event = gre.157 #Third Hellenic Congress
			}
		}
	}

	#ROOT is winner #FROM gets annexed - This fires just before FROM gets annexed, meaning the country and everything it owns still exists. It will also fire on_annex and on_civil_war_end
	on_civil_war_end_before_annexation = {
		effect = {
			if = {
				limit = { original_tag = GRE }
				# if Greece was in a faction, readd them
				if = {
					limit = {
						has_variable = GRE_previous_faction_leader
						var:GRE_previous_faction_leader = {
							is_faction_leader = yes
							NOT = {
								has_war_with = PREV
								any_allied_country = { has_war_with = PREV }
							}
						}
					}
					set_global_flag = TEMPORARY_DISABLED_FACTION_POPUP
					var:GRE_previous_faction_leader = {
						diplomatic_relation = {
							country = PREV
							relation = guarantee
							active = no
						}
						diplomatic_relation = {
							country = PREV
							relation = non_aggression_pact
							active = no
						}
						diplomatic_relation = {
							country = PREV
							relation = military_access
							active = no
						}
						PREV = {
							diplomatic_relation = {
								country = PREV
								relation = military_access
								active = no
							}
						}
						add_to_faction = PREV
					}
					clear_variable = GRE_previous_faction_leader
				}
				if = {
					limit = { is_dynamic_country = yes } #revolter won
					set_cosmetic_tag = GRE_civil_war

					#move the characters to the new tag
					FROM = {
						every_character = {
							limit = {
								is_generic_character = no
								OR = {
									is_unit_leader = yes
									is_advisor = yes
								}
								NOT = {
									has_character_flag = GRE_royalist
									has_character_flag = GRE_socialist
								}
							}
							set_nationality = ROOT
						}
					}
					activate_advisor = GRE_vouli_ton_ellinon_sic
					if = {
						limit = { has_socialist_government = yes }
						news_event = { id = gre.507 days = 1 }
					}
					else = {
						news_event = { id = gre.508 days = 1 }
					}
				}
				else_if = {
					limit = {
						OR = {
							has_cosmetic_tag = GRE_civil_war
							has_cosmetic_tag = GRE_civil_war_socialist
						}
					}
					drop_cosmetic_tag = yes
				}
			}
		}
	}

	#ROOT is winner #FROM is loser
	on_peaceconference_ended = {
		effect = {
			if = {
				limit = {
					original_tag = GRE
					is_in_array = { GRE_megali_enemies = FROM }
				}
				remove_from_array = { GRE_megali_enemies = FROM }
			}
			else_if = {
				limit = {
					FROM = { original_tag = GRE }
					is_in_array = { FROM.GRE_megali_enemies = ROOT }
				}
				remove_from_array = { FROM.GRE_megali_enemies = ROOT }
			}
		}
	}
}
