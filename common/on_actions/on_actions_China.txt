on_actions = {
	on_daily = {
		effect = {
			if = {
				limit = { has_country_flag = china_alignment_gui_visibility }
				CHN_calculate_china_alignment_gui_effect = yes
				CHN_update_china_alignment_gui = yes
			}
		}
	}

	on_startup = {
		effect = {
			set_variable = { global.china_target_tag = QIE }
			for_each_scope_loop = {
				array = global.china_tags_array
				every_unit_leader = { set_character_flag = CHN_original_unit_leader }

				#integration setup
				524 = { enable_state_integration_80_compliance = yes } #Taiwan

				if = {
					limit = { has_dlc_aat = yes }
					###- MIO Decision Setup - add half funds if they start off
					#Major Arsenals
					716 = { CHN_setup_major_arsenal_decision_effect = yes } #Liaoning
					1072 = { CHN_setup_major_arsenal_decision_effect = yes } #East Shanxi
					1059 = { CHN_setup_major_arsenal_decision_effect = yes } #Kaifeng
					1048 = { CHN_setup_major_arsenal_decision_effect = yes } #Wuhan
					592 = { CHN_setup_major_arsenal_decision_effect = yes } #Canton
					613 = { CHN_setup_major_arsenal_decision_effect = yes } #Nanjing
					743 = { CHN_setup_major_arsenal_decision_effect = yes } #Shanghai
					#Minor Small Arms Arsenals
					597 = { CHN_setup_minor_small_arms_arsenal_decision_effect = yes } #Jinan
					605 = { CHN_setup_minor_small_arms_arsenal_decision_effect = yes } #Chengdu
					1051 = { CHN_setup_minor_small_arms_arsenal_decision_effect = yes } #Guixi
					594 = { CHN_setup_minor_small_arms_arsenal_decision_effect = yes } #Nanning
					#Minor Support Equipment Arsenals
					325 = { CHN_setup_minor_support_equipment_arsenal_decision_effect = yes } #Yunnan
					602 = { CHN_setup_minor_support_equipment_arsenal_decision_effect = yes } #zhuzhou
					617 = { CHN_setup_minor_support_equipment_arsenal_decision_effect = yes } #Dihua
					#Minor Artillery Arsenals
					283 = { CHN_setup_minor_artillery_arsenal_decision_effect = yes } #Lanzhou
					#Major Dockyards
					716 = { CHN_setup_major_dockyards_decision_effect = yes } #Liaoning
					743 = { CHN_setup_major_dockyards_decision_effect = yes } #Shanghai
					747 = { CHN_setup_major_dockyards_decision_effect = yes } #Fuzhou
					592 = { CHN_setup_major_dockyards_decision_effect = yes } #Canton
					609 = { CHN_setup_major_dockyards_decision_effect = yes } #Tianjin
				}
			}
			every_state = {
				limit = {
					OR = {
						is_mongolia = yes
						is_tibet = yes
						is_xinjiang = yes
					}
				}
				for_each_scope_loop = {
					array = global.china_tags_array
					PREV = { enable_state_integration_80_compliance = yes }
				}
			}
			every_state = {
				limit = { is_core_china = yes }
				for_each_scope_loop = {
					array = global.china_tags_array
					PREV = { enable_state_integration_50_compliance = yes }
				}
			}

			# Initialise government ambition areas (so that they are separate from their 'default' ambitions)
			FNG = { set_potential_national_government = yes }
			QIE = { set_potential_national_government = yes }

			# Save LEP and CHI as SZH and LKT - needed for alignment scripted GUI
			LEP = { save_global_event_target_as = SZH_leader }
			CHI = { save_global_event_target_as = LKT_leader }

			# Initialise resource decisions for Chinese tags
			QIE = {
				china_setup_resources_decisions = yes
				set_temp_variable = { coalition_partner_var = token:paternal_autocrat }
				add_to_coalition = yes
			}

			# Add AI strategies (crashes in history file)
			LEP = {
				add_ai_strategy = {
					type = diplo_action_desire
					id = GXC
					target = call_allies
					value = -99999
				}
				add_ai_strategy = {
					type = diplo_action_acceptance
					id = GXC
					target = join_allies
					value = -99999
				}
				add_ai_strategy = {
					type = diplo_action_desire
					id = HNN
					target = call_allies
					value = -99999
				}
				add_ai_strategy = {
					type = diplo_action_acceptance
					id = HNN
					target = join_allies
					value = -99999
				}
			}
			GXC = {
				add_ai_strategy = {
					type = diplo_action_desire
					id = LEP
					target = join_allies
					value = -99999
				}
				add_ai_strategy = {
					type = diplo_action_acceptance
					id = LEP
					target = call_allies
					value = -99999
				}
			}
			HNN = {
				add_ai_strategy = {
					type = diplo_action_desire
					id = LEP
					target = join_allies
					value = -99999
				}
				add_ai_strategy = {
					type = diplo_action_acceptance
					id = LEP
					target = call_allies
					value = -99999
				}
			}

			# Initiate starting coalitions
			SHX = {
				set_temp_variable = { coalition_partner_var = token:market_liberal }
				add_to_coalition = yes
				set_temp_variable = { coalition_partner_var = token:social_conservative }
				add_to_coalition = yes
				set_temp_variable = { coalition_partner_var = token:authoritarian_democrat }
				add_to_coalition = yes
				set_temp_variable = { coalition_partner_var = token:national_populist }
				add_to_coalition = yes
			}
			GXC = {
				set_temp_variable = { coalition_partner_var = token:social_democrat }
				add_to_coalition = yes
				set_temp_variable = { coalition_partner_var = token:market_liberal }
				add_to_coalition = yes
			}
			YUN = {
				set_temp_variable = { coalition_partner_var = token:paternal_autocrat }
				add_to_coalition = yes
			}
			FNG = {
				set_temp_variable = { coalition_partner_var = token:authoritarian_democrat }
				add_to_coalition = yes
			}
			SZC = {
				set_temp_variable = { coalition_partner_var = token:market_liberal }
				add_to_coalition = yes
				set_temp_variable = { coalition_partner_var = token:social_conservative }
				add_to_coalition = yes
			}

			#Initialise state flags
			326 = { set_state_flag = guangdong_province_state } #Hong Kong
			591 = { set_state_flag = guangdong_province_state } #Qiongya
			592 = { set_state_flag = guangdong_province_state } #Guangzhou
			593 = { set_state_flag = guangdong_province_state } #Yuehai
			728 = { set_state_flag = guangdong_province_state } #Guangzhouwan
			729 = { set_state_flag = guangdong_province_state } #Macau
			800 = { set_state_flag = guangdong_province_state } #Shaoguan
			801 = { set_state_flag = guangdong_province_state } #Shantou
			1012 = { set_state_flag = guangdong_province_state } #Chaoxun
			1056 = { set_state_flag = guangdong_province_state } #Qinlian

			594 = { set_state_flag = guangxi_province_state } #Nanning
			599 = { set_state_flag = guangxi_province_state } #Guilin
			1054 = { set_state_flag = guangxi_province_state } #Tiannan
			1055 = { set_state_flag = guangxi_province_state } #Liujiang

			608 = { set_state_flag = zhili_province_state } #Jingzhao
			609 = { set_state_flag = zhili_province_state } #Tianjin
			614 = { set_state_flag = zhili_province_state } #Tangshan
			1061 = { set_state_flag = zhili_province_state } #Daming
			1062 = { set_state_flag = zhili_province_state } #Baoding
			1068 = { set_state_flag = zhili_province_state } #Qinhuangdao

			607 = { set_state_flag = henan_province_state } #Heluo
			1058 = { set_state_flag = henan_province_state } #Ruyang
			1059 = { set_state_flag = henan_province_state } #Kaifeng
			1060 = { set_state_flag = henan_province_state } #Hebi

			620 = { set_state_flag = hubei_province_state } #Xiangyang
			1048 = { set_state_flag = hubei_province_state } #Wuhan
			1049 = { set_state_flag = hubei_province_state } #Shihe

			602 = { set_state_flag = hunan_province_state } #Xiangjiang
			1013 = { set_state_flag = hunan_province_state } #Chenyuan

			598 = { set_state_flag = jiangsu_province_state } #Huaiyang
			613 = { set_state_flag = jiangsu_province_state } #Jinling
			743 = { set_state_flag = jiangsu_province_state } #Shanghai
			1047 = { set_state_flag = jiangsu_province_state } #Xuhai
			1075 = { set_state_flag = jiangsu_province_state } #Nantong

			600 = { set_state_flag = jiangxi_province_state } #Gannan
			1044 = { set_state_flag = jiangxi_province_state } #Yuzhang
			1045 = { set_state_flag = jiangxi_province_state } #Xunyang

			622 = { set_state_flag = shaanxi_province_state } #Yulin
			799 = { set_state_flag = shaanxi_province_state } #Guanzhong

			615 = { set_state_flag = shanxi_province_state } #Eastern Shanxi
			1072 = { set_state_flag = shanxi_province_state } #Central Shanxi

			597 = { set_state_flag = shandong_province_state } #Jinan
			744 = { set_state_flag = shandong_province_state } #Qingdao
			996 = { set_state_flag = shandong_province_state } #Weihaiwei
			1063 = { set_state_flag = shandong_province_state } #Dezhou
			1064 = { set_state_flag = shandong_province_state } #Linyi
			1065 = { set_state_flag = shandong_province_state } #Jiaodong

			606 = { set_state_flag = anhui_province_state } #Anqing
			1014 = { set_state_flag = anhui_province_state } #Wuhu
			1050 = { set_state_flag = anhui_province_state } #Huaisi

			596 = { set_state_flag = zhejiang_province_state } #Qiantang
			746 = { set_state_flag = zhejiang_province_state } #Ningbo
			803 = { set_state_flag = zhejiang_province_state } #Wenzhou
			1067 = { set_state_flag = zhejiang_province_state } #Jinhua
			1069 = { set_state_flag = zhejiang_province_state } #Lishui

			595 = { set_state_flag = fujian_province_state } #Jian'an
			747 = { set_state_flag = fujian_province_state } #Fuzhou
			802 = { set_state_flag = fujian_province_state } #Xiamen
			1046 = { set_state_flag = fujian_province_state } #Tingzhang
			1066 = { set_state_flag = fujian_province_state } #Minhou

			601 = { set_state_flag = sichuan_province_state } #Xikang
			605 = { set_state_flag = sichuan_province_state } #Chengdu
			650 = { set_state_flag = sichuan_province_state } #Chongqing
			661 = { set_state_flag = sichuan_province_state } #Daxian
			788 = { set_state_flag = sichuan_province_state } #Aba
			1015 = { set_state_flag = sichuan_province_state } #Liangshan

			603 = { set_state_flag = guizhou_province_state } #Qiangzhong
			1051 = { set_state_flag = guizhou_province_state } #Guixi
			1052 = { set_state_flag = guizhou_province_state } #Zhenyuan

			325 = { set_state_flag = yunnan_province_state } #Kunming
			816 = { set_state_flag = yunnan_province_state } #Dali
			1111 = { set_state_flag = yunnan_province_state } #Hukawng Valley

			353 = { set_state_flag = qinghai_province_state } #Xining
			604 = { set_state_flag = qinghai_province_state } #Yushu

			283 = { set_state_flag = gansu_province_state } #Lanzhou
			774 = { set_state_flag = gansu_province_state } #Hexi Corridor

			348 = { set_state_flag = ningxia_province_state } #Ningxia

			328 = { set_state_flag = fengtian_province_state } #Andong
			715 = { set_state_flag = fengtian_province_state } #Liaobei
			716 = { set_state_flag = fengtian_province_state } #Liaoning
			745 = { set_state_flag = fengtian_province_state } #Dalian

			717 = { set_state_flag = jilin_province_state } #Hejiang
			885 = { set_state_flag = jilin_province_state } #Songjiang
			886 = { set_state_flag = jilin_province_state } #Jilin
			408 = { set_state_flag = jilin_province_state } #Vladivostok
			409 = { set_state_flag = jilin_province_state } #Khabarovsk
			537 = { set_state_flag = jilin_province_state } #South Sakhalin
			577 = { set_state_flag = jilin_province_state } #North Sakhalin

			714 = { set_state_flag = heilongjiang_province_state } #Qiqihar
			883 = { set_state_flag = heilongjiang_province_state } #Heilongjiang
			884 = { set_state_flag = heilongjiang_province_state } #Xing'an
			560 = { set_state_flag = heilongjiang_province_state } #Nikolayevsk
			561 = { set_state_flag = heilongjiang_province_state } #Amur
			657 = { set_state_flag = heilongjiang_province_state } #Blagoveshchensk

			610 = { set_state_flag = rehe_province_state } #Rehe

			621 = { set_state_flag = suiyuan_province_state } #Ulanqab
			616 = { set_state_flag = suiyuan_province_state } #Ordos

			611 = { set_state_flag = chahar_province_state } #Chahar
			612 = { set_state_flag = chahar_province_state } #Xilingol

			287 = { set_state_flag = xinjiang_province_state } #Hotan
			617 = { set_state_flag = xinjiang_province_state } #Dihua
			618 = { set_state_flag = xinjiang_province_state } #Dzungaria
			619 = { set_state_flag = xinjiang_province_state } #Kashgar
			897 = { set_state_flag = xinjiang_province_state } #Aksai Chin
			1042 = { set_state_flag = xinjiang_province_state } #Badakhshan
			1083 = { set_state_flag = xinjiang_province_state } #Kumul
			1085 = { set_state_flag = xinjiang_province_state } #Taklamakan Desert

			524 = { set_state_flag = taiwan_province_state } #Taiwan

			#Initialise state modifiers
			every_state = {
				limit = {
					is_core_china = yes
					owner = { is_chinese_tag = yes }
					is_possible_legation_cities_state = no
					NOT = { has_state_flag = ningxia_province_state }
					NOT = { has_state_flag = qinghai_province_state }
					NOT = { has_state_flag = suiyuan_province_state }
					NOT = { has_state_flag = chahar_province_state }
					NOT = { has_state_flag = xinjiang_province_state }
					NOT = { has_state_flag = taiwan_province_state }
					NOT = { state = 601 } #Xikang
					NOT = { state = 774 } #Hexi Corridor
					NOT = { state = 788 } #Aba
					NOT = { state = 816 } #Dali
					NOT = { state = 1015 } #Liangshan
				}
				add_dynamic_modifier = { modifier = china_dense_rural_infrastructure }
			}

			#Initialise LKMT exile status
			CHI = { become_exiled_in = { target = FRA legitimacy = 10 } }
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			# Disable Mantetsu
			if = {
				limit = {
					FROM = { tag = FNG }
				}
				FNG = {
					FNG_CA_remove = yes
					FNG_mantetsu_collapse = yes
					if = {
						limit = { has_dynamic_modifier = { modifier = FNG_factionalism_modifier } }
						remove_dynamic_modifier = { modifier = FNG_factionalism_modifier }
					}
				}
				if = {
					limit = {
						NOT = { has_global_flag = JAP_defeated_by_china }
					}
					JAP = { country_event = { id = fengtian.136 } } #Japan notified that FNG has fallen
				}
			}
			else_if = {
				limit = { FROM = { tag = MAN } }
				JAP = { remove_ideas = MAN_mantetsu_profits }
				MAN = { remove_ideas = MAN_mantetsu_influence_idea }
			}

			# Enable Manchu alignment and swap zhili flags to republican if QIE is annexed
			else_if = {
				limit = { FROM = { tag = QIE } }
				QIE_enable_manchu_qing_alignment = yes
			}
			# Kuomintang Exiles arrive in SHX
			else_if = {
				limit = {
					FROM = {
						tag = CHI
						CHI_is_phase_one_trigger = yes
					}
				}
				SHX = { country_event = CHI.earlygame.300 }
			}
			else_if = {
				limit = {
					FROM = {
						tag = CHI
						CHI_is_phase_one_trigger = yes
					}
					NOT = { has_global_flag = QIE_manchu_restoration }
				}
				QIE = { country_event = { id = qieflavor.103 days = 7 } }
			}

			# Move the holder of the British vote
			if = {
				limit = {
					FROM = {
						tag = AST
						LEC_is_legation_council_member = yes
					}
					OR = {
						GBR = { is_faction_leader = yes }
						CAN = { is_faction_leader = yes }
					}
				}
				if = {
					limit = { GBR = { is_faction_leader = yes } }
					GBR = { save_event_target_as = new_holder }
				}
				else = {
					CAN = { save_event_target_as = new_holder }
				}
				event_target:new_holder = {
					if = {
						limit = { FROM = { LEC_has_legation_council_vote = yes } }
						LEC_add_to_legation_council = yes
					}
					else = {
						LEC_add_to_legation_council_observer = yes
					}
					if = {
						limit = { has_country_flag = AST_hong_kong }
						clr_country_flag = AST_hong_kong
						event_target:new_holder = { set_country_flag = AST_hong_kong }
					}
				}
				FROM = {
					if = {
						limit = { has_country_flag = AST_hong_kong }
						clr_country_flag = AST_hong_kong
						event_target:new_holder = { set_country_flag = AST_hong_kong }
					}
					if = {
						limit = { LEC_has_legation_council_vote = yes }
						save_event_target_as = LEC_AST_had_vote
					}
					LEC_remove_from_legation_council = yes
				}
				event_target:new_holder = { country_event = lecbrits.29 }
			}

			# Remove from Legation Council
			if = {
				limit = {
					FROM = { LEC_is_legation_council_member = yes }
				}
				if = {
					limit = {
						FROM = { tag = BEL }
						country_exists = LEC
					}
					LEC = {
						country_event = { id = lec.48 days = 3 random_hours = 168 }
					}
				}
				else = {
					FROM = { LEC_remove_from_legation_council = yes }
				}
			}

			#Move the China target and clear the china_united flag if it exists
			if = {
				limit = {
					FROM = { tag = CHN }
				}
				if = {
					limit = {
						has_global_flag = china_united
					}
					clr_global_flag = china_united
				}
				find_next_chinese_target = yes
			}

			#Disable Legation Council
			if = {
				limit = {
					FROM = { tag = LEC }
				}
				every_other_country = {
					limit = { LEC_is_legation_council_member = yes }
					country_event = lec.106
				}
			}

			# Remove Qing's German influence
			else_if = {
				limit = {
					FROM = { tag = GER }
				}
				QIE = {
					if = {
						limit = {
							has_dynamic_modifier = { modifier = QIE_german_influence_dynamic_modifier }
						}
						clear_variable = var_PEKCOM_influence
						remove_dynamic_modifier = { modifier = QIE_german_influence_dynamic_modifier }
						set_political_party = {
							ideology = market_liberal
							popularity = 0
						}
					}
				}
			}

			# Remove the AOG idea
			if = {
				limit = {
					FROM = {
						OR = {
							tag = LEP
							tag = QIE
						}
					}
				}
				GEA = { country_event = Ostasien.210 }
			}

			#Clear United Front rules
			FROM = {
				if = {
					limit = { tag = event_target:china_united_front_leader }
					#Force Capitulate Northwestern Cliques if applicable
					if = {
						limit = {
							country_exists = XSM
							XSM = { has_country_flag = was_in_united_front }
							XSM = { has_war = yes }
							XSM = { has_capitulated = no }
							XSM = { is_ai = yes }
						}
						XSM = { force_capitulate = yes }
					}
					if = {
						limit = {
							country_exists = KUM
							KUM = { has_country_flag = was_in_united_front }
							KUM = { has_war = yes }
							KUM = { has_capitulated = no }
							KUM = { is_ai = yes }
						}
						KUM = { force_capitulate = yes }
					}
					if = {
						limit = {
							country_exists = SIK
							SIK = { has_country_flag = was_in_united_front }
							SIK = { has_war = yes }
							SIK = { has_capitulated = no }
							SIK = { is_ai = yes }
						}
						SIK = { force_capitulate = yes }
					}
					every_possible_country = {
						limit = { has_country_flag = china_united_front_can_join_factions }
						clr_country_flag = china_united_front_can_join_factions
						clear_rule = { can_join_factions = yes }
					}
					every_possible_country = {
						limit = { has_country_flag = was_in_united_front }
						clr_country_flag = was_in_united_front
						clear_rule = { can_not_declare_war = yes }
					}
					clear_global_event_target = china_united_front_leader
					set_global_flag = china_united_front_defeated
				}
				else_if = {
					limit = { has_country_flag = was_in_united_front }
					clr_country_flag = was_in_united_front
					clear_rule = { can_not_declare_war = yes }
				}
			}

			#Mark SHX as having died without becoming a contender or becoming a puppet
			FROM = {
				if = {
					limit = {
						FROM = {
							tag = SHX
							NOT = { has_country_flag = SHX_game_progression_recorded_flag }
						}
					}
					if = {
						limit = {
							has_country_leader = { character = SHX_yan_xishan ruling_only = yes }
							has_country_flag = SHX_renewed_alliance_outcome_flag
						}
						log = "KR_Event_Logging;SHX Game Progression - Yan Xishan, Renewed Alliance, Died Independent"
						set_country_flag = SHX_game_progression_recorded_flag
					}
					else_if = {
						limit = {
							has_country_leader = { character = SHX_yan_xishan ruling_only = yes }
							NOT = { has_country_flag = SHX_renewed_alliance_outcome_flag }
						}
						log = "KR_Event_Logging;SHX Game Progression - Yan Xishan, Standard Path, Died Independent"
						set_country_flag = SHX_game_progression_recorded_flag
					}
					else_if = {
						limit = {
							has_country_leader = { character = SHX_feng_yuxiang ruling_only = yes }
							has_country_flag = SHX_feng_manchu_coup_outcome_flag
						}
						log = "KR_Event_Logging;SHX Game Progression - Feng Yuxiang, Manchu Coup, Died Independent"
						set_country_flag = SHX_game_progression_recorded_flag
					}
					else_if = {
						limit = {
							has_country_leader = { character = SHX_feng_yuxiang ruling_only = yes }
							NOT = { has_country_flag = SHX_feng_manchu_coup_outcome_flag }
						}
						log = "KR_Event_Logging;SHX Game Progression - Feng Yuxiang, Standard Path, Died Independent"
						set_country_flag = SHX_game_progression_recorded_flag
					}
				}
			}
			#Fire Yu Xuezhong joining FNG event
			if = {
				limit = {
					FROM = {
						tag = QIE
						has_character = QIE_yu_xuezhong
					}
				}
				FNG = { country_event = { id = fengtian.500 days = 30 } }
			}
			#If Zhili Exiles do not conquer Beijing and QIE dies, they receive an alt event enabling endgame content
			if = {
				limit = {
					FROM = {
						tag = QIE
						china_is_aligned_with_manchu = yes
					}
					SZC = {
						SZC_zhili_in_exile = yes
						NOT = { owns_state = 608 }
					}
				}
				SZC = { country_event = { id = sichuan.283 } }
			}
			#Zhao joins Wu Peifu in Republic
			if = {
				limit = {
					FROM = { has_character = HNN_zhao_hengti }
					tag = QIE
					NOT = { has_country_leader = { character = QIE_aisin_gioro_puyi } }
				}
				set_temp_variable = { QIE_zhao_home = FROM }
				FROM = { save_event_target_as = zhao_home }
				QIE = { country_event = { id = qiefor.118 days = 5 } }
			}
			#Hu Shih pardons CJ
			if = {
				limit = {
					FROM = {
						has_country_leader = { character = GXC_chen_jiongming }
					}
					ROOT = {
						tag = QIE
						has_country_leader = { character = QIE_hu_shih }
					}
				}
				QIE = { country_event = { id = qieflavor.100 days = 5 } }
			}
		}
	}

	# ROOT is the new faction leader FROM is the old faction leader
	on_assume_faction_leadership = {
		effect = {
			if = {
				limit = { FROM = { tag = CUF } }
				save_global_event_target_as = china_united_front_leader
			}
		}
	}

	# ROOT is capitulated country, FROM is winner
	on_capitulation_immediate = {
		effect = {
			#Remove all puppets
			if = {
				limit = {
					num_subjects > 0
					is_chinese_tag = yes
					NOT = { is_in_faction_with = CUF } #Governments in the United Front stay united.
					FROM = { is_chinese_tag = yes }
				}
				every_subject_country = {
					overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = autonomy_free
						}
					}
					set_variable = { former_overlord = ROOT }
				}
			}

			#Move the China target
			if = {
				limit = { tag = CHN }
				find_next_chinese_target = yes
			}
			#Restore Beijing VPs if QIE lost
			if = {
				limit = { tag = QIE }
				FROM = { country_event = qiefor.145 }
			}
			# Remove GEA-related ideas
			else_if = {
				limit = { tag = GEA }
				LEP = { country_event = Ostasien.213 }
				QIE = { country_event = Ostasien.213 }
				SHD = { country_event = Ostasien.213 }
				SZC = { country_event = Ostasien.213 }
			}

			# Revert Wuxi's VPs
			if = {
				limit = {
					has_global_flag = LEP_wuxi_vp_increased
					FROM = { owns_state = 613 } #Nanjing
				}
				clr_global_flag = LEP_wuxi_vp_increased
				add_victory_points = { province = 10076 value = -5 }
			}

			# logging
			if = {
				limit = { tag = QIE }
				log = "KR_Event_Logging;QIE FALLS"
			}
			else_if = {
				limit = { tag = FNG }
				log = "KR_Event_Logging;FNG FALLS"
			}
			else_if = {
				limit = { tag = YUN }
				log = "KR_Event_Logging;YUN FALLS"
			}
			else_if = {
				limit = { tag = SHX }
				log = "KR_Event_Logging;SHX FALLS"
			}
			else_if = {
				limit = { tag = SZC }
				log = "KR_Event_Logging;SZC FALLS"
			}
		}
	}

	on_civil_war_end = {
		effect = {
			if = {
				limit = { original_tag = GXC }
				country_event = lngcivilwar.13
				country_event = lngcivilwar.14
				country_event = lngcivilwar.15
				country_event = lngcivilwar.16
				country_event = lngcivilwar.20
				remove_ideas = GXC_civil_war_spirit
			}
		}
	}

	#ROOT is winner #FROM gets annexed - This fires just before FROM gets annexed, meaning the country and everything it owns still exists. It will also fire on_annex and on_civil_war_end
	on_civil_war_end_before_annexation = {
		effect = {
			# GXC civil war cleanup
			if = {
				limit = { original_tag = GXC }
				remove_targeted_decision = { decision = GXC_mobilize_merchant_corps target = THIS }
				remove_targeted_decision = { decision = GXC_mobilize_gentry_militia target = THIS }
				FROM = {
					every_character = {
						limit = { has_character_flag = GXC_neutral_character }
						set_nationality = ROOT
					}
					remove_targeted_decision = { decision = GXC_mobilize_merchant_corps target = THIS }
					remove_targeted_decision = { decision = GXC_mobilize_gentry_militia target = THIS }
				}
				if = {
					limit = { GXC_has_guangdong_government = yes }
					if = {
						limit = { has_global_flag = GXC_new_guangxi_clique_took_over }
						GXC_new_guangxi_clique_flees = yes
					}
					else = {
						GXC_old_guangxi_clique_flees = yes
					}
				}
				else_if = {
					limit = { GXC_has_federalist_government = no }
					GXC_federalists_flee = yes
				}
				FROM = {
					every_subject_country = {
						limit = { has_capitulated = no }
						FROM = {
							set_autonomy = {
								target = PREV
								autonomy_state = autonomy_free
							}
						}
						white_peace = ROOT
					}
				}
			}
		}
	}

	# ROOT is country
	on_daily_QIE = {
		effect = {
			if = {
				limit = {
					has_dynamic_modifier = { modifier = QIE_german_influence_dynamic_modifier }
				}
				QIE_recalculate_peking_commission = yes
			}
			if = {
				limit = {
					has_dynamic_modifier = { modifier = QIE_yiguandao_influence_dynamic_modifier }
				}
				QIE_recalculate_yiguandao_influence = yes
			}
		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
			# China attacking LEC
			if = {
				limit = {
					is_chinese_tag = yes
					FROM = { tag = LEC }
				}
				set_country_flag = LEC_war
				every_other_country = {
					limit = {
						OR = {
							has_subject = LEC #overlord
							is_in_faction_with = LEC #allies
							has_guaranteed = LEC #guarantors
							any_allied_country = { has_guaranteed = LEC } #allies of guarantors
						}
						NOT = { JAP = { is_ally_with = PREV } }
					}
					set_country_flag = LEC_war_backer
				}
			}

			# Chinese clique attacking United Front
			if = {
				limit = {
					is_chinese_tag = yes
					is_in_faction = no
					FROM = { is_in_faction_with = event_target:china_united_front_leader }
				}
				set_country_flag = china_refused_ceasefire
			}

			# LEC council member at war with LEC
			if = {
				limit = { FROM = { tag = LEC } }
				country_event = lec.142
			}

			# SHX getting their mounting exhaustion mission
			if = {
				limit = {
					tag = SHX
					NOT = {
						FROM = {
							owns_state = 616 #This excludes Suiyuan campaign because that has its own
							OR = {
								tag = MON
								tag = XSM
							}
						}
						has_active_mission = SHX_collapse_of_shanxi
						has_completed_focus = SHX_towards_the_dream_of_unification
					}
				}
				activate_mission = SHX_collapse_of_shanxi
				if = {
					limit = { has_idea = SHX_strict_neutrality }
					remove_ideas = SHX_strict_neutrality
				}
				else_if = {
					limit = { has_idea = SHX_strict_neutrality1 }
					remove_ideas = SHX_strict_neutrality1
				}
			}
		}
	}

	on_government_change = {
		effect = {
			if = {
				limit = { tag = BEL }
				if = {
					limit = { has_socialist_government = yes }
					LEC = { country_event = { id = lec.48 days = 2 } }
				}
			}
			#Move the China target
			if = {
				limit = {
					tag = CHN
					is_subject = yes
				}
				find_next_chinese_target = yes
			}
		}
	}

	on_new_term_election = {
		effect = {
			### East Turkestan ###
			if = {
				limit = { tag = ETS }
				country_event = ETS.100	#Temur
				country_event = ETS.101	#Democratic
			}
			### Qing ###
			else_if = {
				limit = { tag = QIE }
				country_event = qiecoup.32 #Sham elections... unless
				country_event = qieelection.3
				country_event = qieelection.4
			}
			### Liangguang ###
			else_if = {
				limit = { original_tag = GXC }
				country_event = lngkmt.11 #Li Zongren's RoC after political tutelage
				country_event = lngupc.30 #UPC
			}
			### Sichuan ###
			else_if = {
				limit = { tag = SZC }
				country_event = sichuan.510
				country_event = lngupc.30 #UPC
			}
			### Mongolia ###
			else_if = {
				limit = { tag = MON }
				country_event = mon.119
			}
			### Tibet ###
			else_if = {
				limit = { tag = TIB }
				country_event = tib.52
				country_event = tib.53
			}
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			if = {
				limit = { tag = event_target:china_united_front_leader }
				FROM = {
					set_country_flag = was_in_united_front
					set_rule = {
						can_not_declare_war = yes
						desc = china_cannot_declare_war_while_in_united_front
					}
					every_subject_country = {
						set_country_flag = was_in_united_front
						set_rule = {
							can_not_declare_war = yes
							desc = china_cannot_declare_war_while_in_united_front
						}
					}
				}
				get_highest_scored_country_temp = { scorer = best_tag_for_chinese_united_front_leader }
				var:highest_scored_country = { set_faction_leader = yes }
			}
		}
	}

	on_ruling_party_change_immediate = {
		effect = {
			if = {
				limit = {
					china_is_potential_government = yes
					china_is_governorate = yes
				}
				clear_potential_national_government = yes
			}

			# Japan notified that FNG has been puppeted
			if = {
				limit = {
					tag = FNG
					NOT = { has_global_flag = JAP_defeated_by_china }
				}
				JAP = { country_event = { id = fengtian.136 } }
			}
			else_if = {
				limit = { original_tag = TAI }
				if = {
					limit = {
						OR = {
							has_government = totalist
							has_government = syndicalist
						}
					}
					activate_advisor = TAI_jian_ji_sic
				}
				else_if = {
					limit = {
						OR = {
							has_government = radical_socialist
							has_government = social_democrat
						}
					}
					activate_advisor = TAI_cai_peihuo_sic
				}
				else_if = {
					limit = {
						OR = {
							has_government = social_liberal
							has_government = market_liberal
						}
					}
					activate_advisor = TAI_liao_wenyi_sic
				}
				else_if = {
					limit = {
						OR = {
							has_government = social_conservative
							has_government = authoritarian_democrat
						}
					}
					activate_advisor = TAI_chen_fengyuan_sic
				}
				else = {
					activate_advisor = TAI_lan_gaochuan_sic
				}
			}
			else_if = {
				limit = { original_tag = SHD }
				if = {
					limit = { #change zhang's uniform if he is deposed or puppeted
						OR = {
							NOT = { has_country_leader = { character = SHD_zhang_zongchang } }
							is_subject_of = FNG
						}
					}
					SHD_zhang_zongchang = {
						set_portraits = {
							army = {
								large = GFX_portrait_SHD_zhang_zongchang_fengtian_large
								small = GFX_portrait_SHD_zhang_zongchang_fengtian_small
							}
						}
					}
				}
			}
		}
	}

	#ROOT is winner #FROM is loser
	on_peaceconference_started = {
		effect = {
			#Did FNG have a wargoal on the owner of Beijing?
			if = {
				limit = {
					var:608.owner = { is_chinese_tag = yes }
					FNG = {
						exists = yes
						is_subject = no
						has_capitulated = no
						OR = {
							has_war_with_wargoal_against = {
								target = 608.owner
								type = annex_everything
							}
							var:608.owner = {
								has_war_with_wargoal_against = {
									target = PREV
									type = annex_everything
								}
							}
							AND = {
								has_completed_focus = FNG_Begin_the_War_of_National_Reclamation
								has_wargoal_against = {
									target = 608.owner
									type = annex_everything
								}
							}
						}
					}
				}
				var:608.owner = { save_global_event_target_as = FNG_had_wargoal_on_beijing }
			}
		}
	}

	#ROOT is winner #FROM is loser
	on_peaceconference_ended = {
		effect = {
			#Chinese United Front
			if = {
				limit = {
					OR = {
						has_country_flag = was_in_united_front
						FROM = { has_country_flag = was_in_united_front }
					}
				}
				if = {
					limit = { country_exists = event_target:china_united_front_leader }
					event_target:china_united_front_leader = { country_event = { id = china_events.23 days = 1 random_days = 3 } }
				}
				else_if = {
					limit = { has_event_target = china_united_front_leader }
					every_possible_country = {
						limit = { has_country_flag = china_united_front_can_join_factions }
						clr_country_flag = china_united_front_can_join_factions
						clear_rule = { can_join_factions = yes }
					}
					every_possible_country = {
						limit = { has_country_flag = was_in_united_front }
						clr_country_flag = was_in_united_front
						clear_rule = { can_not_declare_war = yes }
					}
					clear_global_event_target = china_united_front_leader
				}
				else = {
					clr_country_flag = was_in_united_front
					clear_rule = { can_not_declare_war = yes }
				}
			}

			#Peace out unreachable puppets
			if = {
				limit = {
					is_valid_peace_target = yes
					NOT = { country_exists = FROM } #== was annexed
				}
				every_enemy_country = {
					limit = {
						check_variable = { former_overlord = FROM }
						is_subject = no
						OR = {
							is_in_faction = yes
							is_faction_leader = no
						}
						has_capitulated = no
						NOT = { is_neighbor_of = ROOT }
						NOT = { any_neighbor_country = { is_ally_with = ROOT } }
					}
					white_peace = ROOT
					clear_variable = former_overlord
				}
			}

			# Peace out MON if unreachable and TIB capitulates
			if = {
				limit = {
					FROM = {
						tag = MON
						exists = no #== was annexed
					}
					has_war_with = TIB
					is_valid_peace_target = yes
					TIB = {
						is_valid_peace_target = yes
						NOT = {
							is_neighbor_of = ROOT
							any_home_area_neighbor_country = {
								OR = {
									is_ally_with = ROOT
									AND = {
										has_war_with = PREV
										gives_military_access_to = ROOT
									}
								}
							}
							any_owned_state = { is_claim_or_core_of_ROOT = yes }
						}
					}
				}
				TIB = { white_peace_with_ROOT = yes }
			}
			# Peace out TIB if unreachable and MON capitulates
			if = {
				limit = {
					FROM = {
						tag = TIB
						exists = no #== was annexed
					}
					has_war_with = MON
					is_valid_peace_target = yes
					MON = {
						is_valid_peace_target = yes
						NOT = {
							is_neighbor_of = ROOT
							any_home_area_neighbor_country = {
								OR = {
									is_ally_with = ROOT
									AND = {
										has_war_with = PREV
										gives_military_access_to = ROOT
									}
								}
							}
							any_owned_state = { is_claim_or_core_of_ROOT = yes }
						}
					}
				}
				MON = { white_peace_with_ROOT = yes }
			}

			#Give FNG a wargoal on the new owner of Beijing if they were at war
			if = {
				limit = {
					has_event_target = FNG_had_wargoal_on_beijing
					event_target:FNG_had_wargoal_on_beijing = { NOT = { owns_state = 608 } }
					var:608.owner = { is_chinese_tag = yes }
					FNG = { can_declare_war_on = 608.owner }
				}
				clear_global_event_target = FNG_had_wargoal_on_beijing
				FNG = {
					if = {
						limit = { var:608.owner = { is_ai = no } }
						set_country_flag = { flag = FNG_beijing_war_declaration_cooldown days = 40 value = 1 }
					}
					create_wargoal = {
						target = 608.owner
						type = annex_everything
					}
				}
			}

			#Legation Concession Ask
			if = {
				limit = {
					tag = LEC
					NOT = { has_country_flag = LEC_asking_for_concessions }
				}
				set_country_flag = { flag = LEC_asking_for_concessions days = 24 value = 1 }
				country_event = { id = lec.126 days = 12 }
			}

			# Sichuan events
			if = {
				limit = {
					tag = SZC
					FROM = { tag = QIE }
				}
				ROOT = { country_event = sichuan.277 }
			}

			if = {
				limit = {
					has_country_flag = NPA_revolt
					FROM = { has_country_flag = NPA_revolt }
				}
				country_event = { id = npa.14 days = 1 }
			}

			# Completes FNG unification conference faction-joining when intra-faction wars end
			if = {
				limit = {
					has_country_flag = FNG_warring_unifconference_member
					FNG = {
						is_subject = no
					}
					is_subject = no
					NOT = {
						any_enemy_country = {
							is_in_array = { FNG.FNG_conference_support = THIS }
						}
					}
				}
				clr_country_flag = FNG_warring_unifconference_member
				country_event = { id = fngconf.82 hours = 3 random_hours = 24 }
			}

			#Restore Beijing VPs if QIE won
			if = {
				limit = { tag = QIE }
				country_event = qiefor.146
			}

			# Right KMT GXC getting YUN KMT generals
			if = {
				limit = {
					china_is_aligned_with_kmt = yes
					NOT = { has_country_leader = { character = SHX_feng_yuxiang } }
					FROM = {
						original_tag = YUN
						exists = no #== was annexed
					}
				}
				country_event = { id = lngkmt.23 days = 2 }
			}

			### LEP war system events
			country_event = lepcollapse.26
			country_event = lepcollapse.27
			country_event = lepcollapse.28
			country_event = lepcollapse.29

			### Sets a flag for LEP beating CHI, for ANQ events (located in the FNG event file).
			if = {
				limit = {
					tag = LEP
					FROM = {
						tag = CHI
					}
				}
				ANQ = {
					set_country_flag = ANQ_lep_beat_chi #This flag was unset by the original designer, hopefully it's now working as intended.
				}
			}

			###Resets the League War surrender limit buff upon someone losing to prevent peace conference/civil war shenanigans
			if = {
				limit = {
					FROM = {
						OR = {
							tag = ANQ
							tag = CHI
							tag = LEP
							tag = SHD
						}
					}
					ROOT = {
						OR = {
							tag = ANQ
							tag = CHI
							tag = LEP
							tag = SHD
						}
					}
					has_global_flag = LEP_war
					NOT = { has_global_flag = LEP_league_war_over }
				}
				if = {
					limit = {
						ANQ = {
							has_idea = defend_nanjing_ANQ
							NOT = { controls_state = 613 }
						}
					}
					ANQ = { remove_ideas = defend_nanjing_ANQ }
				}
				if = {
					limit = {
						CHI = {
							has_idea = defend_nanjing_CHI
							NOT = { controls_state = 613 }
						}
					}
					CHI = { remove_ideas = defend_nanjing_CHI }
				}
				if = {
					limit = {
						LEP = {
							has_idea = defend_nanjing_LEP
							NOT = { controls_state = 613 }
						}
					}
					LEP = { remove_ideas = defend_nanjing_LEP }
				}
				if = {
					limit = {
						SHD = {
							has_idea = defend_nanjing_SHD
							NOT = { controls_state = 613 }
						}
					}
					SHD = { remove_ideas = defend_nanjing_SHD }
				}
				var:613.controller = {
					if = {
						limit = {
							tag = ANQ
						}
						add_ideas = defend_nanjing_ANQ
					}
					else_if = {
						limit = {
							tag = CHI
						}
						add_ideas = defend_nanjing_CHI
					}
					else_if = {
						limit = {
							tag = LEP
						}
						add_ideas = defend_nanjing_LEP
					}
					else_if = {
						limit = {
							tag = SHD
						}
						add_ideas = defend_nanjing_SHD
					}
				}
			}

			#Fallback so ETS revolt will occur event if SIK falls early
			if = {
				limit = {
					FROM = { tag = SIK }
					KUM = { NOT = { has_country_flag = KUM_ETS_rose_up_flag } }
				}
				KUM = { country_event = { id = xin.34 days = 7 } } #The Southern Revolt - Prevents an edge case where ETS never got a chance to rise up because KUM blitz ETS
			}

			#Shanxi will go into lategame if they decide to be cute and avoid taking any of the major cities.
			#Will be a bit generous though - Shanxi + Shaanxi + Heluo (aka Arrowhead SHX from a total Central Plains War win) is 5 states.
			#All of XSM + Northern Chahar is 13. So 15 states will be the amount that tips the edge.
			#Must also check to make sure SHX took some states in the East because otherwise the content doesn't make too much sense.
			if = {
				limit = {
					ROOT = {
						tag = SHX
						check_variable = { num_owned_states > 14 }
						any_owned_state = {
							OR = {
								state = 1062 #Baoding
								state = 1061 #Shimen
								state = 1060 #Hebi
								state = 1059 #Kaifeng
								state = 1058 #Ruyang
								state = 620 #Xiangyang
							}
						}
						NOT = { has_country_flag = SHX_lategame_begin_flag }
					}
				}
				country_event = { id = shx_endgame.1 days = 3 } #A Rising Power in the North
			}

			#End of Northwestern Conflict if player ignored surrender event or ai accidentally annexed a tag
			if = {
				limit = {
					OR = {
						tag = MON
						tag = TIB
						tag = XSM
					}
					OR = {
						FROM = { tag = MON }
						FROM = { tag = TIB }
						FROM = { tag = XSM }
					}
					has_global_flag = northwest_conflict_begun
					NOT = { has_global_flag = northwest_conflict_ended }
					NOT = { TIB = { has_war_with = XSM } }
					NOT = { MON = { has_war_with = XSM } }
					OR = {
						MON = { has_country_flag = MON_defeated_in_northwest_war_flag }
						NOT = { country_exists = MON }
						NOT = { country_exists = XSM }
					}
				}
				set_global_flag = northwest_conflict_ended
				TIB = { country_event = { id = tib.2 days = 370 } }
				XSM = { country_event = { id = mac.208 days = 3 } }
			}

			#Gives Chinese fleet (usually QIE) to someone if it wasn't claimed already in the peace conference.
			if = {
				limit = {
					FROM = {
						is_chinese_tag = yes
						has_navy_size = { size > 0 }
					}
				}
				if = {
					#Goes to CHN first since that's the strongest/most legitimate tag
					limit = { country_exists = CHN }
					CHN = { FROM = { transfer_navy = { target = PREV } } }
				}
				else_if = {
					#Then goes to the owner of Beijing
					limit = { var:608.owner = { is_chinese_tag = yes } }
					608.owner = { FROM = { transfer_navy = { target = PREV } } }
				}
				else_if = {
					#Then goes to the owner of Hangzhou
					limit = { var:596.owner = { is_chinese_tag = yes } }
					596.owner = { FROM = { transfer_navy = { target = PREV } } }
				}
				else_if = {
					#Then goes to the owner of Guangzhou
					limit = { var:592.owner = { is_chinese_tag = yes } }
					592.owner = { FROM = { transfer_navy = { target = PREV } } }
				}
			}
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			if = { #Remove FNG Mantetsu Monopoly modifier
				limit = {
					NOT = { tag = FNG }
					FROM.FROM = { has_dynamic_modifier = { modifier = FNG_mantetsu_monopoly } }
				}
				FROM.FROM = {
					set_state_flag = FNG_monopoly
					remove_dynamic_modifier = { modifier = FNG_mantetsu_monopoly }
				}
			}
			if = { #Remove QIE Beiyang Patronage modifier
				limit = {
					NOT = { tag = QIE }
					FROM.FROM = { has_dynamic_modifier = { modifier = QIE_beiyang_patronage_dynamic_modifier } }
				}
				FROM.FROM = { remove_dynamic_modifier = { modifier = QIE_beiyang_patronage_dynamic_modifier } }
			}
			else_if = {
				limit = {
					NOT = { tag = QIE }
					FROM.FROM = { has_dynamic_modifier = { modifier = QIE_hubei_generals_dynamic_modifier } }
				}
				FROM.FROM = { remove_dynamic_modifier = { modifier = QIE_hubei_generals_dynamic_modifier } }
			}
			if = { #Remove SHX Beiyang Patronage modifier
				limit = {
					NOT = { tag = SHX }
					FROM.FROM = { has_dynamic_modifier = { modifier = SHX_beiyang_patronage_state_modifier } }
				}
				FROM.FROM = { remove_dynamic_modifier = { modifier = SHX_beiyang_patronage_state_modifier } }
			}
			if = { #Dihua and Aksu fall during Xinjiang war
				limit = {
					FROM = {
						tag = SIK
						has_idea = SIK_enemies_all_sides
						NOT = {
							controls_province = 4709
							controls_province = 4682
						}
					}
					FROM.FROM = { state = 617 }
				}
				FROM = {
					force_capitulate = yes
				}
			}
			if = { #Give League War surrender limit buff to Nanjing's new controller
				limit = {
					FROM = {
						OR = {
							tag = ANQ
							tag = CHI
							tag = LEP
							tag = SHD
						}
						NOT = { controls_province = 11913 }
					}
					ROOT = {
						OR = {
							tag = ANQ
							tag = CHI
							tag = LEP
							tag = SHD
						}
					}
					FROM.FROM = { state = 613 }
					has_global_flag = LEP_war
					NOT = { has_global_flag = LEP_league_war_over }
				}
				FROM = {
					if = {
						limit = {
							tag = ANQ
						}
						remove_ideas = defend_nanjing_ANQ
					}
					else_if = {
						limit = {
							tag = CHI
						}
						remove_ideas = defend_nanjing_CHI
					}
					else_if = {
						limit = {
							tag = LEP
						}
						remove_ideas = defend_nanjing_LEP
					}
					else_if = {
						limit = {
							tag = SHD
						}
						remove_ideas = defend_nanjing_SHD
					}
				}
				ROOT = {
					if = {
						limit = {
							tag = ANQ
						}
						add_ideas = defend_nanjing_ANQ
					}
					else_if = {
						limit = {
							tag = CHI
						}
						add_ideas = defend_nanjing_CHI
					}
					else_if = {
						limit = {
							tag = LEP
						}
						add_ideas = defend_nanjing_LEP
					}
					else_if = {
						limit = {
							tag = SHD
						}
						add_ideas = defend_nanjing_SHD
					}
				}
			}

			# Recalculate GEA AOG bonus
			if = {
				limit = {
					FROM.FROM = {
						OR = {
							state = 592
							state = 802
							state = 803
							state = 1075
						}
					}
				}
				if = {
					limit = {
						GEA_chinese_state_controller_is_friendly_power = yes
						FROM = { GEA_chinese_state_controller_is_friendly_power = no }
					}
					GEA = {
						add_to_variable = { GEA_AOG_CITIES = -0.1 }
						add_to_variable = { GEA_AOG_CITIES_NUMBER = 1 }
					}
				}
				else_if = {
					limit = {
						GEA_chinese_state_controller_is_friendly_power = no
						FROM = { GEA_chinese_state_controller_is_friendly_power = yes }
					}
					GEA = {
						add_to_variable = { GEA_AOG_CITIES = 0.1 }
						add_to_variable = { GEA_AOG_CITIES_number = -1 }
					}
				}
			}

			# Zhili Remnant events
			if = {
				limit = {
					has_war_with = QIE
					OR = {
						has_completed_focus = SZC_The_Zhilis_Last_Stand
						AND = {
							is_in_faction = yes
							faction_leader = { has_completed_focus = SZC_The_Zhilis_Last_Stand }
						}
					}
				}
				if = {
					limit = { FROM.FROM = { state = 607 } } #Luoyang
					country_event = { id = sichuan.274 hours = 8 random_hours = 16 }
				}
				else_if = {
					limit = { FROM.FROM = { state = 1048 } } #Wuhan
					country_event = { id = sichuan.275 hours = 8 random_hours = 16 }
				}
				else_if = {
					limit = { FROM.FROM = { state = 608 } } #Beijing
					country_event = { id = sichuan.276 hours = 8 random_hours = 16 }
				}
			}

			# SHX-QIE Manchu Coup Central Plains War Fall of Yulin
			if = {
				limit = {
					tag = QIE
					has_idea = QIE_zhili_manchu_war_idea
					FROM.FROM = { state = 799 } #Yulin
				}
				SHX = { country_event = { id = shx_manchu.10 days = 3 } } #Give SHX a grace period to recapture it
			}

			#Fengtian Captures Beijing.
			if = {
				limit = {
					FNG = { has_country_flag = FNG_took_beijing }
					FROM.FROM = { state = 608 }
				}
				FNG = { clr_country_flag = FNG_took_beijing }
			}
			if = {
				limit = {
					ROOT = { tag = FNG }
					FROM.FROM = { state = 608 }
				}
				ROOT = {
					set_country_flag = FNG_took_beijing
				}
			}

			# Fengtian events
			if = {
				limit = {
					tag = FNG
					FROM.FROM = { state = 608 }
					NOT = { has_country_flag = FNG_conference_fired }
				}
				activate_mission = FNG_Secure_Beijing
				country_event = { id = fengtian.132 days = 1 random_hours = 96 }
			}
			if = {
				limit = {
					FROM = {
						tag = FNG
						has_country_flag = FNG_conference_fired
					}
					FROM.FROM = { state = 608 }
				}
				FROM = { country_event = fngconf.32 }
			}
			if = {
				limit = { original_tag = FNG }
				if = {
					limit = { FROM.FROM = { state = 608 } } #Jingzhao
					country_event = { id = fengtian.270 days = 3 } #Matters of Occupation
					country_event = { id = fengtian.271 days = 38 } #Feeding the North China Plain
					country_event = { id = fengtian.272 days = 14 } #Scandal in Beijing
				}
				else_if = {
					limit = { FROM.FROM = { state = 1062 } } #Baoding
					country_event = { id = fengtian.274 days = 9 } #Disorder at Baoding
				}
				else_if = {
					limit = { FROM.FROM = { state = 1059 } } #Kaifeng
					country_event = { id = fengtian.276 days = 2 } #Railway Chaos in Zhengzhou
				}
				else_if = {
					limit = { FROM.FROM = { state = 607 } } #Heluo
					country_event = { id = fengtian.277 days = 9 } #Bandits against Bandits
				}
				else_if = {
					limit = { FROM.FROM = { state = 1048 } } #Wuhan
					country_event = { id = fengtian.280 days = 9 } #Disorder at Baoding
				}
				else_if = {
					limit = { FROM.FROM = { state = 1063 } } #Dezhou
					country_event = { id = fengtian.34 days = 36 random_hours = 1500 } #Red Spears in Dezhou
				}
				else_if = {
					limit = { FROM.FROM = { state = 1061 } } #Daming
					country_event = { id = fengtian.35 days = 36 random_hours = 1500 } # Deserters Rise up in Daming
				}
				else_if = {
					limit = { FROM.FROM = { state = 1058 } } #Ruyang
					country_event = { id = fengtian.36 days = 36 random_hours = 1500 } # Warlords Resist in Ruyang
				}
				else_if = {
					limit = { FROM.FROM = { state = 799 } } #Guangzhong
					country_event = { id = fengtian.37 days = 36 random_hours = 1500 } # Bandits Sweep Guangzhong
				}
				else_if = {
					limit = { FROM.FROM = { state = 743 } } #Shanghai
					country_event = { id = fengtian.322 days = 2 } #Jubilation over the Return of the Legation Cities
				}
				else_if = {
					limit = { FROM.FROM = { state = 744 } } #Qingdao
					country_event = { id = fengtian.323 days = 2 } #The Five Color Flag Flies in Qingdao!
				}
				else_if = {
					limit = { FROM.FROM = { state = 729 } } #Macau
					country_event = { id = fengtian.324 days = 2 } #Macau is returned to China!
				}
			}

			# Yunnan events
			if = {
				limit = {
					FROM.FROM = { state = 671 }
				}
				YUN = {
					country_event = { id = yun.156 days = 1 }
				}
			}

			# Fengtian events
			if = {
				limit = {
					FROM = { tag = QIE }
					FNG = {
						exists = yes
						is_ally_with = ROOT
					}
				}
				LEP = { country_event = { id = lep.200 days = 10 } }
				FNG = { country_event = { id = lep.205 hours = 6 } }
			}

			if = { #Capture of Luoyang
				limit = {
					is_chinese_tag = yes
					FROM = { original_tag = QIE }
					FROM.FROM = { state = 607 }
				}
				country_event = { id = qieflavor.28 hours = 3 }
			}

			if = { # Update Morale
				limit = {
					OR = {
						has_idea = league_collapse_ANQ
						has_idea = league_collapse_CHI
						has_idea = league_collapse_SHD
						has_idea = league_collapse_LEP
					}
				}
				set_temp_variable = { strategic_value_temp = FROM.FROM.state_strategic_value }
				set_temp_variable = { state_name_temp = FROM.FROM }
				if = {
					limit = { check_variable = { FROM.FROM.state_strategic_value > 50 } }
					set_temp_variable = { change_league_war_morale_by = 25 }
				}
				else_if = {
					limit = { check_variable = { FROM.FROM.state_strategic_value > 25 } }
					set_temp_variable = { change_league_war_morale_by = 15 }
				}
				else_if = {
					limit = { check_variable = { FROM.FROM.state_strategic_value > 10 } }
					set_temp_variable = { change_league_war_morale_by = 10 }
				}
				else = {
					set_temp_variable = { change_league_war_morale_by = 5 }
				}

				china_update_morale = yes

				ROOT = {
					set_temp_variable = { change_league_war_morale_by = PREV.change_league_war_morale_by }
					multiply_temp_variable = { change_league_war_morale_by = -1 }
					china_update_morale = yes
				}
			}
			if = {#Shanxi plan modifers - give bonuses on taken state
				limit = { tag = SHX }
				if = {
					limit = {
						has_variable = SHX_states_available_for_setting_plans
						FROM.FROM = { has_state_flag = SHX_war_plan_flagged_state }
					}
					FROM.FROM = { SHX_convert_flag_modifier = yes }
				}
				if = {
					limit = {
						FROM.FROM = {
							OR = {
								state = 608 #Beijing
								state = 613 #Nanjing
								state = 1048 #Wuhan
							}
						}
					}
					SHX = { country_event = { id = shx_endgame.1 days = 3 } } #A Rising Power in the North
				}
				else_if = {
					limit = {
						NOT = {
							has_country_flag = SHX_lategame_begin_flag
							has_idea = SHX_war_of_liberation
						}
						FROM.FROM = {
							OR = {
								state = 1062 #Baoding
								state = 1061 #Shimen
								state = 1060 #Hebi
								state = 1059 #Kaifeng
								state = 1058 #Ruyang
								state = 620 #Xiangyang
							}
						}
					}
					country_event = shx_zhifeng.30 #Far from Home, Not Far From Victory
				}
			}

			if = {
				limit = {
					FROM = {
						is_in_faction_with = CUF
						is_faction_leader = yes
						has_war_with = ROOT
						surrender_progress > 0.85
					}
				}
				random_country = {
					limit = {
						is_in_faction_with = CUF
						is_faction_leader = no
						is_subject = no
						surrender_progress < 0.85
						is_chinese_tag = yes
						NOT = { original_tag = SIK }
						NOT = { original_tag = KUM }
						NOT = { original_tag = XSM }
					}
					save_event_target_as = new_faction_leader
				}
				if = {
					limit = { has_event_target = new_faction_leader }
					event_target:new_faction_leader = { set_faction_leader = yes }
				}
				else = {
					#Force Capitulate Northwestern Cliques if applicable
					if = {
						limit = {
							country_exists = XSM
							XSM = { is_in_faction_with = CUF }
							XSM = { has_war = yes }
							XSM = { has_capitulated = no }
							XSM = { is_ai = yes }
						}
						XSM = { force_capitulate = yes }
					}
					if = {
						limit = {
							country_exists = KUM
							KUM = { is_in_faction_with = CUF }
							KUM = { has_war = yes }
							KUM = { has_capitulated = no }
							KUM = { is_ai = yes }
						}
						KUM = { force_capitulate = yes }
					}
					if = {
						limit = {
							country_exists = SIK
							SIK = { is_in_faction_with = CUF }
							SIK = { has_war = yes }
							SIK = { has_capitulated = no }
							SIK = { is_ai = yes }
						}
						SIK = { force_capitulate = yes }
					}
					#Dismantle the Chinese United Front
					FROM = { dismantle_faction = yes }
					set_global_flag = china_united_front_defeated
				}
			}
		}
	}

	on_war = {
		effect = {
			if = {
				limit = { tag = LEC }
				country_event = { id = lec.19 days = 3 random_days = 7 }
			}
			else_if = {
				limit = { tag = FNG }
				if = { #Cuts Prince Kan'in Kotohito's Visit short
					limit = { has_country_flag = FNG_prince_visit }
					country_event = { id = fengtian.1500 hours = 12 }
				}
				country_event = { id = fengtian.30 days = 20 } #JAP temporarily removes Mantetsu Monopoly
			}
			else_if = {
				limit = { tag = YUN }
				country_event = { id = yun.29 days = 3 } #Zhu De intervenes
			}
			else_if = {
				limit = { tag = SHX }
				country_event = { id = shx_zhifeng.27 days = 5 } #War Disrupts Our Reforms
			}
		}
	}

	#ROOT = attacking side
	#FROM = defending side
	#fired when two countries end up at war with each other (on_war is fired when a country goes to war against anyone and is not fired again when it enters war against another country unless it went to peace first)
	on_war_relation_added = {
		effect = {
			if = {
				limit = {
					FROM = {
						has_war_with = LEC
						is_chinese_tag = yes
					}
					OR = {
						has_subject = LEC #overlord
						is_in_faction_with = LEC #allies
						has_guaranteed = LEC #guarantors
						any_allied_country = { has_guaranteed = LEC } #allies of guarantors
					}
				}
				set_country_flag = LEC_war_backer
			}
			else_if = {
				limit = {
					has_war_with = LEC
					is_chinese_tag = yes
					FROM = {
						OR = {
							has_subject = LEC #overlord
							is_in_faction_with = LEC #allies
							has_guaranteed = LEC #guarantors
							any_allied_country = { has_guaranteed = LEC } #allies of guarantors
						}
					}
				}
				FROM = { set_country_flag = LEC_war_backer }
			}

			if = {
				limit = {
					has_global_flag = LEP_war
					OR = {
						tag = LEP
						FROM = { tag = LEP }
					}
				}
				if = {
					limit = {
						OR = {
							tag = CHI
							FROM = { tag = CHI }
						}
					}
					LEP = { activate_mission = LEP_jiangxi_governor }
				}
				else_if = {
					limit = {
						OR = {
							tag = SHD
							FROM = { tag = SHD }
						}
					}
					LEP = { activate_mission = LEP_jiangsu_governor }
				}
			}
			if = {
				limit = {
					NOT = { has_global_flag = FNG_zhifeng_war_happened }
					OR = {
						tag = FNG
						tag = 608.owner
					}
					FROM = {
						OR = {
							tag = FNG
							tag = 608.owner
						}
					}
					OR = {
						is_subject = no
						FROM = { is_subject = no }
					}
				}
				set_global_flag = FNG_zhifeng_war_happened
				set_variable = { global.FNG_zhifeng_target = 608.owner }
				log = "KR_Event_Logging;FNG-QIE WAR START"
				news_event = { id = fengtian.502 hours = 6 }
				FNG = {
					remove_targeted_decision = { decision = FNG_Denounce_Qing_Monarchism target = QIE }
					remove_targeted_decision = { decision = FNG_Denounce_German_Imperialism target = GER }
					remove_targeted_decision = { decision = FNG_National_Irredentism target = THIS }
					remove_targeted_decision = { decision = FNG_Wu_Wang_Zai_Ju target = THIS }
					remove_targeted_decision = { decision = FNG_Escalate_the_Propaganda_War target = THIS }
					remove_targeted_decision = { decision = FNG_The_Yanshan_Plan target = THIS }
					remove_targeted_decision = { decision = FNG_Shanhaiguan_Infiltration target = THIS }
					country_event = fengtian.102
					if = {
						limit = { NOT = { has_completed_focus = FNG_Begin_the_War_of_National_Reclamation } }
						complete_national_focus = FNG_Begin_the_War_of_National_Reclamation
					}
				}
			}

			# Fengtian vs Japan
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = JAP
							tag = FNG
						}
					}
					FROM = {
						OR = {
							AND = {
								country_exists = JAP
								is_ally_with = JAP
							}
							AND = {
								country_exists = FNG
								is_ally_with = FNG
							}
						}
					}
					FNG_JAP_hostile = no
				}
				FNG_break_with_japan = yes
			}
			#SHX's On War Related Things
			if = {
				limit = {
					OR = {
						tag = SHX
						FROM = { tag = SHX }
					}
				}
				SHX = {
					if = {
						#Setup the Shanxi plan modifer on enemy states
						limit = { has_variable = SHX_states_available_for_setting_plans }
						SHX_add_flag_modifier = yes
					}
					if = {
						#Wang Xiang Being Deposed
						limit = {
							has_war_with = QIE
							SHX_wang_xiang = { has_advisor_role = second_in_command } #It's possible to have arrested him earlier.
						}
						country_event = { id = shx_zhifeng.105 days = 7 } #Confonting the Commercial Class
					}
				}
			}
			#Zhili Remnants War of Resistance Focus
			if = {
				limit = {
					NOT = { SZC = { has_completed_focus = SZC_War_Of_National_Resistance } }
					OR = {
						AND = {
							tag = SZC
							FROM = { is_major = yes }
						}
						AND = {
							is_major = yes
							FROM = { tag = SZC }
						}
					}
					SZC_zhili_in_exile = yes
				}
				SZC = { complete_national_focus = SZC_War_Of_National_Resistance } #if SZC at war with major, fire the focus
			}
		}
	}

	on_peace = {
		effect = {
			clr_country_flag = LEC_war_backer
			if = {
				limit = { tag = FNG }
				country_event = { id = fengtian.31 days = 20 }  #Re-applies FNG_mantetsu_monopoly
			}
			else_if = {
				limit = { tag = SIK }
				if = {
					limit = { has_idea = SIK_enemies_all_sides }
					remove_ideas = SIK_enemies_all_sides
				}
			}
			else_if = {
				limit = { tag = QIE }
				country_event = { id = shx_zhifeng.18 days = 2 } #Return Eastern Shanxi (615) to SHX after QIE victory
			}
			else_if = { #remove shanxi plan modifiers if the war ended
				limit = { tag = SHX }
				if = {
					limit = { has_variable = SHX_states_available_for_setting_plans }
					SHX_remove_flag_modifier = yes
				}
				if = {
					limit = {
						SHX = {
							has_country_flag = SHX_allowed_japanese_influence_flag
							has_global_flag = JAP_defeated_by_china #If Japan is totally defeated, don't allow this - part of the story is they are only partially defeated.
							SHX_komoto_daisaku = { is_political_advisor = yes }
							has_idea = SHX_tung_chi_mining_concern
							has_country_leader = { character = SHX_yan_xishan } #Yan Xishan OTL was the guy with a much closer relationship with Komoto Daisaku
						}
					}
					SHX = { country_event = { id = shx_japanese_infiltration.3 days = 30 random_days = 30 } } #Japanese Rearguards
				}
			}

			#if = {
			#	limit = { tag = NPA }
			#	country_event = { id = npa.8 days = 2 random_days = 7 }
			#}

			country_event = { id = lngupc.111 hours = 8 } #Country joins the UPC after finishing its wars

		}
	}
}

